// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/servicemanagement/v1/resources.proto

#include "google/api/servicemanagement/v1/resources.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace google {
namespace api {
namespace servicemanagement {
namespace v1 {
PROTOBUF_CONSTEXPR ManagedService::ManagedService(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.service_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.producer_project_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ManagedServiceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ManagedServiceDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ManagedServiceDefaultTypeInternal() {}
  union {
    ManagedService _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ManagedServiceDefaultTypeInternal _ManagedService_default_instance_;
PROTOBUF_CONSTEXPR OperationMetadata_Step::OperationMetadata_Step(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.status_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OperationMetadata_StepDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OperationMetadata_StepDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OperationMetadata_StepDefaultTypeInternal() {}
  union {
    OperationMetadata_Step _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OperationMetadata_StepDefaultTypeInternal _OperationMetadata_Step_default_instance_;
PROTOBUF_CONSTEXPR OperationMetadata::OperationMetadata(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.resource_names_)*/{}
  , /*decltype(_impl_.steps_)*/{}
  , /*decltype(_impl_.start_time_)*/nullptr
  , /*decltype(_impl_.progress_percentage_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OperationMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OperationMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OperationMetadataDefaultTypeInternal() {}
  union {
    OperationMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OperationMetadataDefaultTypeInternal _OperationMetadata_default_instance_;
PROTOBUF_CONSTEXPR Diagnostic::Diagnostic(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.location_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.kind_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DiagnosticDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DiagnosticDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DiagnosticDefaultTypeInternal() {}
  union {
    Diagnostic _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DiagnosticDefaultTypeInternal _Diagnostic_default_instance_;
PROTOBUF_CONSTEXPR ConfigSource::ConfigSource(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.files_)*/{}
  , /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ConfigSourceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConfigSourceDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConfigSourceDefaultTypeInternal() {}
  union {
    ConfigSource _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConfigSourceDefaultTypeInternal _ConfigSource_default_instance_;
PROTOBUF_CONSTEXPR ConfigFile::ConfigFile(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.file_path_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.file_contents_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.file_type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ConfigFileDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConfigFileDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConfigFileDefaultTypeInternal() {}
  union {
    ConfigFile _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConfigFileDefaultTypeInternal _ConfigFile_default_instance_;
PROTOBUF_CONSTEXPR ConfigRef::ConfigRef(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ConfigRefDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConfigRefDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConfigRefDefaultTypeInternal() {}
  union {
    ConfigRef _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConfigRefDefaultTypeInternal _ConfigRef_default_instance_;
PROTOBUF_CONSTEXPR ChangeReport::ChangeReport(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.config_changes_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ChangeReportDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChangeReportDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChangeReportDefaultTypeInternal() {}
  union {
    ChangeReport _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChangeReportDefaultTypeInternal _ChangeReport_default_instance_;
PROTOBUF_CONSTEXPR Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse::Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUseDefaultTypeInternal _Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR Rollout_TrafficPercentStrategy::Rollout_TrafficPercentStrategy(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.percentages_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Rollout_TrafficPercentStrategyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Rollout_TrafficPercentStrategyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Rollout_TrafficPercentStrategyDefaultTypeInternal() {}
  union {
    Rollout_TrafficPercentStrategy _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Rollout_TrafficPercentStrategyDefaultTypeInternal _Rollout_TrafficPercentStrategy_default_instance_;
PROTOBUF_CONSTEXPR Rollout_DeleteServiceStrategy::Rollout_DeleteServiceStrategy(
    ::_pbi::ConstantInitialized) {}
struct Rollout_DeleteServiceStrategyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Rollout_DeleteServiceStrategyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Rollout_DeleteServiceStrategyDefaultTypeInternal() {}
  union {
    Rollout_DeleteServiceStrategy _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Rollout_DeleteServiceStrategyDefaultTypeInternal _Rollout_DeleteServiceStrategy_default_instance_;
PROTOBUF_CONSTEXPR Rollout::Rollout(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.rollout_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.created_by_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.service_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.create_time_)*/nullptr
  , /*decltype(_impl_.status_)*/0
  , /*decltype(_impl_.strategy_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct RolloutDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RolloutDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RolloutDefaultTypeInternal() {}
  union {
    Rollout _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RolloutDefaultTypeInternal _Rollout_default_instance_;
}  // namespace v1
}  // namespace servicemanagement
}  // namespace api
}  // namespace google
static ::_pb::Metadata file_level_metadata_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto[12];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto[4];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto = nullptr;

const uint32_t TableStruct_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ManagedService, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ManagedService, _impl_.service_name_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ManagedService, _impl_.producer_project_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::OperationMetadata_Step, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::OperationMetadata_Step, _impl_.description_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::OperationMetadata_Step, _impl_.status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::OperationMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::OperationMetadata, _impl_.resource_names_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::OperationMetadata, _impl_.steps_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::OperationMetadata, _impl_.progress_percentage_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::OperationMetadata, _impl_.start_time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::Diagnostic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::Diagnostic, _impl_.location_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::Diagnostic, _impl_.kind_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::Diagnostic, _impl_.message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ConfigSource, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ConfigSource, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ConfigSource, _impl_.files_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ConfigFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ConfigFile, _impl_.file_path_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ConfigFile, _impl_.file_contents_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ConfigFile, _impl_.file_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ConfigRef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ConfigRef, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ChangeReport, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ChangeReport, _impl_.config_changes_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy, _impl_.percentages_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::Rollout_DeleteServiceStrategy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::Rollout, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::Rollout, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::Rollout, _impl_.rollout_id_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::Rollout, _impl_.create_time_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::Rollout, _impl_.created_by_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::Rollout, _impl_.status_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::Rollout, _impl_.service_name_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::Rollout, _impl_.strategy_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::google::api::servicemanagement::v1::ManagedService)},
  { 8, -1, -1, sizeof(::google::api::servicemanagement::v1::OperationMetadata_Step)},
  { 16, -1, -1, sizeof(::google::api::servicemanagement::v1::OperationMetadata)},
  { 26, -1, -1, sizeof(::google::api::servicemanagement::v1::Diagnostic)},
  { 35, -1, -1, sizeof(::google::api::servicemanagement::v1::ConfigSource)},
  { 43, -1, -1, sizeof(::google::api::servicemanagement::v1::ConfigFile)},
  { 52, -1, -1, sizeof(::google::api::servicemanagement::v1::ConfigRef)},
  { 59, -1, -1, sizeof(::google::api::servicemanagement::v1::ChangeReport)},
  { 66, 74, -1, sizeof(::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse)},
  { 76, -1, -1, sizeof(::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy)},
  { 83, -1, -1, sizeof(::google::api::servicemanagement::v1::Rollout_DeleteServiceStrategy)},
  { 89, -1, -1, sizeof(::google::api::servicemanagement::v1::Rollout)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::google::api::servicemanagement::v1::_ManagedService_default_instance_._instance,
  &::google::api::servicemanagement::v1::_OperationMetadata_Step_default_instance_._instance,
  &::google::api::servicemanagement::v1::_OperationMetadata_default_instance_._instance,
  &::google::api::servicemanagement::v1::_Diagnostic_default_instance_._instance,
  &::google::api::servicemanagement::v1::_ConfigSource_default_instance_._instance,
  &::google::api::servicemanagement::v1::_ConfigFile_default_instance_._instance,
  &::google::api::servicemanagement::v1::_ConfigRef_default_instance_._instance,
  &::google::api::servicemanagement::v1::_ChangeReport_default_instance_._instance,
  &::google::api::servicemanagement::v1::_Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse_default_instance_._instance,
  &::google::api::servicemanagement::v1::_Rollout_TrafficPercentStrategy_default_instance_._instance,
  &::google::api::servicemanagement::v1::_Rollout_DeleteServiceStrategy_default_instance_._instance,
  &::google::api::servicemanagement::v1::_Rollout_default_instance_._instance,
};

const char descriptor_table_protodef_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n/google/api/servicemanagement/v1/resour"
  "ces.proto\022\037google.api.servicemanagement."
  "v1\032\036google/api/config_change.proto\032\037goog"
  "le/api/field_behavior.proto\032\037google/prot"
  "obuf/timestamp.proto\"C\n\016ManagedService\022\024"
  "\n\014service_name\030\002 \001(\t\022\033\n\023producer_project"
  "_id\030\003 \001(\t\"\221\003\n\021OperationMetadata\022\026\n\016resou"
  "rce_names\030\001 \003(\t\022F\n\005steps\030\002 \003(\01327.google."
  "api.servicemanagement.v1.OperationMetada"
  "ta.Step\022\033\n\023progress_percentage\030\003 \001(\005\022.\n\n"
  "start_time\030\004 \001(\0132\032.google.protobuf.Times"
  "tamp\032f\n\004Step\022\023\n\013description\030\002 \001(\t\022I\n\006sta"
  "tus\030\004 \001(\01629.google.api.servicemanagement"
  ".v1.OperationMetadata.Status\"g\n\006Status\022\026"
  "\n\022STATUS_UNSPECIFIED\020\000\022\010\n\004DONE\020\001\022\017\n\013NOT_"
  "STARTED\020\002\022\017\n\013IN_PROGRESS\020\003\022\n\n\006FAILED\020\004\022\r"
  "\n\tCANCELLED\020\005\"\217\001\n\nDiagnostic\022\020\n\010location"
  "\030\001 \001(\t\022>\n\004kind\030\002 \001(\01620.google.api.servic"
  "emanagement.v1.Diagnostic.Kind\022\017\n\007messag"
  "e\030\003 \001(\t\"\036\n\004Kind\022\013\n\007WARNING\020\000\022\t\n\005ERROR\020\001\""
  "V\n\014ConfigSource\022\n\n\002id\030\005 \001(\t\022:\n\005files\030\002 \003"
  "(\0132+.google.api.servicemanagement.v1.Con"
  "figFile\"\225\002\n\nConfigFile\022\021\n\tfile_path\030\001 \001("
  "\t\022\025\n\rfile_contents\030\003 \001(\014\022G\n\tfile_type\030\004 "
  "\001(\01624.google.api.servicemanagement.v1.Co"
  "nfigFile.FileType\"\223\001\n\010FileType\022\031\n\025FILE_T"
  "YPE_UNSPECIFIED\020\000\022\027\n\023SERVICE_CONFIG_YAML"
  "\020\001\022\021\n\rOPEN_API_JSON\020\002\022\021\n\rOPEN_API_YAML\020\003"
  "\022\035\n\031FILE_DESCRIPTOR_SET_PROTO\020\004\022\016\n\nPROTO"
  "_FILE\020\006\"\031\n\tConfigRef\022\014\n\004name\030\001 \001(\t\"@\n\014Ch"
  "angeReport\0220\n\016config_changes\030\001 \003(\0132\030.goo"
  "gle.api.ConfigChange\"\371\005\n\007Rollout\022\027\n\nroll"
  "out_id\030\001 \001(\tB\003\340A\001\022/\n\013create_time\030\002 \001(\0132\032"
  ".google.protobuf.Timestamp\022\022\n\ncreated_by"
  "\030\003 \001(\t\022F\n\006status\030\004 \001(\01626.google.api.serv"
  "icemanagement.v1.Rollout.RolloutStatus\022c"
  "\n\030traffic_percent_strategy\030\005 \001(\0132\?.googl"
  "e.api.servicemanagement.v1.Rollout.Traff"
  "icPercentStrategyH\000\022b\n\027delete_service_st"
  "rategy\030\310\001 \001(\0132>.google.api.servicemanage"
  "ment.v1.Rollout.DeleteServiceStrategyH\000\022"
  "\024\n\014service_name\030\010 \001(\t\032\263\001\n\026TrafficPercent"
  "Strategy\022e\n\013percentages\030\001 \003(\0132P.google.a"
  "pi.servicemanagement.v1.Rollout.TrafficP"
  "ercentStrategy.PercentagesEntry\0322\n\020Perce"
  "ntagesEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\001:"
  "\0028\001\032\027\n\025DeleteServiceStrategy\"\215\001\n\rRollout"
  "Status\022\036\n\032ROLLOUT_STATUS_UNSPECIFIED\020\000\022\017"
  "\n\013IN_PROGRESS\020\001\022\013\n\007SUCCESS\020\002\022\r\n\tCANCELLE"
  "D\020\003\022\n\n\006FAILED\020\004\022\013\n\007PENDING\020\005\022\026\n\022FAILED_R"
  "OLLED_BACK\020\006B\n\n\010strategyB\377\001\n#com.google."
  "api.servicemanagement.v1B\016ResourcesProto"
  "P\001ZPgoogle.golang.org/genproto/googleapi"
  "s/api/servicemanagement/v1;servicemanage"
  "ment\242\002\004GASM\252\002!Google.Cloud.ServiceManage"
  "ment.V1\312\002!Google\\Cloud\\ServiceManagement"
  "\\V1\352\002$Google::Cloud::ServiceManagement::"
  "V1b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_deps[3] = {
  &::descriptor_table_google_2fapi_2fconfig_5fchange_2eproto,
  &::descriptor_table_google_2fapi_2ffield_5fbehavior_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::_pbi::once_flag descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto = {
    false, false, 2290, descriptor_table_protodef_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto,
    "google/api/servicemanagement/v1/resources.proto",
    &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_once, descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_deps, 3, 12,
    schemas, file_default_instances, TableStruct_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto::offsets,
    file_level_metadata_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto, file_level_enum_descriptors_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto,
    file_level_service_descriptors_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_getter() {
  return &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto(&descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto);
namespace google {
namespace api {
namespace servicemanagement {
namespace v1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* OperationMetadata_Status_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto);
  return file_level_enum_descriptors_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto[0];
}
bool OperationMetadata_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr OperationMetadata_Status OperationMetadata::STATUS_UNSPECIFIED;
constexpr OperationMetadata_Status OperationMetadata::DONE;
constexpr OperationMetadata_Status OperationMetadata::NOT_STARTED;
constexpr OperationMetadata_Status OperationMetadata::IN_PROGRESS;
constexpr OperationMetadata_Status OperationMetadata::FAILED;
constexpr OperationMetadata_Status OperationMetadata::CANCELLED;
constexpr OperationMetadata_Status OperationMetadata::Status_MIN;
constexpr OperationMetadata_Status OperationMetadata::Status_MAX;
constexpr int OperationMetadata::Status_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Diagnostic_Kind_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto);
  return file_level_enum_descriptors_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto[1];
}
bool Diagnostic_Kind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Diagnostic_Kind Diagnostic::WARNING;
constexpr Diagnostic_Kind Diagnostic::ERROR;
constexpr Diagnostic_Kind Diagnostic::Kind_MIN;
constexpr Diagnostic_Kind Diagnostic::Kind_MAX;
constexpr int Diagnostic::Kind_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ConfigFile_FileType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto);
  return file_level_enum_descriptors_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto[2];
}
bool ConfigFile_FileType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 6:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr ConfigFile_FileType ConfigFile::FILE_TYPE_UNSPECIFIED;
constexpr ConfigFile_FileType ConfigFile::SERVICE_CONFIG_YAML;
constexpr ConfigFile_FileType ConfigFile::OPEN_API_JSON;
constexpr ConfigFile_FileType ConfigFile::OPEN_API_YAML;
constexpr ConfigFile_FileType ConfigFile::FILE_DESCRIPTOR_SET_PROTO;
constexpr ConfigFile_FileType ConfigFile::PROTO_FILE;
constexpr ConfigFile_FileType ConfigFile::FileType_MIN;
constexpr ConfigFile_FileType ConfigFile::FileType_MAX;
constexpr int ConfigFile::FileType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Rollout_RolloutStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto);
  return file_level_enum_descriptors_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto[3];
}
bool Rollout_RolloutStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Rollout_RolloutStatus Rollout::ROLLOUT_STATUS_UNSPECIFIED;
constexpr Rollout_RolloutStatus Rollout::IN_PROGRESS;
constexpr Rollout_RolloutStatus Rollout::SUCCESS;
constexpr Rollout_RolloutStatus Rollout::CANCELLED;
constexpr Rollout_RolloutStatus Rollout::FAILED;
constexpr Rollout_RolloutStatus Rollout::PENDING;
constexpr Rollout_RolloutStatus Rollout::FAILED_ROLLED_BACK;
constexpr Rollout_RolloutStatus Rollout::RolloutStatus_MIN;
constexpr Rollout_RolloutStatus Rollout::RolloutStatus_MAX;
constexpr int Rollout::RolloutStatus_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class ManagedService::_Internal {
 public:
};

ManagedService::ManagedService(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.servicemanagement.v1.ManagedService)
}
ManagedService::ManagedService(const ManagedService& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ManagedService* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.service_name_){}
    , decltype(_impl_.producer_project_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_service_name().empty()) {
    _this->_impl_.service_name_.Set(from._internal_service_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.producer_project_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.producer_project_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_producer_project_id().empty()) {
    _this->_impl_.producer_project_id_.Set(from._internal_producer_project_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.ManagedService)
}

inline void ManagedService::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.service_name_){}
    , decltype(_impl_.producer_project_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.producer_project_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.producer_project_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ManagedService::~ManagedService() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.ManagedService)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ManagedService::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.service_name_.Destroy();
  _impl_.producer_project_id_.Destroy();
}

void ManagedService::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ManagedService::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.ManagedService)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.service_name_.ClearToEmpty();
  _impl_.producer_project_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ManagedService::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string service_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_service_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicemanagement.v1.ManagedService.service_name"));
        } else
          goto handle_unusual;
        continue;
      // string producer_project_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_producer_project_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicemanagement.v1.ManagedService.producer_project_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ManagedService::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.ManagedService)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 2;
  if (!this->_internal_service_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_name().data(), static_cast<int>(this->_internal_service_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ManagedService.service_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_service_name(), target);
  }

  // string producer_project_id = 3;
  if (!this->_internal_producer_project_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_producer_project_id().data(), static_cast<int>(this->_internal_producer_project_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ManagedService.producer_project_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_producer_project_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.ManagedService)
  return target;
}

size_t ManagedService::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.ManagedService)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string service_name = 2;
  if (!this->_internal_service_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_name());
  }

  // string producer_project_id = 3;
  if (!this->_internal_producer_project_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_producer_project_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ManagedService::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ManagedService::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ManagedService::GetClassData() const { return &_class_data_; }


void ManagedService::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ManagedService*>(&to_msg);
  auto& from = static_cast<const ManagedService&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.ManagedService)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_service_name().empty()) {
    _this->_internal_set_service_name(from._internal_service_name());
  }
  if (!from._internal_producer_project_id().empty()) {
    _this->_internal_set_producer_project_id(from._internal_producer_project_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ManagedService::CopyFrom(const ManagedService& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.ManagedService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ManagedService::IsInitialized() const {
  return true;
}

void ManagedService::InternalSwap(ManagedService* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.service_name_, lhs_arena,
      &other->_impl_.service_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.producer_project_id_, lhs_arena,
      &other->_impl_.producer_project_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ManagedService::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_getter, &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_once,
      file_level_metadata_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto[0]);
}

// ===================================================================

class OperationMetadata_Step::_Internal {
 public:
};

OperationMetadata_Step::OperationMetadata_Step(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.servicemanagement.v1.OperationMetadata.Step)
}
OperationMetadata_Step::OperationMetadata_Step(const OperationMetadata_Step& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OperationMetadata_Step* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.description_){}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.OperationMetadata.Step)
}

inline void OperationMetadata_Step::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.description_){}
    , decltype(_impl_.status_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

OperationMetadata_Step::~OperationMetadata_Step() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.OperationMetadata.Step)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OperationMetadata_Step::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.description_.Destroy();
}

void OperationMetadata_Step::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OperationMetadata_Step::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.OperationMetadata.Step)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.description_.ClearToEmpty();
  _impl_.status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OperationMetadata_Step::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicemanagement.v1.OperationMetadata.Step.description"));
        } else
          goto handle_unusual;
        continue;
      // .google.api.servicemanagement.v1.OperationMetadata.Status status = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::google::api::servicemanagement::v1::OperationMetadata_Status>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OperationMetadata_Step::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.OperationMetadata.Step)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string description = 2;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.OperationMetadata.Step.description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_description(), target);
  }

  // .google.api.servicemanagement.v1.OperationMetadata.Status status = 4;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.OperationMetadata.Step)
  return target;
}

size_t OperationMetadata_Step::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.OperationMetadata.Step)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string description = 2;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // .google.api.servicemanagement.v1.OperationMetadata.Status status = 4;
  if (this->_internal_status() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OperationMetadata_Step::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OperationMetadata_Step::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OperationMetadata_Step::GetClassData() const { return &_class_data_; }


void OperationMetadata_Step::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OperationMetadata_Step*>(&to_msg);
  auto& from = static_cast<const OperationMetadata_Step&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.OperationMetadata.Step)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OperationMetadata_Step::CopyFrom(const OperationMetadata_Step& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.OperationMetadata.Step)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperationMetadata_Step::IsInitialized() const {
  return true;
}

void OperationMetadata_Step::InternalSwap(OperationMetadata_Step* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_, lhs_arena,
      &other->_impl_.description_, rhs_arena
  );
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OperationMetadata_Step::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_getter, &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_once,
      file_level_metadata_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto[1]);
}

// ===================================================================

class OperationMetadata::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& start_time(const OperationMetadata* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
OperationMetadata::_Internal::start_time(const OperationMetadata* msg) {
  return *msg->_impl_.start_time_;
}
void OperationMetadata::clear_start_time() {
  if (GetArenaForAllocation() == nullptr && _impl_.start_time_ != nullptr) {
    delete _impl_.start_time_;
  }
  _impl_.start_time_ = nullptr;
}
OperationMetadata::OperationMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.servicemanagement.v1.OperationMetadata)
}
OperationMetadata::OperationMetadata(const OperationMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OperationMetadata* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.resource_names_){from._impl_.resource_names_}
    , decltype(_impl_.steps_){from._impl_.steps_}
    , decltype(_impl_.start_time_){nullptr}
    , decltype(_impl_.progress_percentage_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_start_time()) {
    _this->_impl_.start_time_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.start_time_);
  }
  _this->_impl_.progress_percentage_ = from._impl_.progress_percentage_;
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.OperationMetadata)
}

inline void OperationMetadata::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.resource_names_){arena}
    , decltype(_impl_.steps_){arena}
    , decltype(_impl_.start_time_){nullptr}
    , decltype(_impl_.progress_percentage_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

OperationMetadata::~OperationMetadata() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.OperationMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OperationMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.resource_names_.~RepeatedPtrField();
  _impl_.steps_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.start_time_;
}

void OperationMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OperationMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.OperationMetadata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.resource_names_.Clear();
  _impl_.steps_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.start_time_ != nullptr) {
    delete _impl_.start_time_;
  }
  _impl_.start_time_ = nullptr;
  _impl_.progress_percentage_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OperationMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string resource_names = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_resource_names();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "google.api.servicemanagement.v1.OperationMetadata.resource_names"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .google.api.servicemanagement.v1.OperationMetadata.Step steps = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_steps(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // int32 progress_percentage = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.progress_percentage_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp start_time = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_start_time(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OperationMetadata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.OperationMetadata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string resource_names = 1;
  for (int i = 0, n = this->_internal_resource_names_size(); i < n; i++) {
    const auto& s = this->_internal_resource_names(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.OperationMetadata.resource_names");
    target = stream->WriteString(1, s, target);
  }

  // repeated .google.api.servicemanagement.v1.OperationMetadata.Step steps = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_steps_size()); i < n; i++) {
    const auto& repfield = this->_internal_steps(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // int32 progress_percentage = 3;
  if (this->_internal_progress_percentage() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_progress_percentage(), target);
  }

  // .google.protobuf.Timestamp start_time = 4;
  if (this->_internal_has_start_time()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::start_time(this),
        _Internal::start_time(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.OperationMetadata)
  return target;
}

size_t OperationMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.OperationMetadata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string resource_names = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.resource_names_.size());
  for (int i = 0, n = _impl_.resource_names_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.resource_names_.Get(i));
  }

  // repeated .google.api.servicemanagement.v1.OperationMetadata.Step steps = 2;
  total_size += 1UL * this->_internal_steps_size();
  for (const auto& msg : this->_impl_.steps_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .google.protobuf.Timestamp start_time = 4;
  if (this->_internal_has_start_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.start_time_);
  }

  // int32 progress_percentage = 3;
  if (this->_internal_progress_percentage() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_progress_percentage());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OperationMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OperationMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OperationMetadata::GetClassData() const { return &_class_data_; }


void OperationMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OperationMetadata*>(&to_msg);
  auto& from = static_cast<const OperationMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.OperationMetadata)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.resource_names_.MergeFrom(from._impl_.resource_names_);
  _this->_impl_.steps_.MergeFrom(from._impl_.steps_);
  if (from._internal_has_start_time()) {
    _this->_internal_mutable_start_time()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_start_time());
  }
  if (from._internal_progress_percentage() != 0) {
    _this->_internal_set_progress_percentage(from._internal_progress_percentage());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OperationMetadata::CopyFrom(const OperationMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.OperationMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperationMetadata::IsInitialized() const {
  return true;
}

void OperationMetadata::InternalSwap(OperationMetadata* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.resource_names_.InternalSwap(&other->_impl_.resource_names_);
  _impl_.steps_.InternalSwap(&other->_impl_.steps_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OperationMetadata, _impl_.progress_percentage_)
      + sizeof(OperationMetadata::_impl_.progress_percentage_)
      - PROTOBUF_FIELD_OFFSET(OperationMetadata, _impl_.start_time_)>(
          reinterpret_cast<char*>(&_impl_.start_time_),
          reinterpret_cast<char*>(&other->_impl_.start_time_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OperationMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_getter, &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_once,
      file_level_metadata_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto[2]);
}

// ===================================================================

class Diagnostic::_Internal {
 public:
};

Diagnostic::Diagnostic(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.servicemanagement.v1.Diagnostic)
}
Diagnostic::Diagnostic(const Diagnostic& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Diagnostic* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.location_){}
    , decltype(_impl_.message_){}
    , decltype(_impl_.kind_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.location_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.location_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location().empty()) {
    _this->_impl_.location_.Set(from._internal_location(), 
      _this->GetArenaForAllocation());
  }
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.kind_ = from._impl_.kind_;
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.Diagnostic)
}

inline void Diagnostic::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.location_){}
    , decltype(_impl_.message_){}
    , decltype(_impl_.kind_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.location_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.location_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Diagnostic::~Diagnostic() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.Diagnostic)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Diagnostic::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.location_.Destroy();
  _impl_.message_.Destroy();
}

void Diagnostic::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Diagnostic::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.Diagnostic)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.location_.ClearToEmpty();
  _impl_.message_.ClearToEmpty();
  _impl_.kind_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Diagnostic::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string location = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_location();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicemanagement.v1.Diagnostic.location"));
        } else
          goto handle_unusual;
        continue;
      // .google.api.servicemanagement.v1.Diagnostic.Kind kind = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_kind(static_cast<::google::api::servicemanagement::v1::Diagnostic_Kind>(val));
        } else
          goto handle_unusual;
        continue;
      // string message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicemanagement.v1.Diagnostic.message"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Diagnostic::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.Diagnostic)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string location = 1;
  if (!this->_internal_location().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location().data(), static_cast<int>(this->_internal_location().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.Diagnostic.location");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_location(), target);
  }

  // .google.api.servicemanagement.v1.Diagnostic.Kind kind = 2;
  if (this->_internal_kind() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_kind(), target);
  }

  // string message = 3;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.Diagnostic.message");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.Diagnostic)
  return target;
}

size_t Diagnostic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.Diagnostic)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string location = 1;
  if (!this->_internal_location().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location());
  }

  // string message = 3;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .google.api.servicemanagement.v1.Diagnostic.Kind kind = 2;
  if (this->_internal_kind() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_kind());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Diagnostic::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Diagnostic::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Diagnostic::GetClassData() const { return &_class_data_; }


void Diagnostic::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Diagnostic*>(&to_msg);
  auto& from = static_cast<const Diagnostic&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.Diagnostic)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_location().empty()) {
    _this->_internal_set_location(from._internal_location());
  }
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_kind() != 0) {
    _this->_internal_set_kind(from._internal_kind());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Diagnostic::CopyFrom(const Diagnostic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.Diagnostic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Diagnostic::IsInitialized() const {
  return true;
}

void Diagnostic::InternalSwap(Diagnostic* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.location_, lhs_arena,
      &other->_impl_.location_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  swap(_impl_.kind_, other->_impl_.kind_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Diagnostic::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_getter, &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_once,
      file_level_metadata_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto[3]);
}

// ===================================================================

class ConfigSource::_Internal {
 public:
};

ConfigSource::ConfigSource(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.servicemanagement.v1.ConfigSource)
}
ConfigSource::ConfigSource(const ConfigSource& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ConfigSource* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.files_){from._impl_.files_}
    , decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.ConfigSource)
}

inline void ConfigSource::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.files_){arena}
    , decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ConfigSource::~ConfigSource() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.ConfigSource)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ConfigSource::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.files_.~RepeatedPtrField();
  _impl_.id_.Destroy();
}

void ConfigSource::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ConfigSource::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.ConfigSource)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.files_.Clear();
  _impl_.id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ConfigSource::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .google.api.servicemanagement.v1.ConfigFile files = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_files(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicemanagement.v1.ConfigSource.id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ConfigSource::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.ConfigSource)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.servicemanagement.v1.ConfigFile files = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_files_size()); i < n; i++) {
    const auto& repfield = this->_internal_files(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string id = 5;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ConfigSource.id");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.ConfigSource)
  return target;
}

size_t ConfigSource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.ConfigSource)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.servicemanagement.v1.ConfigFile files = 2;
  total_size += 1UL * this->_internal_files_size();
  for (const auto& msg : this->_impl_.files_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string id = 5;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ConfigSource::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ConfigSource::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ConfigSource::GetClassData() const { return &_class_data_; }


void ConfigSource::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ConfigSource*>(&to_msg);
  auto& from = static_cast<const ConfigSource&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.ConfigSource)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.files_.MergeFrom(from._impl_.files_);
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ConfigSource::CopyFrom(const ConfigSource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.ConfigSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigSource::IsInitialized() const {
  return true;
}

void ConfigSource::InternalSwap(ConfigSource* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.files_.InternalSwap(&other->_impl_.files_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ConfigSource::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_getter, &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_once,
      file_level_metadata_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto[4]);
}

// ===================================================================

class ConfigFile::_Internal {
 public:
};

ConfigFile::ConfigFile(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.servicemanagement.v1.ConfigFile)
}
ConfigFile::ConfigFile(const ConfigFile& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ConfigFile* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.file_path_){}
    , decltype(_impl_.file_contents_){}
    , decltype(_impl_.file_type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.file_path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_file_path().empty()) {
    _this->_impl_.file_path_.Set(from._internal_file_path(), 
      _this->GetArenaForAllocation());
  }
  _impl_.file_contents_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_contents_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_file_contents().empty()) {
    _this->_impl_.file_contents_.Set(from._internal_file_contents(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.file_type_ = from._impl_.file_type_;
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.ConfigFile)
}

inline void ConfigFile::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.file_path_){}
    , decltype(_impl_.file_contents_){}
    , decltype(_impl_.file_type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.file_path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.file_contents_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_contents_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ConfigFile::~ConfigFile() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.ConfigFile)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ConfigFile::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.file_path_.Destroy();
  _impl_.file_contents_.Destroy();
}

void ConfigFile::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ConfigFile::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.ConfigFile)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.file_path_.ClearToEmpty();
  _impl_.file_contents_.ClearToEmpty();
  _impl_.file_type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ConfigFile::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string file_path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_file_path();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicemanagement.v1.ConfigFile.file_path"));
        } else
          goto handle_unusual;
        continue;
      // bytes file_contents = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_file_contents();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.servicemanagement.v1.ConfigFile.FileType file_type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_file_type(static_cast<::google::api::servicemanagement::v1::ConfigFile_FileType>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ConfigFile::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.ConfigFile)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string file_path = 1;
  if (!this->_internal_file_path().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file_path().data(), static_cast<int>(this->_internal_file_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ConfigFile.file_path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_file_path(), target);
  }

  // bytes file_contents = 3;
  if (!this->_internal_file_contents().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_file_contents(), target);
  }

  // .google.api.servicemanagement.v1.ConfigFile.FileType file_type = 4;
  if (this->_internal_file_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_file_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.ConfigFile)
  return target;
}

size_t ConfigFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.ConfigFile)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file_path = 1;
  if (!this->_internal_file_path().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file_path());
  }

  // bytes file_contents = 3;
  if (!this->_internal_file_contents().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_file_contents());
  }

  // .google.api.servicemanagement.v1.ConfigFile.FileType file_type = 4;
  if (this->_internal_file_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_file_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ConfigFile::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ConfigFile::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ConfigFile::GetClassData() const { return &_class_data_; }


void ConfigFile::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ConfigFile*>(&to_msg);
  auto& from = static_cast<const ConfigFile&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.ConfigFile)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_file_path().empty()) {
    _this->_internal_set_file_path(from._internal_file_path());
  }
  if (!from._internal_file_contents().empty()) {
    _this->_internal_set_file_contents(from._internal_file_contents());
  }
  if (from._internal_file_type() != 0) {
    _this->_internal_set_file_type(from._internal_file_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ConfigFile::CopyFrom(const ConfigFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.ConfigFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigFile::IsInitialized() const {
  return true;
}

void ConfigFile::InternalSwap(ConfigFile* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.file_path_, lhs_arena,
      &other->_impl_.file_path_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.file_contents_, lhs_arena,
      &other->_impl_.file_contents_, rhs_arena
  );
  swap(_impl_.file_type_, other->_impl_.file_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ConfigFile::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_getter, &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_once,
      file_level_metadata_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto[5]);
}

// ===================================================================

class ConfigRef::_Internal {
 public:
};

ConfigRef::ConfigRef(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.servicemanagement.v1.ConfigRef)
}
ConfigRef::ConfigRef(const ConfigRef& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ConfigRef* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.ConfigRef)
}

inline void ConfigRef::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ConfigRef::~ConfigRef() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.ConfigRef)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ConfigRef::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void ConfigRef::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ConfigRef::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.ConfigRef)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ConfigRef::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicemanagement.v1.ConfigRef.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ConfigRef::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.ConfigRef)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ConfigRef.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.ConfigRef)
  return target;
}

size_t ConfigRef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.ConfigRef)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ConfigRef::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ConfigRef::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ConfigRef::GetClassData() const { return &_class_data_; }


void ConfigRef::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ConfigRef*>(&to_msg);
  auto& from = static_cast<const ConfigRef&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.ConfigRef)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ConfigRef::CopyFrom(const ConfigRef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.ConfigRef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigRef::IsInitialized() const {
  return true;
}

void ConfigRef::InternalSwap(ConfigRef* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ConfigRef::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_getter, &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_once,
      file_level_metadata_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto[6]);
}

// ===================================================================

class ChangeReport::_Internal {
 public:
};

void ChangeReport::clear_config_changes() {
  _impl_.config_changes_.Clear();
}
ChangeReport::ChangeReport(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.servicemanagement.v1.ChangeReport)
}
ChangeReport::ChangeReport(const ChangeReport& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ChangeReport* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.config_changes_){from._impl_.config_changes_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.ChangeReport)
}

inline void ChangeReport::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.config_changes_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ChangeReport::~ChangeReport() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.ChangeReport)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ChangeReport::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.config_changes_.~RepeatedPtrField();
}

void ChangeReport::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ChangeReport::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.ChangeReport)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.config_changes_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChangeReport::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .google.api.ConfigChange config_changes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_config_changes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ChangeReport::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.ChangeReport)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.ConfigChange config_changes = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_config_changes_size()); i < n; i++) {
    const auto& repfield = this->_internal_config_changes(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.ChangeReport)
  return target;
}

size_t ChangeReport::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.ChangeReport)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.ConfigChange config_changes = 1;
  total_size += 1UL * this->_internal_config_changes_size();
  for (const auto& msg : this->_impl_.config_changes_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ChangeReport::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ChangeReport::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ChangeReport::GetClassData() const { return &_class_data_; }


void ChangeReport::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ChangeReport*>(&to_msg);
  auto& from = static_cast<const ChangeReport&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.ChangeReport)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.config_changes_.MergeFrom(from._impl_.config_changes_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ChangeReport::CopyFrom(const ChangeReport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.ChangeReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeReport::IsInitialized() const {
  return true;
}

void ChangeReport::InternalSwap(ChangeReport* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.config_changes_.InternalSwap(&other->_impl_.config_changes_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ChangeReport::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_getter, &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_once,
      file_level_metadata_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto[7]);
}

// ===================================================================

Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse::Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse() {}
Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse::Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse::MergeFrom(const Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_getter, &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_once,
      file_level_metadata_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto[8]);
}

// ===================================================================

class Rollout_TrafficPercentStrategy::_Internal {
 public:
};

Rollout_TrafficPercentStrategy::Rollout_TrafficPercentStrategy(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &Rollout_TrafficPercentStrategy::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy)
}
Rollout_TrafficPercentStrategy::Rollout_TrafficPercentStrategy(const Rollout_TrafficPercentStrategy& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Rollout_TrafficPercentStrategy* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.percentages_)*/{}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.percentages_.MergeFrom(from._impl_.percentages_);
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy)
}

inline void Rollout_TrafficPercentStrategy::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.percentages_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Rollout_TrafficPercentStrategy::~Rollout_TrafficPercentStrategy() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void Rollout_TrafficPercentStrategy::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.percentages_.Destruct();
  _impl_.percentages_.~MapField();
}

void Rollout_TrafficPercentStrategy::ArenaDtor(void* object) {
  Rollout_TrafficPercentStrategy* _this = reinterpret_cast< Rollout_TrafficPercentStrategy* >(object);
  _this->_impl_.percentages_.Destruct();
}
void Rollout_TrafficPercentStrategy::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Rollout_TrafficPercentStrategy::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.percentages_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Rollout_TrafficPercentStrategy::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<string, double> percentages = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.percentages_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Rollout_TrafficPercentStrategy::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, double> percentages = 1;
  if (!this->_internal_percentages().empty()) {
    using MapType = ::_pb::Map<std::string, double>;
    using WireHelper = Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_percentages();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy.PercentagesEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy)
  return target;
}

size_t Rollout_TrafficPercentStrategy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, double> percentages = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_percentages_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, double >::const_iterator
      it = this->_internal_percentages().begin();
      it != this->_internal_percentages().end(); ++it) {
    total_size += Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Rollout_TrafficPercentStrategy::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Rollout_TrafficPercentStrategy::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Rollout_TrafficPercentStrategy::GetClassData() const { return &_class_data_; }


void Rollout_TrafficPercentStrategy::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Rollout_TrafficPercentStrategy*>(&to_msg);
  auto& from = static_cast<const Rollout_TrafficPercentStrategy&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.percentages_.MergeFrom(from._impl_.percentages_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Rollout_TrafficPercentStrategy::CopyFrom(const Rollout_TrafficPercentStrategy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rollout_TrafficPercentStrategy::IsInitialized() const {
  return true;
}

void Rollout_TrafficPercentStrategy::InternalSwap(Rollout_TrafficPercentStrategy* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.percentages_.InternalSwap(&other->_impl_.percentages_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Rollout_TrafficPercentStrategy::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_getter, &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_once,
      file_level_metadata_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto[9]);
}

// ===================================================================

class Rollout_DeleteServiceStrategy::_Internal {
 public:
};

Rollout_DeleteServiceStrategy::Rollout_DeleteServiceStrategy(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy)
}
Rollout_DeleteServiceStrategy::Rollout_DeleteServiceStrategy(const Rollout_DeleteServiceStrategy& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  Rollout_DeleteServiceStrategy* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Rollout_DeleteServiceStrategy::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Rollout_DeleteServiceStrategy::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Rollout_DeleteServiceStrategy::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_getter, &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_once,
      file_level_metadata_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto[10]);
}

// ===================================================================

class Rollout::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& create_time(const Rollout* msg);
  static const ::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy& traffic_percent_strategy(const Rollout* msg);
  static const ::google::api::servicemanagement::v1::Rollout_DeleteServiceStrategy& delete_service_strategy(const Rollout* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
Rollout::_Internal::create_time(const Rollout* msg) {
  return *msg->_impl_.create_time_;
}
const ::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy&
Rollout::_Internal::traffic_percent_strategy(const Rollout* msg) {
  return *msg->_impl_.strategy_.traffic_percent_strategy_;
}
const ::google::api::servicemanagement::v1::Rollout_DeleteServiceStrategy&
Rollout::_Internal::delete_service_strategy(const Rollout* msg) {
  return *msg->_impl_.strategy_.delete_service_strategy_;
}
void Rollout::clear_create_time() {
  if (GetArenaForAllocation() == nullptr && _impl_.create_time_ != nullptr) {
    delete _impl_.create_time_;
  }
  _impl_.create_time_ = nullptr;
}
void Rollout::set_allocated_traffic_percent_strategy(::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy* traffic_percent_strategy) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_strategy();
  if (traffic_percent_strategy) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(traffic_percent_strategy);
    if (message_arena != submessage_arena) {
      traffic_percent_strategy = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, traffic_percent_strategy, submessage_arena);
    }
    set_has_traffic_percent_strategy();
    _impl_.strategy_.traffic_percent_strategy_ = traffic_percent_strategy;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.Rollout.traffic_percent_strategy)
}
void Rollout::set_allocated_delete_service_strategy(::google::api::servicemanagement::v1::Rollout_DeleteServiceStrategy* delete_service_strategy) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_strategy();
  if (delete_service_strategy) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(delete_service_strategy);
    if (message_arena != submessage_arena) {
      delete_service_strategy = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, delete_service_strategy, submessage_arena);
    }
    set_has_delete_service_strategy();
    _impl_.strategy_.delete_service_strategy_ = delete_service_strategy;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.Rollout.delete_service_strategy)
}
Rollout::Rollout(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.servicemanagement.v1.Rollout)
}
Rollout::Rollout(const Rollout& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Rollout* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.rollout_id_){}
    , decltype(_impl_.created_by_){}
    , decltype(_impl_.service_name_){}
    , decltype(_impl_.create_time_){nullptr}
    , decltype(_impl_.status_){}
    , decltype(_impl_.strategy_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.rollout_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.rollout_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_rollout_id().empty()) {
    _this->_impl_.rollout_id_.Set(from._internal_rollout_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.created_by_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.created_by_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_created_by().empty()) {
    _this->_impl_.created_by_.Set(from._internal_created_by(), 
      _this->GetArenaForAllocation());
  }
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_service_name().empty()) {
    _this->_impl_.service_name_.Set(from._internal_service_name(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_create_time()) {
    _this->_impl_.create_time_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.create_time_);
  }
  _this->_impl_.status_ = from._impl_.status_;
  clear_has_strategy();
  switch (from.strategy_case()) {
    case kTrafficPercentStrategy: {
      _this->_internal_mutable_traffic_percent_strategy()->::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy::MergeFrom(
          from._internal_traffic_percent_strategy());
      break;
    }
    case kDeleteServiceStrategy: {
      _this->_internal_mutable_delete_service_strategy()->::google::api::servicemanagement::v1::Rollout_DeleteServiceStrategy::MergeFrom(
          from._internal_delete_service_strategy());
      break;
    }
    case STRATEGY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.Rollout)
}

inline void Rollout::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.rollout_id_){}
    , decltype(_impl_.created_by_){}
    , decltype(_impl_.service_name_){}
    , decltype(_impl_.create_time_){nullptr}
    , decltype(_impl_.status_){0}
    , decltype(_impl_.strategy_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  _impl_.rollout_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.rollout_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.created_by_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.created_by_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  clear_has_strategy();
}

Rollout::~Rollout() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.Rollout)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Rollout::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.rollout_id_.Destroy();
  _impl_.created_by_.Destroy();
  _impl_.service_name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.create_time_;
  if (has_strategy()) {
    clear_strategy();
  }
}

void Rollout::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Rollout::clear_strategy() {
// @@protoc_insertion_point(one_of_clear_start:google.api.servicemanagement.v1.Rollout)
  switch (strategy_case()) {
    case kTrafficPercentStrategy: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.strategy_.traffic_percent_strategy_;
      }
      break;
    }
    case kDeleteServiceStrategy: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.strategy_.delete_service_strategy_;
      }
      break;
    }
    case STRATEGY_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = STRATEGY_NOT_SET;
}


void Rollout::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.Rollout)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rollout_id_.ClearToEmpty();
  _impl_.created_by_.ClearToEmpty();
  _impl_.service_name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.create_time_ != nullptr) {
    delete _impl_.create_time_;
  }
  _impl_.create_time_ = nullptr;
  _impl_.status_ = 0;
  clear_strategy();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Rollout::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string rollout_id = 1 [(.google.api.field_behavior) = OPTIONAL];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_rollout_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicemanagement.v1.Rollout.rollout_id"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp create_time = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_create_time(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string created_by = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_created_by();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicemanagement.v1.Rollout.created_by"));
        } else
          goto handle_unusual;
        continue;
      // .google.api.servicemanagement.v1.Rollout.RolloutStatus status = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::google::api::servicemanagement::v1::Rollout_RolloutStatus>(val));
        } else
          goto handle_unusual;
        continue;
      // .google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy traffic_percent_strategy = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_traffic_percent_strategy(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string service_name = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_service_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicemanagement.v1.Rollout.service_name"));
        } else
          goto handle_unusual;
        continue;
      // .google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy delete_service_strategy = 200;
      case 200:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_delete_service_strategy(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Rollout::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.Rollout)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string rollout_id = 1 [(.google.api.field_behavior) = OPTIONAL];
  if (!this->_internal_rollout_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rollout_id().data(), static_cast<int>(this->_internal_rollout_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.Rollout.rollout_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_rollout_id(), target);
  }

  // .google.protobuf.Timestamp create_time = 2;
  if (this->_internal_has_create_time()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::create_time(this),
        _Internal::create_time(this).GetCachedSize(), target, stream);
  }

  // string created_by = 3;
  if (!this->_internal_created_by().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_created_by().data(), static_cast<int>(this->_internal_created_by().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.Rollout.created_by");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_created_by(), target);
  }

  // .google.api.servicemanagement.v1.Rollout.RolloutStatus status = 4;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_status(), target);
  }

  // .google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy traffic_percent_strategy = 5;
  if (_internal_has_traffic_percent_strategy()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::traffic_percent_strategy(this),
        _Internal::traffic_percent_strategy(this).GetCachedSize(), target, stream);
  }

  // string service_name = 8;
  if (!this->_internal_service_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_name().data(), static_cast<int>(this->_internal_service_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.Rollout.service_name");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_service_name(), target);
  }

  // .google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy delete_service_strategy = 200;
  if (_internal_has_delete_service_strategy()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(200, _Internal::delete_service_strategy(this),
        _Internal::delete_service_strategy(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.Rollout)
  return target;
}

size_t Rollout::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.Rollout)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string rollout_id = 1 [(.google.api.field_behavior) = OPTIONAL];
  if (!this->_internal_rollout_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rollout_id());
  }

  // string created_by = 3;
  if (!this->_internal_created_by().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_created_by());
  }

  // string service_name = 8;
  if (!this->_internal_service_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_name());
  }

  // .google.protobuf.Timestamp create_time = 2;
  if (this->_internal_has_create_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.create_time_);
  }

  // .google.api.servicemanagement.v1.Rollout.RolloutStatus status = 4;
  if (this->_internal_status() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  switch (strategy_case()) {
    // .google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy traffic_percent_strategy = 5;
    case kTrafficPercentStrategy: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.strategy_.traffic_percent_strategy_);
      break;
    }
    // .google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy delete_service_strategy = 200;
    case kDeleteServiceStrategy: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.strategy_.delete_service_strategy_);
      break;
    }
    case STRATEGY_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Rollout::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Rollout::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Rollout::GetClassData() const { return &_class_data_; }


void Rollout::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Rollout*>(&to_msg);
  auto& from = static_cast<const Rollout&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.Rollout)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_rollout_id().empty()) {
    _this->_internal_set_rollout_id(from._internal_rollout_id());
  }
  if (!from._internal_created_by().empty()) {
    _this->_internal_set_created_by(from._internal_created_by());
  }
  if (!from._internal_service_name().empty()) {
    _this->_internal_set_service_name(from._internal_service_name());
  }
  if (from._internal_has_create_time()) {
    _this->_internal_mutable_create_time()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_create_time());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  switch (from.strategy_case()) {
    case kTrafficPercentStrategy: {
      _this->_internal_mutable_traffic_percent_strategy()->::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy::MergeFrom(
          from._internal_traffic_percent_strategy());
      break;
    }
    case kDeleteServiceStrategy: {
      _this->_internal_mutable_delete_service_strategy()->::google::api::servicemanagement::v1::Rollout_DeleteServiceStrategy::MergeFrom(
          from._internal_delete_service_strategy());
      break;
    }
    case STRATEGY_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Rollout::CopyFrom(const Rollout& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.Rollout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rollout::IsInitialized() const {
  return true;
}

void Rollout::InternalSwap(Rollout* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.rollout_id_, lhs_arena,
      &other->_impl_.rollout_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.created_by_, lhs_arena,
      &other->_impl_.created_by_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.service_name_, lhs_arena,
      &other->_impl_.service_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Rollout, _impl_.status_)
      + sizeof(Rollout::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(Rollout, _impl_.create_time_)>(
          reinterpret_cast<char*>(&_impl_.create_time_),
          reinterpret_cast<char*>(&other->_impl_.create_time_));
  swap(_impl_.strategy_, other->_impl_.strategy_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Rollout::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_getter, &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_once,
      file_level_metadata_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto[11]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace servicemanagement
}  // namespace api
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::ManagedService*
Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::ManagedService >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicemanagement::v1::ManagedService >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::OperationMetadata_Step*
Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::OperationMetadata_Step >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicemanagement::v1::OperationMetadata_Step >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::OperationMetadata*
Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::OperationMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicemanagement::v1::OperationMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::Diagnostic*
Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::Diagnostic >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicemanagement::v1::Diagnostic >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::ConfigSource*
Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::ConfigSource >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicemanagement::v1::ConfigSource >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::ConfigFile*
Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::ConfigFile >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicemanagement::v1::ConfigFile >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::ConfigRef*
Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::ConfigRef >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicemanagement::v1::ConfigRef >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::ChangeReport*
Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::ChangeReport >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicemanagement::v1::ChangeReport >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse*
Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy*
Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::Rollout_DeleteServiceStrategy*
Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::Rollout_DeleteServiceStrategy >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicemanagement::v1::Rollout_DeleteServiceStrategy >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::Rollout*
Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::Rollout >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicemanagement::v1::Rollout >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

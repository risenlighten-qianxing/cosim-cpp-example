// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/expr/conformance/v1alpha1/conformance_service.proto

#include "google/api/expr/conformance/v1alpha1/conformance_service.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace google {
namespace api {
namespace expr {
namespace conformance {
namespace v1alpha1 {
PROTOBUF_CONSTEXPR ParseRequest::ParseRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.cel_source_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.syntax_version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.source_location_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.disable_macros_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ParseRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ParseRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ParseRequestDefaultTypeInternal() {}
  union {
    ParseRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ParseRequestDefaultTypeInternal _ParseRequest_default_instance_;
PROTOBUF_CONSTEXPR ParseResponse::ParseResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.issues_)*/{}
  , /*decltype(_impl_.parsed_expr_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ParseResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ParseResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ParseResponseDefaultTypeInternal() {}
  union {
    ParseResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ParseResponseDefaultTypeInternal _ParseResponse_default_instance_;
PROTOBUF_CONSTEXPR CheckRequest::CheckRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.type_env_)*/{}
  , /*decltype(_impl_.container_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.parsed_expr_)*/nullptr
  , /*decltype(_impl_.no_std_env_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CheckRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CheckRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CheckRequestDefaultTypeInternal() {}
  union {
    CheckRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CheckRequestDefaultTypeInternal _CheckRequest_default_instance_;
PROTOBUF_CONSTEXPR CheckResponse::CheckResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.issues_)*/{}
  , /*decltype(_impl_.checked_expr_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CheckResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CheckResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CheckResponseDefaultTypeInternal() {}
  union {
    CheckResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CheckResponseDefaultTypeInternal _CheckResponse_default_instance_;
PROTOBUF_CONSTEXPR EvalRequest_BindingsEntry_DoNotUse::EvalRequest_BindingsEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct EvalRequest_BindingsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EvalRequest_BindingsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EvalRequest_BindingsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    EvalRequest_BindingsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EvalRequest_BindingsEntry_DoNotUseDefaultTypeInternal _EvalRequest_BindingsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR EvalRequest::EvalRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.bindings_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.container_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.expr_kind_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct EvalRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EvalRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EvalRequestDefaultTypeInternal() {}
  union {
    EvalRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EvalRequestDefaultTypeInternal _EvalRequest_default_instance_;
PROTOBUF_CONSTEXPR EvalResponse::EvalResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.issues_)*/{}
  , /*decltype(_impl_.result_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct EvalResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EvalResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EvalResponseDefaultTypeInternal() {}
  union {
    EvalResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EvalResponseDefaultTypeInternal _EvalResponse_default_instance_;
PROTOBUF_CONSTEXPR SourcePosition::SourcePosition(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.location_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.offset_)*/0
  , /*decltype(_impl_.line_)*/0
  , /*decltype(_impl_.column_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SourcePositionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SourcePositionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SourcePositionDefaultTypeInternal() {}
  union {
    SourcePosition _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SourcePositionDefaultTypeInternal _SourcePosition_default_instance_;
PROTOBUF_CONSTEXPR IssueDetails::IssueDetails(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.position_)*/nullptr
  , /*decltype(_impl_.id_)*/int64_t{0}
  , /*decltype(_impl_.severity_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct IssueDetailsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IssueDetailsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~IssueDetailsDefaultTypeInternal() {}
  union {
    IssueDetails _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IssueDetailsDefaultTypeInternal _IssueDetails_default_instance_;
}  // namespace v1alpha1
}  // namespace conformance
}  // namespace expr
}  // namespace api
}  // namespace google
static ::_pb::Metadata file_level_metadata_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto[9];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto = nullptr;

const uint32_t TableStruct_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::conformance::v1alpha1::ParseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::conformance::v1alpha1::ParseRequest, _impl_.cel_source_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::conformance::v1alpha1::ParseRequest, _impl_.syntax_version_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::conformance::v1alpha1::ParseRequest, _impl_.source_location_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::conformance::v1alpha1::ParseRequest, _impl_.disable_macros_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::conformance::v1alpha1::ParseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::conformance::v1alpha1::ParseResponse, _impl_.parsed_expr_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::conformance::v1alpha1::ParseResponse, _impl_.issues_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::conformance::v1alpha1::CheckRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::conformance::v1alpha1::CheckRequest, _impl_.parsed_expr_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::conformance::v1alpha1::CheckRequest, _impl_.type_env_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::conformance::v1alpha1::CheckRequest, _impl_.container_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::conformance::v1alpha1::CheckRequest, _impl_.no_std_env_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::conformance::v1alpha1::CheckResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::conformance::v1alpha1::CheckResponse, _impl_.checked_expr_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::conformance::v1alpha1::CheckResponse, _impl_.issues_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::conformance::v1alpha1::EvalRequest_BindingsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::conformance::v1alpha1::EvalRequest_BindingsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::conformance::v1alpha1::EvalRequest_BindingsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::conformance::v1alpha1::EvalRequest_BindingsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::conformance::v1alpha1::EvalRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::conformance::v1alpha1::EvalRequest, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::google::api::expr::conformance::v1alpha1::EvalRequest, _impl_.bindings_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::conformance::v1alpha1::EvalRequest, _impl_.container_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::conformance::v1alpha1::EvalRequest, _impl_.expr_kind_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::conformance::v1alpha1::EvalResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::conformance::v1alpha1::EvalResponse, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::conformance::v1alpha1::EvalResponse, _impl_.issues_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::conformance::v1alpha1::SourcePosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::conformance::v1alpha1::SourcePosition, _impl_.location_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::conformance::v1alpha1::SourcePosition, _impl_.offset_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::conformance::v1alpha1::SourcePosition, _impl_.line_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::conformance::v1alpha1::SourcePosition, _impl_.column_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::conformance::v1alpha1::IssueDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::conformance::v1alpha1::IssueDetails, _impl_.severity_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::conformance::v1alpha1::IssueDetails, _impl_.position_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::conformance::v1alpha1::IssueDetails, _impl_.id_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::google::api::expr::conformance::v1alpha1::ParseRequest)},
  { 10, -1, -1, sizeof(::google::api::expr::conformance::v1alpha1::ParseResponse)},
  { 18, -1, -1, sizeof(::google::api::expr::conformance::v1alpha1::CheckRequest)},
  { 28, -1, -1, sizeof(::google::api::expr::conformance::v1alpha1::CheckResponse)},
  { 36, 44, -1, sizeof(::google::api::expr::conformance::v1alpha1::EvalRequest_BindingsEntry_DoNotUse)},
  { 46, -1, -1, sizeof(::google::api::expr::conformance::v1alpha1::EvalRequest)},
  { 57, -1, -1, sizeof(::google::api::expr::conformance::v1alpha1::EvalResponse)},
  { 65, -1, -1, sizeof(::google::api::expr::conformance::v1alpha1::SourcePosition)},
  { 75, -1, -1, sizeof(::google::api::expr::conformance::v1alpha1::IssueDetails)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::google::api::expr::conformance::v1alpha1::_ParseRequest_default_instance_._instance,
  &::google::api::expr::conformance::v1alpha1::_ParseResponse_default_instance_._instance,
  &::google::api::expr::conformance::v1alpha1::_CheckRequest_default_instance_._instance,
  &::google::api::expr::conformance::v1alpha1::_CheckResponse_default_instance_._instance,
  &::google::api::expr::conformance::v1alpha1::_EvalRequest_BindingsEntry_DoNotUse_default_instance_._instance,
  &::google::api::expr::conformance::v1alpha1::_EvalRequest_default_instance_._instance,
  &::google::api::expr::conformance::v1alpha1::_EvalResponse_default_instance_._instance,
  &::google::api::expr::conformance::v1alpha1::_SourcePosition_default_instance_._instance,
  &::google::api::expr::conformance::v1alpha1::_IssueDetails_default_instance_._instance,
};

const char descriptor_table_protodef_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n>google/api/expr/conformance/v1alpha1/c"
  "onformance_service.proto\022$google.api.exp"
  "r.conformance.v1alpha1\032\027google/api/clien"
  "t.proto\032&google/api/expr/v1alpha1/checke"
  "d.proto\032#google/api/expr/v1alpha1/eval.p"
  "roto\032%google/api/expr/v1alpha1/syntax.pr"
  "oto\032\027google/rpc/status.proto\"k\n\014ParseReq"
  "uest\022\022\n\ncel_source\030\001 \001(\t\022\026\n\016syntax_versi"
  "on\030\002 \001(\t\022\027\n\017source_location\030\003 \001(\t\022\026\n\016dis"
  "able_macros\030\004 \001(\010\"n\n\rParseResponse\0229\n\013pa"
  "rsed_expr\030\001 \001(\0132$.google.api.expr.v1alph"
  "a1.ParsedExpr\022\"\n\006issues\030\002 \003(\0132\022.google.r"
  "pc.Status\"\242\001\n\014CheckRequest\0229\n\013parsed_exp"
  "r\030\001 \001(\0132$.google.api.expr.v1alpha1.Parse"
  "dExpr\0220\n\010type_env\030\002 \003(\0132\036.google.api.exp"
  "r.v1alpha1.Decl\022\021\n\tcontainer\030\003 \001(\t\022\022\n\nno"
  "_std_env\030\004 \001(\010\"p\n\rCheckResponse\022;\n\014check"
  "ed_expr\030\001 \001(\0132%.google.api.expr.v1alpha1"
  ".CheckedExpr\022\"\n\006issues\030\002 \003(\0132\022.google.rp"
  "c.Status\"\322\002\n\013EvalRequest\022;\n\013parsed_expr\030"
  "\001 \001(\0132$.google.api.expr.v1alpha1.ParsedE"
  "xprH\000\022=\n\014checked_expr\030\002 \001(\0132%.google.api"
  ".expr.v1alpha1.CheckedExprH\000\022Q\n\010bindings"
  "\030\003 \003(\0132\?.google.api.expr.conformance.v1a"
  "lpha1.EvalRequest.BindingsEntry\022\021\n\tconta"
  "iner\030\004 \001(\t\032T\n\rBindingsEntry\022\013\n\003key\030\001 \001(\t"
  "\0222\n\005value\030\002 \001(\0132#.google.api.expr.v1alph"
  "a1.ExprValue:\0028\001B\013\n\texpr_kind\"g\n\014EvalRes"
  "ponse\0223\n\006result\030\001 \001(\0132#.google.api.expr."
  "v1alpha1.ExprValue\022\"\n\006issues\030\002 \003(\0132\022.goo"
  "gle.rpc.Status\"P\n\016SourcePosition\022\020\n\010loca"
  "tion\030\001 \001(\t\022\016\n\006offset\030\002 \001(\005\022\014\n\004line\030\003 \001(\005"
  "\022\016\n\006column\030\004 \001(\005\"\200\002\n\014IssueDetails\022M\n\010sev"
  "erity\030\001 \001(\0162;.google.api.expr.conformanc"
  "e.v1alpha1.IssueDetails.Severity\022F\n\010posi"
  "tion\030\002 \001(\01324.google.api.expr.conformance"
  ".v1alpha1.SourcePosition\022\n\n\002id\030\003 \001(\003\"M\n\010"
  "Severity\022\030\n\024SEVERITY_UNSPECIFIED\020\000\022\017\n\013DE"
  "PRECATION\020\001\022\013\n\007WARNING\020\002\022\t\n\005ERROR\020\0032\204\003\n\022"
  "ConformanceService\022r\n\005Parse\0222.google.api"
  ".expr.conformance.v1alpha1.ParseRequest\032"
  "3.google.api.expr.conformance.v1alpha1.P"
  "arseResponse\"\000\022r\n\005Check\0222.google.api.exp"
  "r.conformance.v1alpha1.CheckRequest\0323.go"
  "ogle.api.expr.conformance.v1alpha1.Check"
  "Response\"\000\022o\n\004Eval\0221.google.api.expr.con"
  "formance.v1alpha1.EvalRequest\0322.google.a"
  "pi.expr.conformance.v1alpha1.EvalRespons"
  "e\"\000\032\025\312A\022cel.googleapis.comB\224\001\n(com.googl"
  "e.api.expr.conformance.v1alpha1B\027Conform"
  "anceServiceProtoP\001ZJgoogle.golang.org/ge"
  "nproto/googleapis/api/expr/conformance/v"
  "1alpha1;confpb\370\001\001b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto_deps[5] = {
  &::descriptor_table_google_2fapi_2fclient_2eproto,
  &::descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto,
  &::descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto,
  &::descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto,
  &::descriptor_table_google_2frpc_2fstatus_2eproto,
};
static ::_pbi::once_flag descriptor_table_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto = {
    false, false, 2105, descriptor_table_protodef_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto,
    "google/api/expr/conformance/v1alpha1/conformance_service.proto",
    &descriptor_table_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto_once, descriptor_table_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto_deps, 5, 9,
    schemas, file_default_instances, TableStruct_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto::offsets,
    file_level_metadata_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto, file_level_enum_descriptors_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto,
    file_level_service_descriptors_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto_getter() {
  return &descriptor_table_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto(&descriptor_table_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto);
namespace google {
namespace api {
namespace expr {
namespace conformance {
namespace v1alpha1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* IssueDetails_Severity_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto);
  return file_level_enum_descriptors_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto[0];
}
bool IssueDetails_Severity_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr IssueDetails_Severity IssueDetails::SEVERITY_UNSPECIFIED;
constexpr IssueDetails_Severity IssueDetails::DEPRECATION;
constexpr IssueDetails_Severity IssueDetails::WARNING;
constexpr IssueDetails_Severity IssueDetails::ERROR;
constexpr IssueDetails_Severity IssueDetails::Severity_MIN;
constexpr IssueDetails_Severity IssueDetails::Severity_MAX;
constexpr int IssueDetails::Severity_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class ParseRequest::_Internal {
 public:
};

ParseRequest::ParseRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.conformance.v1alpha1.ParseRequest)
}
ParseRequest::ParseRequest(const ParseRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ParseRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.cel_source_){}
    , decltype(_impl_.syntax_version_){}
    , decltype(_impl_.source_location_){}
    , decltype(_impl_.disable_macros_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.cel_source_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.cel_source_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_cel_source().empty()) {
    _this->_impl_.cel_source_.Set(from._internal_cel_source(), 
      _this->GetArenaForAllocation());
  }
  _impl_.syntax_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.syntax_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_syntax_version().empty()) {
    _this->_impl_.syntax_version_.Set(from._internal_syntax_version(), 
      _this->GetArenaForAllocation());
  }
  _impl_.source_location_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.source_location_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_source_location().empty()) {
    _this->_impl_.source_location_.Set(from._internal_source_location(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.disable_macros_ = from._impl_.disable_macros_;
  // @@protoc_insertion_point(copy_constructor:google.api.expr.conformance.v1alpha1.ParseRequest)
}

inline void ParseRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.cel_source_){}
    , decltype(_impl_.syntax_version_){}
    , decltype(_impl_.source_location_){}
    , decltype(_impl_.disable_macros_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.cel_source_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.cel_source_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.syntax_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.syntax_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.source_location_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.source_location_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ParseRequest::~ParseRequest() {
  // @@protoc_insertion_point(destructor:google.api.expr.conformance.v1alpha1.ParseRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ParseRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.cel_source_.Destroy();
  _impl_.syntax_version_.Destroy();
  _impl_.source_location_.Destroy();
}

void ParseRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ParseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.conformance.v1alpha1.ParseRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.cel_source_.ClearToEmpty();
  _impl_.syntax_version_.ClearToEmpty();
  _impl_.source_location_.ClearToEmpty();
  _impl_.disable_macros_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ParseRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string cel_source = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_cel_source();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.expr.conformance.v1alpha1.ParseRequest.cel_source"));
        } else
          goto handle_unusual;
        continue;
      // string syntax_version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_syntax_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.expr.conformance.v1alpha1.ParseRequest.syntax_version"));
        } else
          goto handle_unusual;
        continue;
      // string source_location = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_source_location();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.expr.conformance.v1alpha1.ParseRequest.source_location"));
        } else
          goto handle_unusual;
        continue;
      // bool disable_macros = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.disable_macros_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ParseRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.conformance.v1alpha1.ParseRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string cel_source = 1;
  if (!this->_internal_cel_source().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cel_source().data(), static_cast<int>(this->_internal_cel_source().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.conformance.v1alpha1.ParseRequest.cel_source");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_cel_source(), target);
  }

  // string syntax_version = 2;
  if (!this->_internal_syntax_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_syntax_version().data(), static_cast<int>(this->_internal_syntax_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.conformance.v1alpha1.ParseRequest.syntax_version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_syntax_version(), target);
  }

  // string source_location = 3;
  if (!this->_internal_source_location().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_source_location().data(), static_cast<int>(this->_internal_source_location().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.conformance.v1alpha1.ParseRequest.source_location");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_source_location(), target);
  }

  // bool disable_macros = 4;
  if (this->_internal_disable_macros() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_disable_macros(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.conformance.v1alpha1.ParseRequest)
  return target;
}

size_t ParseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.conformance.v1alpha1.ParseRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string cel_source = 1;
  if (!this->_internal_cel_source().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_cel_source());
  }

  // string syntax_version = 2;
  if (!this->_internal_syntax_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_syntax_version());
  }

  // string source_location = 3;
  if (!this->_internal_source_location().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_source_location());
  }

  // bool disable_macros = 4;
  if (this->_internal_disable_macros() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ParseRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ParseRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ParseRequest::GetClassData() const { return &_class_data_; }


void ParseRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ParseRequest*>(&to_msg);
  auto& from = static_cast<const ParseRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.conformance.v1alpha1.ParseRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_cel_source().empty()) {
    _this->_internal_set_cel_source(from._internal_cel_source());
  }
  if (!from._internal_syntax_version().empty()) {
    _this->_internal_set_syntax_version(from._internal_syntax_version());
  }
  if (!from._internal_source_location().empty()) {
    _this->_internal_set_source_location(from._internal_source_location());
  }
  if (from._internal_disable_macros() != 0) {
    _this->_internal_set_disable_macros(from._internal_disable_macros());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ParseRequest::CopyFrom(const ParseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.conformance.v1alpha1.ParseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParseRequest::IsInitialized() const {
  return true;
}

void ParseRequest::InternalSwap(ParseRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.cel_source_, lhs_arena,
      &other->_impl_.cel_source_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.syntax_version_, lhs_arena,
      &other->_impl_.syntax_version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.source_location_, lhs_arena,
      &other->_impl_.source_location_, rhs_arena
  );
  swap(_impl_.disable_macros_, other->_impl_.disable_macros_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ParseRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto_getter, &descriptor_table_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto_once,
      file_level_metadata_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto[0]);
}

// ===================================================================

class ParseResponse::_Internal {
 public:
  static const ::google::api::expr::v1alpha1::ParsedExpr& parsed_expr(const ParseResponse* msg);
};

const ::google::api::expr::v1alpha1::ParsedExpr&
ParseResponse::_Internal::parsed_expr(const ParseResponse* msg) {
  return *msg->_impl_.parsed_expr_;
}
void ParseResponse::clear_parsed_expr() {
  if (GetArenaForAllocation() == nullptr && _impl_.parsed_expr_ != nullptr) {
    delete _impl_.parsed_expr_;
  }
  _impl_.parsed_expr_ = nullptr;
}
void ParseResponse::clear_issues() {
  _impl_.issues_.Clear();
}
ParseResponse::ParseResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.conformance.v1alpha1.ParseResponse)
}
ParseResponse::ParseResponse(const ParseResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ParseResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.issues_){from._impl_.issues_}
    , decltype(_impl_.parsed_expr_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_parsed_expr()) {
    _this->_impl_.parsed_expr_ = new ::google::api::expr::v1alpha1::ParsedExpr(*from._impl_.parsed_expr_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.conformance.v1alpha1.ParseResponse)
}

inline void ParseResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.issues_){arena}
    , decltype(_impl_.parsed_expr_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ParseResponse::~ParseResponse() {
  // @@protoc_insertion_point(destructor:google.api.expr.conformance.v1alpha1.ParseResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ParseResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.issues_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.parsed_expr_;
}

void ParseResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ParseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.conformance.v1alpha1.ParseResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.issues_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.parsed_expr_ != nullptr) {
    delete _impl_.parsed_expr_;
  }
  _impl_.parsed_expr_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ParseResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.api.expr.v1alpha1.ParsedExpr parsed_expr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_parsed_expr(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .google.rpc.Status issues = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_issues(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ParseResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.conformance.v1alpha1.ParseResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1alpha1.ParsedExpr parsed_expr = 1;
  if (this->_internal_has_parsed_expr()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::parsed_expr(this),
        _Internal::parsed_expr(this).GetCachedSize(), target, stream);
  }

  // repeated .google.rpc.Status issues = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_issues_size()); i < n; i++) {
    const auto& repfield = this->_internal_issues(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.conformance.v1alpha1.ParseResponse)
  return target;
}

size_t ParseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.conformance.v1alpha1.ParseResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.rpc.Status issues = 2;
  total_size += 1UL * this->_internal_issues_size();
  for (const auto& msg : this->_impl_.issues_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .google.api.expr.v1alpha1.ParsedExpr parsed_expr = 1;
  if (this->_internal_has_parsed_expr()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.parsed_expr_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ParseResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ParseResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ParseResponse::GetClassData() const { return &_class_data_; }


void ParseResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ParseResponse*>(&to_msg);
  auto& from = static_cast<const ParseResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.conformance.v1alpha1.ParseResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.issues_.MergeFrom(from._impl_.issues_);
  if (from._internal_has_parsed_expr()) {
    _this->_internal_mutable_parsed_expr()->::google::api::expr::v1alpha1::ParsedExpr::MergeFrom(
        from._internal_parsed_expr());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ParseResponse::CopyFrom(const ParseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.conformance.v1alpha1.ParseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParseResponse::IsInitialized() const {
  return true;
}

void ParseResponse::InternalSwap(ParseResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.issues_.InternalSwap(&other->_impl_.issues_);
  swap(_impl_.parsed_expr_, other->_impl_.parsed_expr_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ParseResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto_getter, &descriptor_table_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto_once,
      file_level_metadata_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto[1]);
}

// ===================================================================

class CheckRequest::_Internal {
 public:
  static const ::google::api::expr::v1alpha1::ParsedExpr& parsed_expr(const CheckRequest* msg);
};

const ::google::api::expr::v1alpha1::ParsedExpr&
CheckRequest::_Internal::parsed_expr(const CheckRequest* msg) {
  return *msg->_impl_.parsed_expr_;
}
void CheckRequest::clear_parsed_expr() {
  if (GetArenaForAllocation() == nullptr && _impl_.parsed_expr_ != nullptr) {
    delete _impl_.parsed_expr_;
  }
  _impl_.parsed_expr_ = nullptr;
}
void CheckRequest::clear_type_env() {
  _impl_.type_env_.Clear();
}
CheckRequest::CheckRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.conformance.v1alpha1.CheckRequest)
}
CheckRequest::CheckRequest(const CheckRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CheckRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.type_env_){from._impl_.type_env_}
    , decltype(_impl_.container_){}
    , decltype(_impl_.parsed_expr_){nullptr}
    , decltype(_impl_.no_std_env_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.container_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.container_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_container().empty()) {
    _this->_impl_.container_.Set(from._internal_container(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_parsed_expr()) {
    _this->_impl_.parsed_expr_ = new ::google::api::expr::v1alpha1::ParsedExpr(*from._impl_.parsed_expr_);
  }
  _this->_impl_.no_std_env_ = from._impl_.no_std_env_;
  // @@protoc_insertion_point(copy_constructor:google.api.expr.conformance.v1alpha1.CheckRequest)
}

inline void CheckRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.type_env_){arena}
    , decltype(_impl_.container_){}
    , decltype(_impl_.parsed_expr_){nullptr}
    , decltype(_impl_.no_std_env_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.container_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.container_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CheckRequest::~CheckRequest() {
  // @@protoc_insertion_point(destructor:google.api.expr.conformance.v1alpha1.CheckRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CheckRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.type_env_.~RepeatedPtrField();
  _impl_.container_.Destroy();
  if (this != internal_default_instance()) delete _impl_.parsed_expr_;
}

void CheckRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CheckRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.conformance.v1alpha1.CheckRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_env_.Clear();
  _impl_.container_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.parsed_expr_ != nullptr) {
    delete _impl_.parsed_expr_;
  }
  _impl_.parsed_expr_ = nullptr;
  _impl_.no_std_env_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CheckRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.api.expr.v1alpha1.ParsedExpr parsed_expr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_parsed_expr(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .google.api.expr.v1alpha1.Decl type_env = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_type_env(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string container = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_container();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.expr.conformance.v1alpha1.CheckRequest.container"));
        } else
          goto handle_unusual;
        continue;
      // bool no_std_env = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.no_std_env_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CheckRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.conformance.v1alpha1.CheckRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1alpha1.ParsedExpr parsed_expr = 1;
  if (this->_internal_has_parsed_expr()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::parsed_expr(this),
        _Internal::parsed_expr(this).GetCachedSize(), target, stream);
  }

  // repeated .google.api.expr.v1alpha1.Decl type_env = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_type_env_size()); i < n; i++) {
    const auto& repfield = this->_internal_type_env(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string container = 3;
  if (!this->_internal_container().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_container().data(), static_cast<int>(this->_internal_container().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.conformance.v1alpha1.CheckRequest.container");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_container(), target);
  }

  // bool no_std_env = 4;
  if (this->_internal_no_std_env() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_no_std_env(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.conformance.v1alpha1.CheckRequest)
  return target;
}

size_t CheckRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.conformance.v1alpha1.CheckRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.expr.v1alpha1.Decl type_env = 2;
  total_size += 1UL * this->_internal_type_env_size();
  for (const auto& msg : this->_impl_.type_env_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string container = 3;
  if (!this->_internal_container().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_container());
  }

  // .google.api.expr.v1alpha1.ParsedExpr parsed_expr = 1;
  if (this->_internal_has_parsed_expr()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.parsed_expr_);
  }

  // bool no_std_env = 4;
  if (this->_internal_no_std_env() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CheckRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CheckRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CheckRequest::GetClassData() const { return &_class_data_; }


void CheckRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CheckRequest*>(&to_msg);
  auto& from = static_cast<const CheckRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.conformance.v1alpha1.CheckRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.type_env_.MergeFrom(from._impl_.type_env_);
  if (!from._internal_container().empty()) {
    _this->_internal_set_container(from._internal_container());
  }
  if (from._internal_has_parsed_expr()) {
    _this->_internal_mutable_parsed_expr()->::google::api::expr::v1alpha1::ParsedExpr::MergeFrom(
        from._internal_parsed_expr());
  }
  if (from._internal_no_std_env() != 0) {
    _this->_internal_set_no_std_env(from._internal_no_std_env());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CheckRequest::CopyFrom(const CheckRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.conformance.v1alpha1.CheckRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckRequest::IsInitialized() const {
  return true;
}

void CheckRequest::InternalSwap(CheckRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.type_env_.InternalSwap(&other->_impl_.type_env_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.container_, lhs_arena,
      &other->_impl_.container_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CheckRequest, _impl_.no_std_env_)
      + sizeof(CheckRequest::_impl_.no_std_env_)
      - PROTOBUF_FIELD_OFFSET(CheckRequest, _impl_.parsed_expr_)>(
          reinterpret_cast<char*>(&_impl_.parsed_expr_),
          reinterpret_cast<char*>(&other->_impl_.parsed_expr_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CheckRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto_getter, &descriptor_table_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto_once,
      file_level_metadata_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto[2]);
}

// ===================================================================

class CheckResponse::_Internal {
 public:
  static const ::google::api::expr::v1alpha1::CheckedExpr& checked_expr(const CheckResponse* msg);
};

const ::google::api::expr::v1alpha1::CheckedExpr&
CheckResponse::_Internal::checked_expr(const CheckResponse* msg) {
  return *msg->_impl_.checked_expr_;
}
void CheckResponse::clear_checked_expr() {
  if (GetArenaForAllocation() == nullptr && _impl_.checked_expr_ != nullptr) {
    delete _impl_.checked_expr_;
  }
  _impl_.checked_expr_ = nullptr;
}
void CheckResponse::clear_issues() {
  _impl_.issues_.Clear();
}
CheckResponse::CheckResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.conformance.v1alpha1.CheckResponse)
}
CheckResponse::CheckResponse(const CheckResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CheckResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.issues_){from._impl_.issues_}
    , decltype(_impl_.checked_expr_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_checked_expr()) {
    _this->_impl_.checked_expr_ = new ::google::api::expr::v1alpha1::CheckedExpr(*from._impl_.checked_expr_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.conformance.v1alpha1.CheckResponse)
}

inline void CheckResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.issues_){arena}
    , decltype(_impl_.checked_expr_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CheckResponse::~CheckResponse() {
  // @@protoc_insertion_point(destructor:google.api.expr.conformance.v1alpha1.CheckResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CheckResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.issues_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.checked_expr_;
}

void CheckResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CheckResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.conformance.v1alpha1.CheckResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.issues_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.checked_expr_ != nullptr) {
    delete _impl_.checked_expr_;
  }
  _impl_.checked_expr_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CheckResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.api.expr.v1alpha1.CheckedExpr checked_expr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_checked_expr(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .google.rpc.Status issues = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_issues(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CheckResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.conformance.v1alpha1.CheckResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1alpha1.CheckedExpr checked_expr = 1;
  if (this->_internal_has_checked_expr()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::checked_expr(this),
        _Internal::checked_expr(this).GetCachedSize(), target, stream);
  }

  // repeated .google.rpc.Status issues = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_issues_size()); i < n; i++) {
    const auto& repfield = this->_internal_issues(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.conformance.v1alpha1.CheckResponse)
  return target;
}

size_t CheckResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.conformance.v1alpha1.CheckResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.rpc.Status issues = 2;
  total_size += 1UL * this->_internal_issues_size();
  for (const auto& msg : this->_impl_.issues_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .google.api.expr.v1alpha1.CheckedExpr checked_expr = 1;
  if (this->_internal_has_checked_expr()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.checked_expr_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CheckResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CheckResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CheckResponse::GetClassData() const { return &_class_data_; }


void CheckResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CheckResponse*>(&to_msg);
  auto& from = static_cast<const CheckResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.conformance.v1alpha1.CheckResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.issues_.MergeFrom(from._impl_.issues_);
  if (from._internal_has_checked_expr()) {
    _this->_internal_mutable_checked_expr()->::google::api::expr::v1alpha1::CheckedExpr::MergeFrom(
        from._internal_checked_expr());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CheckResponse::CopyFrom(const CheckResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.conformance.v1alpha1.CheckResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckResponse::IsInitialized() const {
  return true;
}

void CheckResponse::InternalSwap(CheckResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.issues_.InternalSwap(&other->_impl_.issues_);
  swap(_impl_.checked_expr_, other->_impl_.checked_expr_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CheckResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto_getter, &descriptor_table_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto_once,
      file_level_metadata_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto[3]);
}

// ===================================================================

EvalRequest_BindingsEntry_DoNotUse::EvalRequest_BindingsEntry_DoNotUse() {}
EvalRequest_BindingsEntry_DoNotUse::EvalRequest_BindingsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void EvalRequest_BindingsEntry_DoNotUse::MergeFrom(const EvalRequest_BindingsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata EvalRequest_BindingsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto_getter, &descriptor_table_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto_once,
      file_level_metadata_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto[4]);
}

// ===================================================================

class EvalRequest::_Internal {
 public:
  static const ::google::api::expr::v1alpha1::ParsedExpr& parsed_expr(const EvalRequest* msg);
  static const ::google::api::expr::v1alpha1::CheckedExpr& checked_expr(const EvalRequest* msg);
};

const ::google::api::expr::v1alpha1::ParsedExpr&
EvalRequest::_Internal::parsed_expr(const EvalRequest* msg) {
  return *msg->_impl_.expr_kind_.parsed_expr_;
}
const ::google::api::expr::v1alpha1::CheckedExpr&
EvalRequest::_Internal::checked_expr(const EvalRequest* msg) {
  return *msg->_impl_.expr_kind_.checked_expr_;
}
void EvalRequest::set_allocated_parsed_expr(::google::api::expr::v1alpha1::ParsedExpr* parsed_expr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_expr_kind();
  if (parsed_expr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(parsed_expr));
    if (message_arena != submessage_arena) {
      parsed_expr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, parsed_expr, submessage_arena);
    }
    set_has_parsed_expr();
    _impl_.expr_kind_.parsed_expr_ = parsed_expr;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.conformance.v1alpha1.EvalRequest.parsed_expr)
}
void EvalRequest::clear_parsed_expr() {
  if (_internal_has_parsed_expr()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.expr_kind_.parsed_expr_;
    }
    clear_has_expr_kind();
  }
}
void EvalRequest::set_allocated_checked_expr(::google::api::expr::v1alpha1::CheckedExpr* checked_expr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_expr_kind();
  if (checked_expr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(checked_expr));
    if (message_arena != submessage_arena) {
      checked_expr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, checked_expr, submessage_arena);
    }
    set_has_checked_expr();
    _impl_.expr_kind_.checked_expr_ = checked_expr;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.conformance.v1alpha1.EvalRequest.checked_expr)
}
void EvalRequest::clear_checked_expr() {
  if (_internal_has_checked_expr()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.expr_kind_.checked_expr_;
    }
    clear_has_expr_kind();
  }
}
void EvalRequest::clear_bindings() {
  _impl_.bindings_.Clear();
}
EvalRequest::EvalRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &EvalRequest::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:google.api.expr.conformance.v1alpha1.EvalRequest)
}
EvalRequest::EvalRequest(const EvalRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EvalRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.bindings_)*/{}
    , decltype(_impl_.container_){}
    , decltype(_impl_.expr_kind_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.bindings_.MergeFrom(from._impl_.bindings_);
  _impl_.container_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.container_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_container().empty()) {
    _this->_impl_.container_.Set(from._internal_container(), 
      _this->GetArenaForAllocation());
  }
  clear_has_expr_kind();
  switch (from.expr_kind_case()) {
    case kParsedExpr: {
      _this->_internal_mutable_parsed_expr()->::google::api::expr::v1alpha1::ParsedExpr::MergeFrom(
          from._internal_parsed_expr());
      break;
    }
    case kCheckedExpr: {
      _this->_internal_mutable_checked_expr()->::google::api::expr::v1alpha1::CheckedExpr::MergeFrom(
          from._internal_checked_expr());
      break;
    }
    case EXPR_KIND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.conformance.v1alpha1.EvalRequest)
}

inline void EvalRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.bindings_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.container_){}
    , decltype(_impl_.expr_kind_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  _impl_.container_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.container_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  clear_has_expr_kind();
}

EvalRequest::~EvalRequest() {
  // @@protoc_insertion_point(destructor:google.api.expr.conformance.v1alpha1.EvalRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void EvalRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.bindings_.Destruct();
  _impl_.bindings_.~MapField();
  _impl_.container_.Destroy();
  if (has_expr_kind()) {
    clear_expr_kind();
  }
}

void EvalRequest::ArenaDtor(void* object) {
  EvalRequest* _this = reinterpret_cast< EvalRequest* >(object);
  _this->_impl_.bindings_.Destruct();
}
void EvalRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EvalRequest::clear_expr_kind() {
// @@protoc_insertion_point(one_of_clear_start:google.api.expr.conformance.v1alpha1.EvalRequest)
  switch (expr_kind_case()) {
    case kParsedExpr: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.expr_kind_.parsed_expr_;
      }
      break;
    }
    case kCheckedExpr: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.expr_kind_.checked_expr_;
      }
      break;
    }
    case EXPR_KIND_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = EXPR_KIND_NOT_SET;
}


void EvalRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.conformance.v1alpha1.EvalRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bindings_.Clear();
  _impl_.container_.ClearToEmpty();
  clear_expr_kind();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EvalRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.api.expr.v1alpha1.ParsedExpr parsed_expr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_parsed_expr(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.expr.v1alpha1.CheckedExpr checked_expr = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_checked_expr(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, .google.api.expr.v1alpha1.ExprValue> bindings = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.bindings_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string container = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_container();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.expr.conformance.v1alpha1.EvalRequest.container"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EvalRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.conformance.v1alpha1.EvalRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1alpha1.ParsedExpr parsed_expr = 1;
  if (_internal_has_parsed_expr()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::parsed_expr(this),
        _Internal::parsed_expr(this).GetCachedSize(), target, stream);
  }

  // .google.api.expr.v1alpha1.CheckedExpr checked_expr = 2;
  if (_internal_has_checked_expr()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::checked_expr(this),
        _Internal::checked_expr(this).GetCachedSize(), target, stream);
  }

  // map<string, .google.api.expr.v1alpha1.ExprValue> bindings = 3;
  if (!this->_internal_bindings().empty()) {
    using MapType = ::_pb::Map<std::string, ::google::api::expr::v1alpha1::ExprValue>;
    using WireHelper = EvalRequest_BindingsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_bindings();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "google.api.expr.conformance.v1alpha1.EvalRequest.BindingsEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(3, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(3, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // string container = 4;
  if (!this->_internal_container().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_container().data(), static_cast<int>(this->_internal_container().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.conformance.v1alpha1.EvalRequest.container");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_container(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.conformance.v1alpha1.EvalRequest)
  return target;
}

size_t EvalRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.conformance.v1alpha1.EvalRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .google.api.expr.v1alpha1.ExprValue> bindings = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_bindings_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::google::api::expr::v1alpha1::ExprValue >::const_iterator
      it = this->_internal_bindings().begin();
      it != this->_internal_bindings().end(); ++it) {
    total_size += EvalRequest_BindingsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string container = 4;
  if (!this->_internal_container().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_container());
  }

  switch (expr_kind_case()) {
    // .google.api.expr.v1alpha1.ParsedExpr parsed_expr = 1;
    case kParsedExpr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.expr_kind_.parsed_expr_);
      break;
    }
    // .google.api.expr.v1alpha1.CheckedExpr checked_expr = 2;
    case kCheckedExpr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.expr_kind_.checked_expr_);
      break;
    }
    case EXPR_KIND_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EvalRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EvalRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EvalRequest::GetClassData() const { return &_class_data_; }


void EvalRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EvalRequest*>(&to_msg);
  auto& from = static_cast<const EvalRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.conformance.v1alpha1.EvalRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.bindings_.MergeFrom(from._impl_.bindings_);
  if (!from._internal_container().empty()) {
    _this->_internal_set_container(from._internal_container());
  }
  switch (from.expr_kind_case()) {
    case kParsedExpr: {
      _this->_internal_mutable_parsed_expr()->::google::api::expr::v1alpha1::ParsedExpr::MergeFrom(
          from._internal_parsed_expr());
      break;
    }
    case kCheckedExpr: {
      _this->_internal_mutable_checked_expr()->::google::api::expr::v1alpha1::CheckedExpr::MergeFrom(
          from._internal_checked_expr());
      break;
    }
    case EXPR_KIND_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EvalRequest::CopyFrom(const EvalRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.conformance.v1alpha1.EvalRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvalRequest::IsInitialized() const {
  return true;
}

void EvalRequest::InternalSwap(EvalRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.bindings_.InternalSwap(&other->_impl_.bindings_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.container_, lhs_arena,
      &other->_impl_.container_, rhs_arena
  );
  swap(_impl_.expr_kind_, other->_impl_.expr_kind_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata EvalRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto_getter, &descriptor_table_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto_once,
      file_level_metadata_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto[5]);
}

// ===================================================================

class EvalResponse::_Internal {
 public:
  static const ::google::api::expr::v1alpha1::ExprValue& result(const EvalResponse* msg);
};

const ::google::api::expr::v1alpha1::ExprValue&
EvalResponse::_Internal::result(const EvalResponse* msg) {
  return *msg->_impl_.result_;
}
void EvalResponse::clear_result() {
  if (GetArenaForAllocation() == nullptr && _impl_.result_ != nullptr) {
    delete _impl_.result_;
  }
  _impl_.result_ = nullptr;
}
void EvalResponse::clear_issues() {
  _impl_.issues_.Clear();
}
EvalResponse::EvalResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.conformance.v1alpha1.EvalResponse)
}
EvalResponse::EvalResponse(const EvalResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EvalResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.issues_){from._impl_.issues_}
    , decltype(_impl_.result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_result()) {
    _this->_impl_.result_ = new ::google::api::expr::v1alpha1::ExprValue(*from._impl_.result_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.conformance.v1alpha1.EvalResponse)
}

inline void EvalResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.issues_){arena}
    , decltype(_impl_.result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

EvalResponse::~EvalResponse() {
  // @@protoc_insertion_point(destructor:google.api.expr.conformance.v1alpha1.EvalResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EvalResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.issues_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.result_;
}

void EvalResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EvalResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.conformance.v1alpha1.EvalResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.issues_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.result_ != nullptr) {
    delete _impl_.result_;
  }
  _impl_.result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EvalResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.api.expr.v1alpha1.ExprValue result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .google.rpc.Status issues = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_issues(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EvalResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.conformance.v1alpha1.EvalResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1alpha1.ExprValue result = 1;
  if (this->_internal_has_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::result(this),
        _Internal::result(this).GetCachedSize(), target, stream);
  }

  // repeated .google.rpc.Status issues = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_issues_size()); i < n; i++) {
    const auto& repfield = this->_internal_issues(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.conformance.v1alpha1.EvalResponse)
  return target;
}

size_t EvalResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.conformance.v1alpha1.EvalResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.rpc.Status issues = 2;
  total_size += 1UL * this->_internal_issues_size();
  for (const auto& msg : this->_impl_.issues_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .google.api.expr.v1alpha1.ExprValue result = 1;
  if (this->_internal_has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EvalResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EvalResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EvalResponse::GetClassData() const { return &_class_data_; }


void EvalResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EvalResponse*>(&to_msg);
  auto& from = static_cast<const EvalResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.conformance.v1alpha1.EvalResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.issues_.MergeFrom(from._impl_.issues_);
  if (from._internal_has_result()) {
    _this->_internal_mutable_result()->::google::api::expr::v1alpha1::ExprValue::MergeFrom(
        from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EvalResponse::CopyFrom(const EvalResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.conformance.v1alpha1.EvalResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvalResponse::IsInitialized() const {
  return true;
}

void EvalResponse::InternalSwap(EvalResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.issues_.InternalSwap(&other->_impl_.issues_);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EvalResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto_getter, &descriptor_table_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto_once,
      file_level_metadata_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto[6]);
}

// ===================================================================

class SourcePosition::_Internal {
 public:
};

SourcePosition::SourcePosition(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.conformance.v1alpha1.SourcePosition)
}
SourcePosition::SourcePosition(const SourcePosition& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SourcePosition* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.location_){}
    , decltype(_impl_.offset_){}
    , decltype(_impl_.line_){}
    , decltype(_impl_.column_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.location_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.location_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location().empty()) {
    _this->_impl_.location_.Set(from._internal_location(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.offset_, &from._impl_.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.column_) -
    reinterpret_cast<char*>(&_impl_.offset_)) + sizeof(_impl_.column_));
  // @@protoc_insertion_point(copy_constructor:google.api.expr.conformance.v1alpha1.SourcePosition)
}

inline void SourcePosition::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.location_){}
    , decltype(_impl_.offset_){0}
    , decltype(_impl_.line_){0}
    , decltype(_impl_.column_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.location_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.location_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SourcePosition::~SourcePosition() {
  // @@protoc_insertion_point(destructor:google.api.expr.conformance.v1alpha1.SourcePosition)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SourcePosition::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.location_.Destroy();
}

void SourcePosition::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SourcePosition::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.conformance.v1alpha1.SourcePosition)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.location_.ClearToEmpty();
  ::memset(&_impl_.offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.column_) -
      reinterpret_cast<char*>(&_impl_.offset_)) + sizeof(_impl_.column_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SourcePosition::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string location = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_location();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.expr.conformance.v1alpha1.SourcePosition.location"));
        } else
          goto handle_unusual;
        continue;
      // int32 offset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 line = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.line_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 column = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.column_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SourcePosition::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.conformance.v1alpha1.SourcePosition)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string location = 1;
  if (!this->_internal_location().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location().data(), static_cast<int>(this->_internal_location().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.conformance.v1alpha1.SourcePosition.location");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_location(), target);
  }

  // int32 offset = 2;
  if (this->_internal_offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_offset(), target);
  }

  // int32 line = 3;
  if (this->_internal_line() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_line(), target);
  }

  // int32 column = 4;
  if (this->_internal_column() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_column(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.conformance.v1alpha1.SourcePosition)
  return target;
}

size_t SourcePosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.conformance.v1alpha1.SourcePosition)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string location = 1;
  if (!this->_internal_location().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location());
  }

  // int32 offset = 2;
  if (this->_internal_offset() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_offset());
  }

  // int32 line = 3;
  if (this->_internal_line() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_line());
  }

  // int32 column = 4;
  if (this->_internal_column() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_column());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SourcePosition::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SourcePosition::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SourcePosition::GetClassData() const { return &_class_data_; }


void SourcePosition::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SourcePosition*>(&to_msg);
  auto& from = static_cast<const SourcePosition&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.conformance.v1alpha1.SourcePosition)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_location().empty()) {
    _this->_internal_set_location(from._internal_location());
  }
  if (from._internal_offset() != 0) {
    _this->_internal_set_offset(from._internal_offset());
  }
  if (from._internal_line() != 0) {
    _this->_internal_set_line(from._internal_line());
  }
  if (from._internal_column() != 0) {
    _this->_internal_set_column(from._internal_column());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SourcePosition::CopyFrom(const SourcePosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.conformance.v1alpha1.SourcePosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SourcePosition::IsInitialized() const {
  return true;
}

void SourcePosition::InternalSwap(SourcePosition* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.location_, lhs_arena,
      &other->_impl_.location_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SourcePosition, _impl_.column_)
      + sizeof(SourcePosition::_impl_.column_)
      - PROTOBUF_FIELD_OFFSET(SourcePosition, _impl_.offset_)>(
          reinterpret_cast<char*>(&_impl_.offset_),
          reinterpret_cast<char*>(&other->_impl_.offset_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SourcePosition::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto_getter, &descriptor_table_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto_once,
      file_level_metadata_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto[7]);
}

// ===================================================================

class IssueDetails::_Internal {
 public:
  static const ::google::api::expr::conformance::v1alpha1::SourcePosition& position(const IssueDetails* msg);
};

const ::google::api::expr::conformance::v1alpha1::SourcePosition&
IssueDetails::_Internal::position(const IssueDetails* msg) {
  return *msg->_impl_.position_;
}
IssueDetails::IssueDetails(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.conformance.v1alpha1.IssueDetails)
}
IssueDetails::IssueDetails(const IssueDetails& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  IssueDetails* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.position_){nullptr}
    , decltype(_impl_.id_){}
    , decltype(_impl_.severity_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_position()) {
    _this->_impl_.position_ = new ::google::api::expr::conformance::v1alpha1::SourcePosition(*from._impl_.position_);
  }
  ::memcpy(&_impl_.id_, &from._impl_.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.severity_) -
    reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.severity_));
  // @@protoc_insertion_point(copy_constructor:google.api.expr.conformance.v1alpha1.IssueDetails)
}

inline void IssueDetails::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.position_){nullptr}
    , decltype(_impl_.id_){int64_t{0}}
    , decltype(_impl_.severity_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

IssueDetails::~IssueDetails() {
  // @@protoc_insertion_point(destructor:google.api.expr.conformance.v1alpha1.IssueDetails)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void IssueDetails::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.position_;
}

void IssueDetails::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void IssueDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.conformance.v1alpha1.IssueDetails)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.position_ != nullptr) {
    delete _impl_.position_;
  }
  _impl_.position_ = nullptr;
  ::memset(&_impl_.id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.severity_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.severity_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IssueDetails::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.api.expr.conformance.v1alpha1.IssueDetails.Severity severity = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_severity(static_cast<::google::api::expr::conformance::v1alpha1::IssueDetails_Severity>(val));
        } else
          goto handle_unusual;
        continue;
      // .google.api.expr.conformance.v1alpha1.SourcePosition position = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_position(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* IssueDetails::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.conformance.v1alpha1.IssueDetails)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.conformance.v1alpha1.IssueDetails.Severity severity = 1;
  if (this->_internal_severity() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_severity(), target);
  }

  // .google.api.expr.conformance.v1alpha1.SourcePosition position = 2;
  if (this->_internal_has_position()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::position(this),
        _Internal::position(this).GetCachedSize(), target, stream);
  }

  // int64 id = 3;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.conformance.v1alpha1.IssueDetails)
  return target;
}

size_t IssueDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.conformance.v1alpha1.IssueDetails)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.api.expr.conformance.v1alpha1.SourcePosition position = 2;
  if (this->_internal_has_position()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.position_);
  }

  // int64 id = 3;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_id());
  }

  // .google.api.expr.conformance.v1alpha1.IssueDetails.Severity severity = 1;
  if (this->_internal_severity() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_severity());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData IssueDetails::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    IssueDetails::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*IssueDetails::GetClassData() const { return &_class_data_; }


void IssueDetails::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<IssueDetails*>(&to_msg);
  auto& from = static_cast<const IssueDetails&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.conformance.v1alpha1.IssueDetails)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_position()) {
    _this->_internal_mutable_position()->::google::api::expr::conformance::v1alpha1::SourcePosition::MergeFrom(
        from._internal_position());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_severity() != 0) {
    _this->_internal_set_severity(from._internal_severity());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void IssueDetails::CopyFrom(const IssueDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.conformance.v1alpha1.IssueDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IssueDetails::IsInitialized() const {
  return true;
}

void IssueDetails::InternalSwap(IssueDetails* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IssueDetails, _impl_.severity_)
      + sizeof(IssueDetails::_impl_.severity_)
      - PROTOBUF_FIELD_OFFSET(IssueDetails, _impl_.position_)>(
          reinterpret_cast<char*>(&_impl_.position_),
          reinterpret_cast<char*>(&other->_impl_.position_));
}

::PROTOBUF_NAMESPACE_ID::Metadata IssueDetails::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto_getter, &descriptor_table_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto_once,
      file_level_metadata_google_2fapi_2fexpr_2fconformance_2fv1alpha1_2fconformance_5fservice_2eproto[8]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace conformance
}  // namespace expr
}  // namespace api
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::google::api::expr::conformance::v1alpha1::ParseRequest*
Arena::CreateMaybeMessage< ::google::api::expr::conformance::v1alpha1::ParseRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::conformance::v1alpha1::ParseRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::conformance::v1alpha1::ParseResponse*
Arena::CreateMaybeMessage< ::google::api::expr::conformance::v1alpha1::ParseResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::conformance::v1alpha1::ParseResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::conformance::v1alpha1::CheckRequest*
Arena::CreateMaybeMessage< ::google::api::expr::conformance::v1alpha1::CheckRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::conformance::v1alpha1::CheckRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::conformance::v1alpha1::CheckResponse*
Arena::CreateMaybeMessage< ::google::api::expr::conformance::v1alpha1::CheckResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::conformance::v1alpha1::CheckResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::conformance::v1alpha1::EvalRequest_BindingsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::google::api::expr::conformance::v1alpha1::EvalRequest_BindingsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::conformance::v1alpha1::EvalRequest_BindingsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::conformance::v1alpha1::EvalRequest*
Arena::CreateMaybeMessage< ::google::api::expr::conformance::v1alpha1::EvalRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::conformance::v1alpha1::EvalRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::conformance::v1alpha1::EvalResponse*
Arena::CreateMaybeMessage< ::google::api::expr::conformance::v1alpha1::EvalResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::conformance::v1alpha1::EvalResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::conformance::v1alpha1::SourcePosition*
Arena::CreateMaybeMessage< ::google::api::expr::conformance::v1alpha1::SourcePosition >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::conformance::v1alpha1::SourcePosition >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::conformance::v1alpha1::IssueDetails*
Arena::CreateMaybeMessage< ::google::api::expr::conformance::v1alpha1::IssueDetails >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::conformance::v1alpha1::IssueDetails >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

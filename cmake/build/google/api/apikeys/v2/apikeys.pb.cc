// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/apikeys/v2/apikeys.proto

#include "google/api/apikeys/v2/apikeys.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace google {
namespace api {
namespace apikeys {
namespace v2 {
PROTOBUF_CONSTEXPR CreateKeyRequest::CreateKeyRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.parent_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.key_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.key_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateKeyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateKeyRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateKeyRequestDefaultTypeInternal() {}
  union {
    CreateKeyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateKeyRequestDefaultTypeInternal _CreateKeyRequest_default_instance_;
PROTOBUF_CONSTEXPR ListKeysRequest::ListKeysRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.parent_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.page_token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.page_size_)*/0
  , /*decltype(_impl_.show_deleted_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListKeysRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListKeysRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListKeysRequestDefaultTypeInternal() {}
  union {
    ListKeysRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListKeysRequestDefaultTypeInternal _ListKeysRequest_default_instance_;
PROTOBUF_CONSTEXPR ListKeysResponse::ListKeysResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.keys_)*/{}
  , /*decltype(_impl_.next_page_token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListKeysResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListKeysResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListKeysResponseDefaultTypeInternal() {}
  union {
    ListKeysResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListKeysResponseDefaultTypeInternal _ListKeysResponse_default_instance_;
PROTOBUF_CONSTEXPR GetKeyRequest::GetKeyRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetKeyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetKeyRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetKeyRequestDefaultTypeInternal() {}
  union {
    GetKeyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetKeyRequestDefaultTypeInternal _GetKeyRequest_default_instance_;
PROTOBUF_CONSTEXPR GetKeyStringRequest::GetKeyStringRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetKeyStringRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetKeyStringRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetKeyStringRequestDefaultTypeInternal() {}
  union {
    GetKeyStringRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetKeyStringRequestDefaultTypeInternal _GetKeyStringRequest_default_instance_;
PROTOBUF_CONSTEXPR GetKeyStringResponse::GetKeyStringResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.key_string_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetKeyStringResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetKeyStringResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetKeyStringResponseDefaultTypeInternal() {}
  union {
    GetKeyStringResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetKeyStringResponseDefaultTypeInternal _GetKeyStringResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateKeyRequest::UpdateKeyRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.key_)*/nullptr
  , /*decltype(_impl_.update_mask_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateKeyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateKeyRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateKeyRequestDefaultTypeInternal() {}
  union {
    UpdateKeyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateKeyRequestDefaultTypeInternal _UpdateKeyRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteKeyRequest::DeleteKeyRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.etag_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteKeyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteKeyRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteKeyRequestDefaultTypeInternal() {}
  union {
    DeleteKeyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteKeyRequestDefaultTypeInternal _DeleteKeyRequest_default_instance_;
PROTOBUF_CONSTEXPR UndeleteKeyRequest::UndeleteKeyRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UndeleteKeyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UndeleteKeyRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UndeleteKeyRequestDefaultTypeInternal() {}
  union {
    UndeleteKeyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UndeleteKeyRequestDefaultTypeInternal _UndeleteKeyRequest_default_instance_;
PROTOBUF_CONSTEXPR LookupKeyRequest::LookupKeyRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.key_string_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LookupKeyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LookupKeyRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LookupKeyRequestDefaultTypeInternal() {}
  union {
    LookupKeyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LookupKeyRequestDefaultTypeInternal _LookupKeyRequest_default_instance_;
PROTOBUF_CONSTEXPR LookupKeyResponse::LookupKeyResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.parent_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LookupKeyResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LookupKeyResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LookupKeyResponseDefaultTypeInternal() {}
  union {
    LookupKeyResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LookupKeyResponseDefaultTypeInternal _LookupKeyResponse_default_instance_;
}  // namespace v2
}  // namespace apikeys
}  // namespace api
}  // namespace google
static ::_pb::Metadata file_level_metadata_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto[11];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto = nullptr;

const uint32_t TableStruct_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::CreateKeyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::CreateKeyRequest, _impl_.parent_),
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::CreateKeyRequest, _impl_.key_),
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::CreateKeyRequest, _impl_.key_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::ListKeysRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::ListKeysRequest, _impl_.parent_),
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::ListKeysRequest, _impl_.page_size_),
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::ListKeysRequest, _impl_.page_token_),
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::ListKeysRequest, _impl_.show_deleted_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::ListKeysResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::ListKeysResponse, _impl_.keys_),
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::ListKeysResponse, _impl_.next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::GetKeyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::GetKeyRequest, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::GetKeyStringRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::GetKeyStringRequest, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::GetKeyStringResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::GetKeyStringResponse, _impl_.key_string_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::UpdateKeyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::UpdateKeyRequest, _impl_.key_),
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::UpdateKeyRequest, _impl_.update_mask_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::DeleteKeyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::DeleteKeyRequest, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::DeleteKeyRequest, _impl_.etag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::UndeleteKeyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::UndeleteKeyRequest, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::LookupKeyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::LookupKeyRequest, _impl_.key_string_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::LookupKeyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::LookupKeyResponse, _impl_.parent_),
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::LookupKeyResponse, _impl_.name_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::google::api::apikeys::v2::CreateKeyRequest)},
  { 9, -1, -1, sizeof(::google::api::apikeys::v2::ListKeysRequest)},
  { 19, -1, -1, sizeof(::google::api::apikeys::v2::ListKeysResponse)},
  { 27, -1, -1, sizeof(::google::api::apikeys::v2::GetKeyRequest)},
  { 34, -1, -1, sizeof(::google::api::apikeys::v2::GetKeyStringRequest)},
  { 41, -1, -1, sizeof(::google::api::apikeys::v2::GetKeyStringResponse)},
  { 48, -1, -1, sizeof(::google::api::apikeys::v2::UpdateKeyRequest)},
  { 56, -1, -1, sizeof(::google::api::apikeys::v2::DeleteKeyRequest)},
  { 64, -1, -1, sizeof(::google::api::apikeys::v2::UndeleteKeyRequest)},
  { 71, -1, -1, sizeof(::google::api::apikeys::v2::LookupKeyRequest)},
  { 78, -1, -1, sizeof(::google::api::apikeys::v2::LookupKeyResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::google::api::apikeys::v2::_CreateKeyRequest_default_instance_._instance,
  &::google::api::apikeys::v2::_ListKeysRequest_default_instance_._instance,
  &::google::api::apikeys::v2::_ListKeysResponse_default_instance_._instance,
  &::google::api::apikeys::v2::_GetKeyRequest_default_instance_._instance,
  &::google::api::apikeys::v2::_GetKeyStringRequest_default_instance_._instance,
  &::google::api::apikeys::v2::_GetKeyStringResponse_default_instance_._instance,
  &::google::api::apikeys::v2::_UpdateKeyRequest_default_instance_._instance,
  &::google::api::apikeys::v2::_DeleteKeyRequest_default_instance_._instance,
  &::google::api::apikeys::v2::_UndeleteKeyRequest_default_instance_._instance,
  &::google::api::apikeys::v2::_LookupKeyRequest_default_instance_._instance,
  &::google::api::apikeys::v2::_LookupKeyResponse_default_instance_._instance,
};

const char descriptor_table_protodef_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n#google/api/apikeys/v2/apikeys.proto\022\025g"
  "oogle.api.apikeys.v2\032\034google/api/annotat"
  "ions.proto\032%google/api/apikeys/v2/resour"
  "ces.proto\032\027google/api/client.proto\032\037goog"
  "le/api/field_behavior.proto\032\031google/api/"
  "resource.proto\032#google/longrunning/opera"
  "tions.proto\032 google/protobuf/field_mask."
  "proto\"\204\001\n\020CreateKeyRequest\0222\n\006parent\030\001 \001"
  "(\tB\"\340A\002\372A\034\022\032apikeys.googleapis.com/Key\022,"
  "\n\003key\030\002 \001(\0132\032.google.api.apikeys.v2.KeyB"
  "\003\340A\002\022\016\n\006key_id\030\003 \001(\t\"\221\001\n\017ListKeysRequest"
  "\0222\n\006parent\030\001 \001(\tB\"\340A\002\372A\034\022\032apikeys.google"
  "apis.com/Key\022\026\n\tpage_size\030\002 \001(\005B\003\340A\001\022\027\n\n"
  "page_token\030\003 \001(\tB\003\340A\001\022\031\n\014show_deleted\030\006 "
  "\001(\010B\003\340A\001\"U\n\020ListKeysResponse\022(\n\004keys\030\001 \003"
  "(\0132\032.google.api.apikeys.v2.Key\022\027\n\017next_p"
  "age_token\030\002 \001(\t\"A\n\rGetKeyRequest\0220\n\004name"
  "\030\001 \001(\tB\"\340A\002\372A\034\n\032apikeys.googleapis.com/K"
  "ey\"G\n\023GetKeyStringRequest\0220\n\004name\030\001 \001(\tB"
  "\"\340A\002\372A\034\n\032apikeys.googleapis.com/Key\"*\n\024G"
  "etKeyStringResponse\022\022\n\nkey_string\030\001 \001(\t\""
  "q\n\020UpdateKeyRequest\022,\n\003key\030\001 \001(\0132\032.googl"
  "e.api.apikeys.v2.KeyB\003\340A\002\022/\n\013update_mask"
  "\030\002 \001(\0132\032.google.protobuf.FieldMask\"W\n\020De"
  "leteKeyRequest\0220\n\004name\030\001 \001(\tB\"\340A\002\372A\034\n\032ap"
  "ikeys.googleapis.com/Key\022\021\n\004etag\030\002 \001(\tB\003"
  "\340A\001\"F\n\022UndeleteKeyRequest\0220\n\004name\030\001 \001(\tB"
  "\"\340A\002\372A\034\n\032apikeys.googleapis.com/Key\"+\n\020L"
  "ookupKeyRequest\022\027\n\nkey_string\030\001 \001(\tB\003\340A\002"
  "\"1\n\021LookupKeyResponse\022\016\n\006parent\030\001 \001(\t\022\014\n"
  "\004name\030\002 \001(\t2\276\013\n\007ApiKeys\022\275\001\n\tCreateKey\022\'."
  "google.api.apikeys.v2.CreateKeyRequest\032\035"
  ".google.longrunning.Operation\"h\202\323\344\223\002/\"(/"
  "v2/{parent=projects/*/locations/*}/keys:"
  "\003key\332A\021parent,key,key_id\312A\034\n\003Key\022\025google"
  ".protobuf.Empty\022\226\001\n\010ListKeys\022&.google.ap"
  "i.apikeys.v2.ListKeysRequest\032\'.google.ap"
  "i.apikeys.v2.ListKeysResponse\"9\202\323\344\223\002*\022(/"
  "v2/{parent=projects/*/locations/*}/keys\332"
  "A\006parent\022\203\001\n\006GetKey\022$.google.api.apikeys"
  ".v2.GetKeyRequest\032\032.google.api.apikeys.v"
  "2.Key\"7\202\323\344\223\002*\022(/v2/{name=projects/*/loca"
  "tions/*/keys/*}\332A\004name\022\252\001\n\014GetKeyString\022"
  "*.google.api.apikeys.v2.GetKeyStringRequ"
  "est\032+.google.api.apikeys.v2.GetKeyString"
  "Response\"A\202\323\344\223\0024\0222/v2/{name=projects/*/l"
  "ocations/*/keys/*}/keyString\332A\004name\022\277\001\n\t"
  "UpdateKey\022\'.google.api.apikeys.v2.Update"
  "KeyRequest\032\035.google.longrunning.Operatio"
  "n\"j\202\323\344\223\00232,/v2/{key.name=projects/*/loca"
  "tions/*/keys/*}:\003key\332A\017key,update_mask\312A"
  "\034\n\003Key\022\025google.protobuf.Empty\022\253\001\n\tDelete"
  "Key\022\'.google.api.apikeys.v2.DeleteKeyReq"
  "uest\032\035.google.longrunning.Operation\"V\202\323\344"
  "\223\002**(/v2/{name=projects/*/locations/*/ke"
  "ys/*}\332A\004name\312A\034\n\003Key\022\025google.protobuf.Em"
  "pty\022\264\001\n\013UndeleteKey\022).google.api.apikeys"
  ".v2.UndeleteKeyRequest\032\035.google.longrunn"
  "ing.Operation\"[\202\323\344\223\0026\"1/v2/{name=project"
  "s/*/locations/*/keys/*}:undelete:\001*\312A\034\n\003"
  "Key\022\025google.protobuf.Empty\022z\n\tLookupKey\022"
  "\'.google.api.apikeys.v2.LookupKeyRequest"
  "\032(.google.api.apikeys.v2.LookupKeyRespon"
  "se\"\032\202\323\344\223\002\024\022\022/v2/keys:lookupKey\032\203\001\312A\026apik"
  "eys.googleapis.com\322Aghttps://www.googlea"
  "pis.com/auth/cloud-platform,https://www."
  "googleapis.com/auth/cloud-platform.read-"
  "onlyB\272\001\n\031com.google.api.apikeys.v2B\014ApiK"
  "eysProtoP\001Z<google.golang.org/genproto/g"
  "oogleapis/api/apikeys/v2;apikeys\252\002\027Googl"
  "e.Cloud.ApiKeys.V2\312\002\027Google\\Cloud\\ApiKey"
  "s\\V2\352\002\032Google::Cloud::ApiKeys::V2b\006proto"
  "3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto_deps[7] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_google_2fapi_2fapikeys_2fv2_2fresources_2eproto,
  &::descriptor_table_google_2fapi_2fclient_2eproto,
  &::descriptor_table_google_2fapi_2ffield_5fbehavior_2eproto,
  &::descriptor_table_google_2fapi_2fresource_2eproto,
  &::descriptor_table_google_2flongrunning_2foperations_2eproto,
  &::descriptor_table_google_2fprotobuf_2ffield_5fmask_2eproto,
};
static ::_pbi::once_flag descriptor_table_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto = {
    false, false, 2881, descriptor_table_protodef_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto,
    "google/api/apikeys/v2/apikeys.proto",
    &descriptor_table_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto_once, descriptor_table_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto_deps, 7, 11,
    schemas, file_default_instances, TableStruct_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto::offsets,
    file_level_metadata_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto, file_level_enum_descriptors_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto,
    file_level_service_descriptors_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto_getter() {
  return &descriptor_table_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto(&descriptor_table_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto);
namespace google {
namespace api {
namespace apikeys {
namespace v2 {

// ===================================================================

class CreateKeyRequest::_Internal {
 public:
  static const ::google::api::apikeys::v2::Key& key(const CreateKeyRequest* msg);
};

const ::google::api::apikeys::v2::Key&
CreateKeyRequest::_Internal::key(const CreateKeyRequest* msg) {
  return *msg->_impl_.key_;
}
void CreateKeyRequest::clear_key() {
  if (GetArenaForAllocation() == nullptr && _impl_.key_ != nullptr) {
    delete _impl_.key_;
  }
  _impl_.key_ = nullptr;
}
CreateKeyRequest::CreateKeyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.apikeys.v2.CreateKeyRequest)
}
CreateKeyRequest::CreateKeyRequest(const CreateKeyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateKeyRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.parent_){}
    , decltype(_impl_.key_id_){}
    , decltype(_impl_.key_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.parent_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    _this->_impl_.parent_.Set(from._internal_parent(), 
      _this->GetArenaForAllocation());
  }
  _impl_.key_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key_id().empty()) {
    _this->_impl_.key_id_.Set(from._internal_key_id(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_key()) {
    _this->_impl_.key_ = new ::google::api::apikeys::v2::Key(*from._impl_.key_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.apikeys.v2.CreateKeyRequest)
}

inline void CreateKeyRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.parent_){}
    , decltype(_impl_.key_id_){}
    , decltype(_impl_.key_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.parent_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.key_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateKeyRequest::~CreateKeyRequest() {
  // @@protoc_insertion_point(destructor:google.api.apikeys.v2.CreateKeyRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateKeyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.parent_.Destroy();
  _impl_.key_id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.key_;
}

void CreateKeyRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateKeyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.apikeys.v2.CreateKeyRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parent_.ClearToEmpty();
  _impl_.key_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.key_ != nullptr) {
    delete _impl_.key_;
  }
  _impl_.key_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateKeyRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.apikeys.v2.CreateKeyRequest.parent"));
        } else
          goto handle_unusual;
        continue;
      // .google.api.apikeys.v2.Key key = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_key(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string key_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_key_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.apikeys.v2.CreateKeyRequest.key_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateKeyRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.apikeys.v2.CreateKeyRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.apikeys.v2.CreateKeyRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // .google.api.apikeys.v2.Key key = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_key()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::key(this),
        _Internal::key(this).GetCachedSize(), target, stream);
  }

  // string key_id = 3;
  if (!this->_internal_key_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key_id().data(), static_cast<int>(this->_internal_key_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.apikeys.v2.CreateKeyRequest.key_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_key_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.apikeys.v2.CreateKeyRequest)
  return target;
}

size_t CreateKeyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.apikeys.v2.CreateKeyRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string key_id = 3;
  if (!this->_internal_key_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key_id());
  }

  // .google.api.apikeys.v2.Key key = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_key()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.key_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateKeyRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateKeyRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateKeyRequest::GetClassData() const { return &_class_data_; }


void CreateKeyRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateKeyRequest*>(&to_msg);
  auto& from = static_cast<const CreateKeyRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.apikeys.v2.CreateKeyRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _this->_internal_set_parent(from._internal_parent());
  }
  if (!from._internal_key_id().empty()) {
    _this->_internal_set_key_id(from._internal_key_id());
  }
  if (from._internal_has_key()) {
    _this->_internal_mutable_key()->::google::api::apikeys::v2::Key::MergeFrom(
        from._internal_key());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateKeyRequest::CopyFrom(const CreateKeyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.apikeys.v2.CreateKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateKeyRequest::IsInitialized() const {
  return true;
}

void CreateKeyRequest::InternalSwap(CreateKeyRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.parent_, lhs_arena,
      &other->_impl_.parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.key_id_, lhs_arena,
      &other->_impl_.key_id_, rhs_arena
  );
  swap(_impl_.key_, other->_impl_.key_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateKeyRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto_getter, &descriptor_table_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto_once,
      file_level_metadata_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto[0]);
}

// ===================================================================

class ListKeysRequest::_Internal {
 public:
};

ListKeysRequest::ListKeysRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.apikeys.v2.ListKeysRequest)
}
ListKeysRequest::ListKeysRequest(const ListKeysRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListKeysRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.parent_){}
    , decltype(_impl_.page_token_){}
    , decltype(_impl_.page_size_){}
    , decltype(_impl_.show_deleted_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.parent_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    _this->_impl_.parent_.Set(from._internal_parent(), 
      _this->GetArenaForAllocation());
  }
  _impl_.page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_page_token().empty()) {
    _this->_impl_.page_token_.Set(from._internal_page_token(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.page_size_, &from._impl_.page_size_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.show_deleted_) -
    reinterpret_cast<char*>(&_impl_.page_size_)) + sizeof(_impl_.show_deleted_));
  // @@protoc_insertion_point(copy_constructor:google.api.apikeys.v2.ListKeysRequest)
}

inline void ListKeysRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.parent_){}
    , decltype(_impl_.page_token_){}
    , decltype(_impl_.page_size_){0}
    , decltype(_impl_.show_deleted_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.parent_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListKeysRequest::~ListKeysRequest() {
  // @@protoc_insertion_point(destructor:google.api.apikeys.v2.ListKeysRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListKeysRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.parent_.Destroy();
  _impl_.page_token_.Destroy();
}

void ListKeysRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListKeysRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.apikeys.v2.ListKeysRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parent_.ClearToEmpty();
  _impl_.page_token_.ClearToEmpty();
  ::memset(&_impl_.page_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.show_deleted_) -
      reinterpret_cast<char*>(&_impl_.page_size_)) + sizeof(_impl_.show_deleted_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListKeysRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.apikeys.v2.ListKeysRequest.parent"));
        } else
          goto handle_unusual;
        continue;
      // int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_page_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.apikeys.v2.ListKeysRequest.page_token"));
        } else
          goto handle_unusual;
        continue;
      // bool show_deleted = 6 [(.google.api.field_behavior) = OPTIONAL];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.show_deleted_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListKeysRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.apikeys.v2.ListKeysRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.apikeys.v2.ListKeysRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_page_size(), target);
  }

  // string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (!this->_internal_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.apikeys.v2.ListKeysRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_page_token(), target);
  }

  // bool show_deleted = 6 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_show_deleted() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(6, this->_internal_show_deleted(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.apikeys.v2.ListKeysRequest)
  return target;
}

size_t ListKeysRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.apikeys.v2.ListKeysRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (!this->_internal_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_page_size() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_page_size());
  }

  // bool show_deleted = 6 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_show_deleted() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListKeysRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListKeysRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListKeysRequest::GetClassData() const { return &_class_data_; }


void ListKeysRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListKeysRequest*>(&to_msg);
  auto& from = static_cast<const ListKeysRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.apikeys.v2.ListKeysRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _this->_internal_set_parent(from._internal_parent());
  }
  if (!from._internal_page_token().empty()) {
    _this->_internal_set_page_token(from._internal_page_token());
  }
  if (from._internal_page_size() != 0) {
    _this->_internal_set_page_size(from._internal_page_size());
  }
  if (from._internal_show_deleted() != 0) {
    _this->_internal_set_show_deleted(from._internal_show_deleted());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListKeysRequest::CopyFrom(const ListKeysRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.apikeys.v2.ListKeysRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListKeysRequest::IsInitialized() const {
  return true;
}

void ListKeysRequest::InternalSwap(ListKeysRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.parent_, lhs_arena,
      &other->_impl_.parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.page_token_, lhs_arena,
      &other->_impl_.page_token_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListKeysRequest, _impl_.show_deleted_)
      + sizeof(ListKeysRequest::_impl_.show_deleted_)
      - PROTOBUF_FIELD_OFFSET(ListKeysRequest, _impl_.page_size_)>(
          reinterpret_cast<char*>(&_impl_.page_size_),
          reinterpret_cast<char*>(&other->_impl_.page_size_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListKeysRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto_getter, &descriptor_table_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto_once,
      file_level_metadata_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto[1]);
}

// ===================================================================

class ListKeysResponse::_Internal {
 public:
};

void ListKeysResponse::clear_keys() {
  _impl_.keys_.Clear();
}
ListKeysResponse::ListKeysResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.apikeys.v2.ListKeysResponse)
}
ListKeysResponse::ListKeysResponse(const ListKeysResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListKeysResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.keys_){from._impl_.keys_}
    , decltype(_impl_.next_page_token_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.next_page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_next_page_token().empty()) {
    _this->_impl_.next_page_token_.Set(from._internal_next_page_token(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.apikeys.v2.ListKeysResponse)
}

inline void ListKeysResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.keys_){arena}
    , decltype(_impl_.next_page_token_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.next_page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListKeysResponse::~ListKeysResponse() {
  // @@protoc_insertion_point(destructor:google.api.apikeys.v2.ListKeysResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListKeysResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.keys_.~RepeatedPtrField();
  _impl_.next_page_token_.Destroy();
}

void ListKeysResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListKeysResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.apikeys.v2.ListKeysResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.keys_.Clear();
  _impl_.next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListKeysResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .google.api.apikeys.v2.Key keys = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_keys(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.apikeys.v2.ListKeysResponse.next_page_token"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListKeysResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.apikeys.v2.ListKeysResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.apikeys.v2.Key keys = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_keys_size()); i < n; i++) {
    const auto& repfield = this->_internal_keys(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.apikeys.v2.ListKeysResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.apikeys.v2.ListKeysResponse)
  return target;
}

size_t ListKeysResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.apikeys.v2.ListKeysResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.apikeys.v2.Key keys = 1;
  total_size += 1UL * this->_internal_keys_size();
  for (const auto& msg : this->_impl_.keys_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListKeysResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListKeysResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListKeysResponse::GetClassData() const { return &_class_data_; }


void ListKeysResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListKeysResponse*>(&to_msg);
  auto& from = static_cast<const ListKeysResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.apikeys.v2.ListKeysResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.keys_.MergeFrom(from._impl_.keys_);
  if (!from._internal_next_page_token().empty()) {
    _this->_internal_set_next_page_token(from._internal_next_page_token());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListKeysResponse::CopyFrom(const ListKeysResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.apikeys.v2.ListKeysResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListKeysResponse::IsInitialized() const {
  return true;
}

void ListKeysResponse::InternalSwap(ListKeysResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.keys_.InternalSwap(&other->_impl_.keys_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.next_page_token_, lhs_arena,
      &other->_impl_.next_page_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListKeysResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto_getter, &descriptor_table_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto_once,
      file_level_metadata_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto[2]);
}

// ===================================================================

class GetKeyRequest::_Internal {
 public:
};

GetKeyRequest::GetKeyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.apikeys.v2.GetKeyRequest)
}
GetKeyRequest::GetKeyRequest(const GetKeyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetKeyRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.apikeys.v2.GetKeyRequest)
}

inline void GetKeyRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetKeyRequest::~GetKeyRequest() {
  // @@protoc_insertion_point(destructor:google.api.apikeys.v2.GetKeyRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetKeyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void GetKeyRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetKeyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.apikeys.v2.GetKeyRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetKeyRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.apikeys.v2.GetKeyRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetKeyRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.apikeys.v2.GetKeyRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.apikeys.v2.GetKeyRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.apikeys.v2.GetKeyRequest)
  return target;
}

size_t GetKeyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.apikeys.v2.GetKeyRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetKeyRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetKeyRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetKeyRequest::GetClassData() const { return &_class_data_; }


void GetKeyRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetKeyRequest*>(&to_msg);
  auto& from = static_cast<const GetKeyRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.apikeys.v2.GetKeyRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetKeyRequest::CopyFrom(const GetKeyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.apikeys.v2.GetKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetKeyRequest::IsInitialized() const {
  return true;
}

void GetKeyRequest::InternalSwap(GetKeyRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetKeyRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto_getter, &descriptor_table_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto_once,
      file_level_metadata_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto[3]);
}

// ===================================================================

class GetKeyStringRequest::_Internal {
 public:
};

GetKeyStringRequest::GetKeyStringRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.apikeys.v2.GetKeyStringRequest)
}
GetKeyStringRequest::GetKeyStringRequest(const GetKeyStringRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetKeyStringRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.apikeys.v2.GetKeyStringRequest)
}

inline void GetKeyStringRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetKeyStringRequest::~GetKeyStringRequest() {
  // @@protoc_insertion_point(destructor:google.api.apikeys.v2.GetKeyStringRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetKeyStringRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void GetKeyStringRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetKeyStringRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.apikeys.v2.GetKeyStringRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetKeyStringRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.apikeys.v2.GetKeyStringRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetKeyStringRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.apikeys.v2.GetKeyStringRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.apikeys.v2.GetKeyStringRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.apikeys.v2.GetKeyStringRequest)
  return target;
}

size_t GetKeyStringRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.apikeys.v2.GetKeyStringRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetKeyStringRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetKeyStringRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetKeyStringRequest::GetClassData() const { return &_class_data_; }


void GetKeyStringRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetKeyStringRequest*>(&to_msg);
  auto& from = static_cast<const GetKeyStringRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.apikeys.v2.GetKeyStringRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetKeyStringRequest::CopyFrom(const GetKeyStringRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.apikeys.v2.GetKeyStringRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetKeyStringRequest::IsInitialized() const {
  return true;
}

void GetKeyStringRequest::InternalSwap(GetKeyStringRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetKeyStringRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto_getter, &descriptor_table_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto_once,
      file_level_metadata_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto[4]);
}

// ===================================================================

class GetKeyStringResponse::_Internal {
 public:
};

GetKeyStringResponse::GetKeyStringResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.apikeys.v2.GetKeyStringResponse)
}
GetKeyStringResponse::GetKeyStringResponse(const GetKeyStringResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetKeyStringResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.key_string_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.key_string_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_string_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key_string().empty()) {
    _this->_impl_.key_string_.Set(from._internal_key_string(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.apikeys.v2.GetKeyStringResponse)
}

inline void GetKeyStringResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.key_string_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.key_string_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_string_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetKeyStringResponse::~GetKeyStringResponse() {
  // @@protoc_insertion_point(destructor:google.api.apikeys.v2.GetKeyStringResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetKeyStringResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.key_string_.Destroy();
}

void GetKeyStringResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetKeyStringResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.apikeys.v2.GetKeyStringResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_string_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetKeyStringResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string key_string = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_key_string();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.apikeys.v2.GetKeyStringResponse.key_string"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetKeyStringResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.apikeys.v2.GetKeyStringResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string key_string = 1;
  if (!this->_internal_key_string().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key_string().data(), static_cast<int>(this->_internal_key_string().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.apikeys.v2.GetKeyStringResponse.key_string");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_key_string(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.apikeys.v2.GetKeyStringResponse)
  return target;
}

size_t GetKeyStringResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.apikeys.v2.GetKeyStringResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key_string = 1;
  if (!this->_internal_key_string().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key_string());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetKeyStringResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetKeyStringResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetKeyStringResponse::GetClassData() const { return &_class_data_; }


void GetKeyStringResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetKeyStringResponse*>(&to_msg);
  auto& from = static_cast<const GetKeyStringResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.apikeys.v2.GetKeyStringResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key_string().empty()) {
    _this->_internal_set_key_string(from._internal_key_string());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetKeyStringResponse::CopyFrom(const GetKeyStringResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.apikeys.v2.GetKeyStringResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetKeyStringResponse::IsInitialized() const {
  return true;
}

void GetKeyStringResponse::InternalSwap(GetKeyStringResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.key_string_, lhs_arena,
      &other->_impl_.key_string_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetKeyStringResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto_getter, &descriptor_table_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto_once,
      file_level_metadata_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto[5]);
}

// ===================================================================

class UpdateKeyRequest::_Internal {
 public:
  static const ::google::api::apikeys::v2::Key& key(const UpdateKeyRequest* msg);
  static const ::PROTOBUF_NAMESPACE_ID::FieldMask& update_mask(const UpdateKeyRequest* msg);
};

const ::google::api::apikeys::v2::Key&
UpdateKeyRequest::_Internal::key(const UpdateKeyRequest* msg) {
  return *msg->_impl_.key_;
}
const ::PROTOBUF_NAMESPACE_ID::FieldMask&
UpdateKeyRequest::_Internal::update_mask(const UpdateKeyRequest* msg) {
  return *msg->_impl_.update_mask_;
}
void UpdateKeyRequest::clear_key() {
  if (GetArenaForAllocation() == nullptr && _impl_.key_ != nullptr) {
    delete _impl_.key_;
  }
  _impl_.key_ = nullptr;
}
void UpdateKeyRequest::clear_update_mask() {
  if (GetArenaForAllocation() == nullptr && _impl_.update_mask_ != nullptr) {
    delete _impl_.update_mask_;
  }
  _impl_.update_mask_ = nullptr;
}
UpdateKeyRequest::UpdateKeyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.apikeys.v2.UpdateKeyRequest)
}
UpdateKeyRequest::UpdateKeyRequest(const UpdateKeyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateKeyRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.key_){nullptr}
    , decltype(_impl_.update_mask_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_key()) {
    _this->_impl_.key_ = new ::google::api::apikeys::v2::Key(*from._impl_.key_);
  }
  if (from._internal_has_update_mask()) {
    _this->_impl_.update_mask_ = new ::PROTOBUF_NAMESPACE_ID::FieldMask(*from._impl_.update_mask_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.apikeys.v2.UpdateKeyRequest)
}

inline void UpdateKeyRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.key_){nullptr}
    , decltype(_impl_.update_mask_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UpdateKeyRequest::~UpdateKeyRequest() {
  // @@protoc_insertion_point(destructor:google.api.apikeys.v2.UpdateKeyRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateKeyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.key_;
  if (this != internal_default_instance()) delete _impl_.update_mask_;
}

void UpdateKeyRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateKeyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.apikeys.v2.UpdateKeyRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.key_ != nullptr) {
    delete _impl_.key_;
  }
  _impl_.key_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.update_mask_ != nullptr) {
    delete _impl_.update_mask_;
  }
  _impl_.update_mask_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateKeyRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.api.apikeys.v2.Key key = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_key(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.FieldMask update_mask = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_update_mask(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateKeyRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.apikeys.v2.UpdateKeyRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.apikeys.v2.Key key = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_key()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::key(this),
        _Internal::key(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->_internal_has_update_mask()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::update_mask(this),
        _Internal::update_mask(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.apikeys.v2.UpdateKeyRequest)
  return target;
}

size_t UpdateKeyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.apikeys.v2.UpdateKeyRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.api.apikeys.v2.Key key = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_key()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.key_);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->_internal_has_update_mask()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.update_mask_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateKeyRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateKeyRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateKeyRequest::GetClassData() const { return &_class_data_; }


void UpdateKeyRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateKeyRequest*>(&to_msg);
  auto& from = static_cast<const UpdateKeyRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.apikeys.v2.UpdateKeyRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_key()) {
    _this->_internal_mutable_key()->::google::api::apikeys::v2::Key::MergeFrom(
        from._internal_key());
  }
  if (from._internal_has_update_mask()) {
    _this->_internal_mutable_update_mask()->::PROTOBUF_NAMESPACE_ID::FieldMask::MergeFrom(
        from._internal_update_mask());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateKeyRequest::CopyFrom(const UpdateKeyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.apikeys.v2.UpdateKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateKeyRequest::IsInitialized() const {
  return true;
}

void UpdateKeyRequest::InternalSwap(UpdateKeyRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateKeyRequest, _impl_.update_mask_)
      + sizeof(UpdateKeyRequest::_impl_.update_mask_)
      - PROTOBUF_FIELD_OFFSET(UpdateKeyRequest, _impl_.key_)>(
          reinterpret_cast<char*>(&_impl_.key_),
          reinterpret_cast<char*>(&other->_impl_.key_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateKeyRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto_getter, &descriptor_table_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto_once,
      file_level_metadata_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto[6]);
}

// ===================================================================

class DeleteKeyRequest::_Internal {
 public:
};

DeleteKeyRequest::DeleteKeyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.apikeys.v2.DeleteKeyRequest)
}
DeleteKeyRequest::DeleteKeyRequest(const DeleteKeyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteKeyRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.etag_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.etag_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.etag_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_etag().empty()) {
    _this->_impl_.etag_.Set(from._internal_etag(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.apikeys.v2.DeleteKeyRequest)
}

inline void DeleteKeyRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.etag_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.etag_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.etag_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteKeyRequest::~DeleteKeyRequest() {
  // @@protoc_insertion_point(destructor:google.api.apikeys.v2.DeleteKeyRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteKeyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.etag_.Destroy();
}

void DeleteKeyRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteKeyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.apikeys.v2.DeleteKeyRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.etag_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteKeyRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.apikeys.v2.DeleteKeyRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // string etag = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_etag();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.apikeys.v2.DeleteKeyRequest.etag"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteKeyRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.apikeys.v2.DeleteKeyRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.apikeys.v2.DeleteKeyRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string etag = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (!this->_internal_etag().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_etag().data(), static_cast<int>(this->_internal_etag().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.apikeys.v2.DeleteKeyRequest.etag");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_etag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.apikeys.v2.DeleteKeyRequest)
  return target;
}

size_t DeleteKeyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.apikeys.v2.DeleteKeyRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string etag = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (!this->_internal_etag().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_etag());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteKeyRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteKeyRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteKeyRequest::GetClassData() const { return &_class_data_; }


void DeleteKeyRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteKeyRequest*>(&to_msg);
  auto& from = static_cast<const DeleteKeyRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.apikeys.v2.DeleteKeyRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_etag().empty()) {
    _this->_internal_set_etag(from._internal_etag());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteKeyRequest::CopyFrom(const DeleteKeyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.apikeys.v2.DeleteKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteKeyRequest::IsInitialized() const {
  return true;
}

void DeleteKeyRequest::InternalSwap(DeleteKeyRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.etag_, lhs_arena,
      &other->_impl_.etag_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteKeyRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto_getter, &descriptor_table_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto_once,
      file_level_metadata_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto[7]);
}

// ===================================================================

class UndeleteKeyRequest::_Internal {
 public:
};

UndeleteKeyRequest::UndeleteKeyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.apikeys.v2.UndeleteKeyRequest)
}
UndeleteKeyRequest::UndeleteKeyRequest(const UndeleteKeyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UndeleteKeyRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.apikeys.v2.UndeleteKeyRequest)
}

inline void UndeleteKeyRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UndeleteKeyRequest::~UndeleteKeyRequest() {
  // @@protoc_insertion_point(destructor:google.api.apikeys.v2.UndeleteKeyRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UndeleteKeyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void UndeleteKeyRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UndeleteKeyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.apikeys.v2.UndeleteKeyRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UndeleteKeyRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.apikeys.v2.UndeleteKeyRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UndeleteKeyRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.apikeys.v2.UndeleteKeyRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.apikeys.v2.UndeleteKeyRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.apikeys.v2.UndeleteKeyRequest)
  return target;
}

size_t UndeleteKeyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.apikeys.v2.UndeleteKeyRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UndeleteKeyRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UndeleteKeyRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UndeleteKeyRequest::GetClassData() const { return &_class_data_; }


void UndeleteKeyRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UndeleteKeyRequest*>(&to_msg);
  auto& from = static_cast<const UndeleteKeyRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.apikeys.v2.UndeleteKeyRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UndeleteKeyRequest::CopyFrom(const UndeleteKeyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.apikeys.v2.UndeleteKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UndeleteKeyRequest::IsInitialized() const {
  return true;
}

void UndeleteKeyRequest::InternalSwap(UndeleteKeyRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UndeleteKeyRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto_getter, &descriptor_table_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto_once,
      file_level_metadata_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto[8]);
}

// ===================================================================

class LookupKeyRequest::_Internal {
 public:
};

LookupKeyRequest::LookupKeyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.apikeys.v2.LookupKeyRequest)
}
LookupKeyRequest::LookupKeyRequest(const LookupKeyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LookupKeyRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.key_string_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.key_string_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_string_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key_string().empty()) {
    _this->_impl_.key_string_.Set(from._internal_key_string(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.apikeys.v2.LookupKeyRequest)
}

inline void LookupKeyRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.key_string_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.key_string_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_string_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LookupKeyRequest::~LookupKeyRequest() {
  // @@protoc_insertion_point(destructor:google.api.apikeys.v2.LookupKeyRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LookupKeyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.key_string_.Destroy();
}

void LookupKeyRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LookupKeyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.apikeys.v2.LookupKeyRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_string_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LookupKeyRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string key_string = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_key_string();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.apikeys.v2.LookupKeyRequest.key_string"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LookupKeyRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.apikeys.v2.LookupKeyRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string key_string = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_key_string().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key_string().data(), static_cast<int>(this->_internal_key_string().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.apikeys.v2.LookupKeyRequest.key_string");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_key_string(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.apikeys.v2.LookupKeyRequest)
  return target;
}

size_t LookupKeyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.apikeys.v2.LookupKeyRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key_string = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_key_string().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key_string());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LookupKeyRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LookupKeyRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LookupKeyRequest::GetClassData() const { return &_class_data_; }


void LookupKeyRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LookupKeyRequest*>(&to_msg);
  auto& from = static_cast<const LookupKeyRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.apikeys.v2.LookupKeyRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key_string().empty()) {
    _this->_internal_set_key_string(from._internal_key_string());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LookupKeyRequest::CopyFrom(const LookupKeyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.apikeys.v2.LookupKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LookupKeyRequest::IsInitialized() const {
  return true;
}

void LookupKeyRequest::InternalSwap(LookupKeyRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.key_string_, lhs_arena,
      &other->_impl_.key_string_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata LookupKeyRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto_getter, &descriptor_table_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto_once,
      file_level_metadata_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto[9]);
}

// ===================================================================

class LookupKeyResponse::_Internal {
 public:
};

LookupKeyResponse::LookupKeyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.apikeys.v2.LookupKeyResponse)
}
LookupKeyResponse::LookupKeyResponse(const LookupKeyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LookupKeyResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.parent_){}
    , decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.parent_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    _this->_impl_.parent_.Set(from._internal_parent(), 
      _this->GetArenaForAllocation());
  }
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.apikeys.v2.LookupKeyResponse)
}

inline void LookupKeyResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.parent_){}
    , decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.parent_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LookupKeyResponse::~LookupKeyResponse() {
  // @@protoc_insertion_point(destructor:google.api.apikeys.v2.LookupKeyResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LookupKeyResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.parent_.Destroy();
  _impl_.name_.Destroy();
}

void LookupKeyResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LookupKeyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.apikeys.v2.LookupKeyResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parent_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LookupKeyResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.apikeys.v2.LookupKeyResponse.parent"));
        } else
          goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.apikeys.v2.LookupKeyResponse.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LookupKeyResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.apikeys.v2.LookupKeyResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.apikeys.v2.LookupKeyResponse.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.apikeys.v2.LookupKeyResponse.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.apikeys.v2.LookupKeyResponse)
  return target;
}

size_t LookupKeyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.apikeys.v2.LookupKeyResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1;
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LookupKeyResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LookupKeyResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LookupKeyResponse::GetClassData() const { return &_class_data_; }


void LookupKeyResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LookupKeyResponse*>(&to_msg);
  auto& from = static_cast<const LookupKeyResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.apikeys.v2.LookupKeyResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _this->_internal_set_parent(from._internal_parent());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LookupKeyResponse::CopyFrom(const LookupKeyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.apikeys.v2.LookupKeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LookupKeyResponse::IsInitialized() const {
  return true;
}

void LookupKeyResponse::InternalSwap(LookupKeyResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.parent_, lhs_arena,
      &other->_impl_.parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata LookupKeyResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto_getter, &descriptor_table_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto_once,
      file_level_metadata_google_2fapi_2fapikeys_2fv2_2fapikeys_2eproto[10]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace apikeys
}  // namespace api
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::google::api::apikeys::v2::CreateKeyRequest*
Arena::CreateMaybeMessage< ::google::api::apikeys::v2::CreateKeyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::apikeys::v2::CreateKeyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::apikeys::v2::ListKeysRequest*
Arena::CreateMaybeMessage< ::google::api::apikeys::v2::ListKeysRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::apikeys::v2::ListKeysRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::apikeys::v2::ListKeysResponse*
Arena::CreateMaybeMessage< ::google::api::apikeys::v2::ListKeysResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::apikeys::v2::ListKeysResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::apikeys::v2::GetKeyRequest*
Arena::CreateMaybeMessage< ::google::api::apikeys::v2::GetKeyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::apikeys::v2::GetKeyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::apikeys::v2::GetKeyStringRequest*
Arena::CreateMaybeMessage< ::google::api::apikeys::v2::GetKeyStringRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::apikeys::v2::GetKeyStringRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::apikeys::v2::GetKeyStringResponse*
Arena::CreateMaybeMessage< ::google::api::apikeys::v2::GetKeyStringResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::apikeys::v2::GetKeyStringResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::apikeys::v2::UpdateKeyRequest*
Arena::CreateMaybeMessage< ::google::api::apikeys::v2::UpdateKeyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::apikeys::v2::UpdateKeyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::apikeys::v2::DeleteKeyRequest*
Arena::CreateMaybeMessage< ::google::api::apikeys::v2::DeleteKeyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::apikeys::v2::DeleteKeyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::apikeys::v2::UndeleteKeyRequest*
Arena::CreateMaybeMessage< ::google::api::apikeys::v2::UndeleteKeyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::apikeys::v2::UndeleteKeyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::apikeys::v2::LookupKeyRequest*
Arena::CreateMaybeMessage< ::google::api::apikeys::v2::LookupKeyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::apikeys::v2::LookupKeyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::apikeys::v2::LookupKeyResponse*
Arena::CreateMaybeMessage< ::google::api::apikeys::v2::LookupKeyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::apikeys::v2::LookupKeyResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/auth.proto

#include "google/api/auth.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace google {
namespace api {
PROTOBUF_CONSTEXPR Authentication::Authentication(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.rules_)*/{}
  , /*decltype(_impl_.providers_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AuthenticationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AuthenticationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AuthenticationDefaultTypeInternal() {}
  union {
    Authentication _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AuthenticationDefaultTypeInternal _Authentication_default_instance_;
PROTOBUF_CONSTEXPR AuthenticationRule::AuthenticationRule(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.requirements_)*/{}
  , /*decltype(_impl_.selector_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.oauth_)*/nullptr
  , /*decltype(_impl_.allow_without_credential_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AuthenticationRuleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AuthenticationRuleDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AuthenticationRuleDefaultTypeInternal() {}
  union {
    AuthenticationRule _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AuthenticationRuleDefaultTypeInternal _AuthenticationRule_default_instance_;
PROTOBUF_CONSTEXPR JwtLocation::JwtLocation(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.value_prefix_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.in_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct JwtLocationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JwtLocationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~JwtLocationDefaultTypeInternal() {}
  union {
    JwtLocation _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JwtLocationDefaultTypeInternal _JwtLocation_default_instance_;
PROTOBUF_CONSTEXPR AuthProvider::AuthProvider(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.jwt_locations_)*/{}
  , /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.issuer_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.jwks_uri_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.audiences_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.authorization_url_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AuthProviderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AuthProviderDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AuthProviderDefaultTypeInternal() {}
  union {
    AuthProvider _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AuthProviderDefaultTypeInternal _AuthProvider_default_instance_;
PROTOBUF_CONSTEXPR OAuthRequirements::OAuthRequirements(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.canonical_scopes_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OAuthRequirementsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OAuthRequirementsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OAuthRequirementsDefaultTypeInternal() {}
  union {
    OAuthRequirements _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OAuthRequirementsDefaultTypeInternal _OAuthRequirements_default_instance_;
PROTOBUF_CONSTEXPR AuthRequirement::AuthRequirement(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.provider_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.audiences_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AuthRequirementDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AuthRequirementDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AuthRequirementDefaultTypeInternal() {}
  union {
    AuthRequirement _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AuthRequirementDefaultTypeInternal _AuthRequirement_default_instance_;
}  // namespace api
}  // namespace google
static ::_pb::Metadata file_level_metadata_google_2fapi_2fauth_2eproto[6];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_google_2fapi_2fauth_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_google_2fapi_2fauth_2eproto = nullptr;

const uint32_t TableStruct_google_2fapi_2fauth_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::Authentication, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::Authentication, _impl_.rules_),
  PROTOBUF_FIELD_OFFSET(::google::api::Authentication, _impl_.providers_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::AuthenticationRule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::AuthenticationRule, _impl_.selector_),
  PROTOBUF_FIELD_OFFSET(::google::api::AuthenticationRule, _impl_.oauth_),
  PROTOBUF_FIELD_OFFSET(::google::api::AuthenticationRule, _impl_.allow_without_credential_),
  PROTOBUF_FIELD_OFFSET(::google::api::AuthenticationRule, _impl_.requirements_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::JwtLocation, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::google::api::JwtLocation, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::google::api::JwtLocation, _impl_.value_prefix_),
  PROTOBUF_FIELD_OFFSET(::google::api::JwtLocation, _impl_.in_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::AuthProvider, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::AuthProvider, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::google::api::AuthProvider, _impl_.issuer_),
  PROTOBUF_FIELD_OFFSET(::google::api::AuthProvider, _impl_.jwks_uri_),
  PROTOBUF_FIELD_OFFSET(::google::api::AuthProvider, _impl_.audiences_),
  PROTOBUF_FIELD_OFFSET(::google::api::AuthProvider, _impl_.authorization_url_),
  PROTOBUF_FIELD_OFFSET(::google::api::AuthProvider, _impl_.jwt_locations_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::OAuthRequirements, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::OAuthRequirements, _impl_.canonical_scopes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::AuthRequirement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::AuthRequirement, _impl_.provider_id_),
  PROTOBUF_FIELD_OFFSET(::google::api::AuthRequirement, _impl_.audiences_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::google::api::Authentication)},
  { 8, -1, -1, sizeof(::google::api::AuthenticationRule)},
  { 18, -1, -1, sizeof(::google::api::JwtLocation)},
  { 29, -1, -1, sizeof(::google::api::AuthProvider)},
  { 41, -1, -1, sizeof(::google::api::OAuthRequirements)},
  { 48, -1, -1, sizeof(::google::api::AuthRequirement)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::google::api::_Authentication_default_instance_._instance,
  &::google::api::_AuthenticationRule_default_instance_._instance,
  &::google::api::_JwtLocation_default_instance_._instance,
  &::google::api::_AuthProvider_default_instance_._instance,
  &::google::api::_OAuthRequirements_default_instance_._instance,
  &::google::api::_AuthRequirement_default_instance_._instance,
};

const char descriptor_table_protodef_google_2fapi_2fauth_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\025google/api/auth.proto\022\ngoogle.api\"l\n\016A"
  "uthentication\022-\n\005rules\030\003 \003(\0132\036.google.ap"
  "i.AuthenticationRule\022+\n\tproviders\030\004 \003(\0132"
  "\030.google.api.AuthProvider\"\251\001\n\022Authentica"
  "tionRule\022\020\n\010selector\030\001 \001(\t\022,\n\005oauth\030\002 \001("
  "\0132\035.google.api.OAuthRequirements\022 \n\030allo"
  "w_without_credential\030\005 \001(\010\0221\n\014requiremen"
  "ts\030\007 \003(\0132\033.google.api.AuthRequirement\"^\n"
  "\013JwtLocation\022\020\n\006header\030\001 \001(\tH\000\022\017\n\005query\030"
  "\002 \001(\tH\000\022\020\n\006cookie\030\004 \001(\tH\000\022\024\n\014value_prefi"
  "x\030\003 \001(\tB\004\n\002in\"\232\001\n\014AuthProvider\022\n\n\002id\030\001 \001"
  "(\t\022\016\n\006issuer\030\002 \001(\t\022\020\n\010jwks_uri\030\003 \001(\t\022\021\n\t"
  "audiences\030\004 \001(\t\022\031\n\021authorization_url\030\005 \001"
  "(\t\022.\n\rjwt_locations\030\006 \003(\0132\027.google.api.J"
  "wtLocation\"-\n\021OAuthRequirements\022\030\n\020canon"
  "ical_scopes\030\001 \001(\t\"9\n\017AuthRequirement\022\023\n\013"
  "provider_id\030\001 \001(\t\022\021\n\taudiences\030\002 \001(\tBk\n\016"
  "com.google.apiB\tAuthProtoP\001ZEgoogle.gola"
  "ng.org/genproto/googleapis/api/serviceco"
  "nfig;serviceconfig\242\002\004GAPIb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_google_2fapi_2fauth_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_google_2fapi_2fauth_2eproto = {
    false, false, 793, descriptor_table_protodef_google_2fapi_2fauth_2eproto,
    "google/api/auth.proto",
    &descriptor_table_google_2fapi_2fauth_2eproto_once, nullptr, 0, 6,
    schemas, file_default_instances, TableStruct_google_2fapi_2fauth_2eproto::offsets,
    file_level_metadata_google_2fapi_2fauth_2eproto, file_level_enum_descriptors_google_2fapi_2fauth_2eproto,
    file_level_service_descriptors_google_2fapi_2fauth_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_google_2fapi_2fauth_2eproto_getter() {
  return &descriptor_table_google_2fapi_2fauth_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_google_2fapi_2fauth_2eproto(&descriptor_table_google_2fapi_2fauth_2eproto);
namespace google {
namespace api {

// ===================================================================

class Authentication::_Internal {
 public:
};

Authentication::Authentication(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.Authentication)
}
Authentication::Authentication(const Authentication& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Authentication* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.rules_){from._impl_.rules_}
    , decltype(_impl_.providers_){from._impl_.providers_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.api.Authentication)
}

inline void Authentication::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.rules_){arena}
    , decltype(_impl_.providers_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Authentication::~Authentication() {
  // @@protoc_insertion_point(destructor:google.api.Authentication)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Authentication::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.rules_.~RepeatedPtrField();
  _impl_.providers_.~RepeatedPtrField();
}

void Authentication::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Authentication::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.Authentication)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rules_.Clear();
  _impl_.providers_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Authentication::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .google.api.AuthenticationRule rules = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_rules(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .google.api.AuthProvider providers = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_providers(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Authentication::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.Authentication)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.AuthenticationRule rules = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_rules_size()); i < n; i++) {
    const auto& repfield = this->_internal_rules(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .google.api.AuthProvider providers = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_providers_size()); i < n; i++) {
    const auto& repfield = this->_internal_providers(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.Authentication)
  return target;
}

size_t Authentication::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.Authentication)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.AuthenticationRule rules = 3;
  total_size += 1UL * this->_internal_rules_size();
  for (const auto& msg : this->_impl_.rules_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .google.api.AuthProvider providers = 4;
  total_size += 1UL * this->_internal_providers_size();
  for (const auto& msg : this->_impl_.providers_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Authentication::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Authentication::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Authentication::GetClassData() const { return &_class_data_; }


void Authentication::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Authentication*>(&to_msg);
  auto& from = static_cast<const Authentication&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.Authentication)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.rules_.MergeFrom(from._impl_.rules_);
  _this->_impl_.providers_.MergeFrom(from._impl_.providers_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Authentication::CopyFrom(const Authentication& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.Authentication)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Authentication::IsInitialized() const {
  return true;
}

void Authentication::InternalSwap(Authentication* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.rules_.InternalSwap(&other->_impl_.rules_);
  _impl_.providers_.InternalSwap(&other->_impl_.providers_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Authentication::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fauth_2eproto_getter, &descriptor_table_google_2fapi_2fauth_2eproto_once,
      file_level_metadata_google_2fapi_2fauth_2eproto[0]);
}

// ===================================================================

class AuthenticationRule::_Internal {
 public:
  static const ::google::api::OAuthRequirements& oauth(const AuthenticationRule* msg);
};

const ::google::api::OAuthRequirements&
AuthenticationRule::_Internal::oauth(const AuthenticationRule* msg) {
  return *msg->_impl_.oauth_;
}
AuthenticationRule::AuthenticationRule(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.AuthenticationRule)
}
AuthenticationRule::AuthenticationRule(const AuthenticationRule& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AuthenticationRule* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.requirements_){from._impl_.requirements_}
    , decltype(_impl_.selector_){}
    , decltype(_impl_.oauth_){nullptr}
    , decltype(_impl_.allow_without_credential_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.selector_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.selector_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_selector().empty()) {
    _this->_impl_.selector_.Set(from._internal_selector(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_oauth()) {
    _this->_impl_.oauth_ = new ::google::api::OAuthRequirements(*from._impl_.oauth_);
  }
  _this->_impl_.allow_without_credential_ = from._impl_.allow_without_credential_;
  // @@protoc_insertion_point(copy_constructor:google.api.AuthenticationRule)
}

inline void AuthenticationRule::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.requirements_){arena}
    , decltype(_impl_.selector_){}
    , decltype(_impl_.oauth_){nullptr}
    , decltype(_impl_.allow_without_credential_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.selector_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.selector_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AuthenticationRule::~AuthenticationRule() {
  // @@protoc_insertion_point(destructor:google.api.AuthenticationRule)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AuthenticationRule::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.requirements_.~RepeatedPtrField();
  _impl_.selector_.Destroy();
  if (this != internal_default_instance()) delete _impl_.oauth_;
}

void AuthenticationRule::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AuthenticationRule::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.AuthenticationRule)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.requirements_.Clear();
  _impl_.selector_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.oauth_ != nullptr) {
    delete _impl_.oauth_;
  }
  _impl_.oauth_ = nullptr;
  _impl_.allow_without_credential_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AuthenticationRule::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string selector = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_selector();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.AuthenticationRule.selector"));
        } else
          goto handle_unusual;
        continue;
      // .google.api.OAuthRequirements oauth = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_oauth(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool allow_without_credential = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.allow_without_credential_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .google.api.AuthRequirement requirements = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_requirements(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AuthenticationRule::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.AuthenticationRule)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string selector = 1;
  if (!this->_internal_selector().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_selector().data(), static_cast<int>(this->_internal_selector().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.AuthenticationRule.selector");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_selector(), target);
  }

  // .google.api.OAuthRequirements oauth = 2;
  if (this->_internal_has_oauth()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::oauth(this),
        _Internal::oauth(this).GetCachedSize(), target, stream);
  }

  // bool allow_without_credential = 5;
  if (this->_internal_allow_without_credential() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_allow_without_credential(), target);
  }

  // repeated .google.api.AuthRequirement requirements = 7;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_requirements_size()); i < n; i++) {
    const auto& repfield = this->_internal_requirements(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(7, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.AuthenticationRule)
  return target;
}

size_t AuthenticationRule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.AuthenticationRule)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.AuthRequirement requirements = 7;
  total_size += 1UL * this->_internal_requirements_size();
  for (const auto& msg : this->_impl_.requirements_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string selector = 1;
  if (!this->_internal_selector().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_selector());
  }

  // .google.api.OAuthRequirements oauth = 2;
  if (this->_internal_has_oauth()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.oauth_);
  }

  // bool allow_without_credential = 5;
  if (this->_internal_allow_without_credential() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AuthenticationRule::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AuthenticationRule::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AuthenticationRule::GetClassData() const { return &_class_data_; }


void AuthenticationRule::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AuthenticationRule*>(&to_msg);
  auto& from = static_cast<const AuthenticationRule&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.AuthenticationRule)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.requirements_.MergeFrom(from._impl_.requirements_);
  if (!from._internal_selector().empty()) {
    _this->_internal_set_selector(from._internal_selector());
  }
  if (from._internal_has_oauth()) {
    _this->_internal_mutable_oauth()->::google::api::OAuthRequirements::MergeFrom(
        from._internal_oauth());
  }
  if (from._internal_allow_without_credential() != 0) {
    _this->_internal_set_allow_without_credential(from._internal_allow_without_credential());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AuthenticationRule::CopyFrom(const AuthenticationRule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.AuthenticationRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthenticationRule::IsInitialized() const {
  return true;
}

void AuthenticationRule::InternalSwap(AuthenticationRule* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.requirements_.InternalSwap(&other->_impl_.requirements_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.selector_, lhs_arena,
      &other->_impl_.selector_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AuthenticationRule, _impl_.allow_without_credential_)
      + sizeof(AuthenticationRule::_impl_.allow_without_credential_)
      - PROTOBUF_FIELD_OFFSET(AuthenticationRule, _impl_.oauth_)>(
          reinterpret_cast<char*>(&_impl_.oauth_),
          reinterpret_cast<char*>(&other->_impl_.oauth_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AuthenticationRule::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fauth_2eproto_getter, &descriptor_table_google_2fapi_2fauth_2eproto_once,
      file_level_metadata_google_2fapi_2fauth_2eproto[1]);
}

// ===================================================================

class JwtLocation::_Internal {
 public:
};

JwtLocation::JwtLocation(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.JwtLocation)
}
JwtLocation::JwtLocation(const JwtLocation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  JwtLocation* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.value_prefix_){}
    , decltype(_impl_.in_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.value_prefix_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.value_prefix_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_value_prefix().empty()) {
    _this->_impl_.value_prefix_.Set(from._internal_value_prefix(), 
      _this->GetArenaForAllocation());
  }
  clear_has_in();
  switch (from.in_case()) {
    case kHeader: {
      _this->_internal_set_header(from._internal_header());
      break;
    }
    case kQuery: {
      _this->_internal_set_query(from._internal_query());
      break;
    }
    case kCookie: {
      _this->_internal_set_cookie(from._internal_cookie());
      break;
    }
    case IN_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.api.JwtLocation)
}

inline void JwtLocation::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.value_prefix_){}
    , decltype(_impl_.in_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  _impl_.value_prefix_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.value_prefix_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  clear_has_in();
}

JwtLocation::~JwtLocation() {
  // @@protoc_insertion_point(destructor:google.api.JwtLocation)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void JwtLocation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.value_prefix_.Destroy();
  if (has_in()) {
    clear_in();
  }
}

void JwtLocation::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void JwtLocation::clear_in() {
// @@protoc_insertion_point(one_of_clear_start:google.api.JwtLocation)
  switch (in_case()) {
    case kHeader: {
      _impl_.in_.header_.Destroy();
      break;
    }
    case kQuery: {
      _impl_.in_.query_.Destroy();
      break;
    }
    case kCookie: {
      _impl_.in_.cookie_.Destroy();
      break;
    }
    case IN_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = IN_NOT_SET;
}


void JwtLocation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.JwtLocation)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_prefix_.ClearToEmpty();
  clear_in();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JwtLocation::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_header();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.JwtLocation.header"));
        } else
          goto handle_unusual;
        continue;
      // string query = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_query();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.JwtLocation.query"));
        } else
          goto handle_unusual;
        continue;
      // string value_prefix = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_value_prefix();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.JwtLocation.value_prefix"));
        } else
          goto handle_unusual;
        continue;
      // string cookie = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_cookie();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.JwtLocation.cookie"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* JwtLocation::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.JwtLocation)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string header = 1;
  if (_internal_has_header()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_header().data(), static_cast<int>(this->_internal_header().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.JwtLocation.header");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_header(), target);
  }

  // string query = 2;
  if (_internal_has_query()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_query().data(), static_cast<int>(this->_internal_query().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.JwtLocation.query");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_query(), target);
  }

  // string value_prefix = 3;
  if (!this->_internal_value_prefix().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value_prefix().data(), static_cast<int>(this->_internal_value_prefix().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.JwtLocation.value_prefix");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_value_prefix(), target);
  }

  // string cookie = 4;
  if (_internal_has_cookie()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cookie().data(), static_cast<int>(this->_internal_cookie().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.JwtLocation.cookie");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_cookie(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.JwtLocation)
  return target;
}

size_t JwtLocation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.JwtLocation)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string value_prefix = 3;
  if (!this->_internal_value_prefix().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value_prefix());
  }

  switch (in_case()) {
    // string header = 1;
    case kHeader: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_header());
      break;
    }
    // string query = 2;
    case kQuery: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_query());
      break;
    }
    // string cookie = 4;
    case kCookie: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_cookie());
      break;
    }
    case IN_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData JwtLocation::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    JwtLocation::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*JwtLocation::GetClassData() const { return &_class_data_; }


void JwtLocation::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<JwtLocation*>(&to_msg);
  auto& from = static_cast<const JwtLocation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.JwtLocation)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_value_prefix().empty()) {
    _this->_internal_set_value_prefix(from._internal_value_prefix());
  }
  switch (from.in_case()) {
    case kHeader: {
      _this->_internal_set_header(from._internal_header());
      break;
    }
    case kQuery: {
      _this->_internal_set_query(from._internal_query());
      break;
    }
    case kCookie: {
      _this->_internal_set_cookie(from._internal_cookie());
      break;
    }
    case IN_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void JwtLocation::CopyFrom(const JwtLocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.JwtLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JwtLocation::IsInitialized() const {
  return true;
}

void JwtLocation::InternalSwap(JwtLocation* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.value_prefix_, lhs_arena,
      &other->_impl_.value_prefix_, rhs_arena
  );
  swap(_impl_.in_, other->_impl_.in_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata JwtLocation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fauth_2eproto_getter, &descriptor_table_google_2fapi_2fauth_2eproto_once,
      file_level_metadata_google_2fapi_2fauth_2eproto[2]);
}

// ===================================================================

class AuthProvider::_Internal {
 public:
};

AuthProvider::AuthProvider(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.AuthProvider)
}
AuthProvider::AuthProvider(const AuthProvider& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AuthProvider* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.jwt_locations_){from._impl_.jwt_locations_}
    , decltype(_impl_.id_){}
    , decltype(_impl_.issuer_){}
    , decltype(_impl_.jwks_uri_){}
    , decltype(_impl_.audiences_){}
    , decltype(_impl_.authorization_url_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.issuer_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.issuer_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_issuer().empty()) {
    _this->_impl_.issuer_.Set(from._internal_issuer(), 
      _this->GetArenaForAllocation());
  }
  _impl_.jwks_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.jwks_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_jwks_uri().empty()) {
    _this->_impl_.jwks_uri_.Set(from._internal_jwks_uri(), 
      _this->GetArenaForAllocation());
  }
  _impl_.audiences_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.audiences_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_audiences().empty()) {
    _this->_impl_.audiences_.Set(from._internal_audiences(), 
      _this->GetArenaForAllocation());
  }
  _impl_.authorization_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.authorization_url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_authorization_url().empty()) {
    _this->_impl_.authorization_url_.Set(from._internal_authorization_url(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.AuthProvider)
}

inline void AuthProvider::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.jwt_locations_){arena}
    , decltype(_impl_.id_){}
    , decltype(_impl_.issuer_){}
    , decltype(_impl_.jwks_uri_){}
    , decltype(_impl_.audiences_){}
    , decltype(_impl_.authorization_url_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.issuer_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.issuer_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.jwks_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.jwks_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.audiences_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.audiences_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.authorization_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.authorization_url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AuthProvider::~AuthProvider() {
  // @@protoc_insertion_point(destructor:google.api.AuthProvider)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AuthProvider::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.jwt_locations_.~RepeatedPtrField();
  _impl_.id_.Destroy();
  _impl_.issuer_.Destroy();
  _impl_.jwks_uri_.Destroy();
  _impl_.audiences_.Destroy();
  _impl_.authorization_url_.Destroy();
}

void AuthProvider::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AuthProvider::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.AuthProvider)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.jwt_locations_.Clear();
  _impl_.id_.ClearToEmpty();
  _impl_.issuer_.ClearToEmpty();
  _impl_.jwks_uri_.ClearToEmpty();
  _impl_.audiences_.ClearToEmpty();
  _impl_.authorization_url_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AuthProvider::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.AuthProvider.id"));
        } else
          goto handle_unusual;
        continue;
      // string issuer = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_issuer();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.AuthProvider.issuer"));
        } else
          goto handle_unusual;
        continue;
      // string jwks_uri = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_jwks_uri();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.AuthProvider.jwks_uri"));
        } else
          goto handle_unusual;
        continue;
      // string audiences = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_audiences();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.AuthProvider.audiences"));
        } else
          goto handle_unusual;
        continue;
      // string authorization_url = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_authorization_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.AuthProvider.authorization_url"));
        } else
          goto handle_unusual;
        continue;
      // repeated .google.api.JwtLocation jwt_locations = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_jwt_locations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AuthProvider::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.AuthProvider)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.AuthProvider.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string issuer = 2;
  if (!this->_internal_issuer().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_issuer().data(), static_cast<int>(this->_internal_issuer().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.AuthProvider.issuer");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_issuer(), target);
  }

  // string jwks_uri = 3;
  if (!this->_internal_jwks_uri().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_jwks_uri().data(), static_cast<int>(this->_internal_jwks_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.AuthProvider.jwks_uri");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_jwks_uri(), target);
  }

  // string audiences = 4;
  if (!this->_internal_audiences().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_audiences().data(), static_cast<int>(this->_internal_audiences().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.AuthProvider.audiences");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_audiences(), target);
  }

  // string authorization_url = 5;
  if (!this->_internal_authorization_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_authorization_url().data(), static_cast<int>(this->_internal_authorization_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.AuthProvider.authorization_url");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_authorization_url(), target);
  }

  // repeated .google.api.JwtLocation jwt_locations = 6;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_jwt_locations_size()); i < n; i++) {
    const auto& repfield = this->_internal_jwt_locations(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.AuthProvider)
  return target;
}

size_t AuthProvider::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.AuthProvider)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.JwtLocation jwt_locations = 6;
  total_size += 1UL * this->_internal_jwt_locations_size();
  for (const auto& msg : this->_impl_.jwt_locations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string issuer = 2;
  if (!this->_internal_issuer().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_issuer());
  }

  // string jwks_uri = 3;
  if (!this->_internal_jwks_uri().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_jwks_uri());
  }

  // string audiences = 4;
  if (!this->_internal_audiences().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_audiences());
  }

  // string authorization_url = 5;
  if (!this->_internal_authorization_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_authorization_url());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AuthProvider::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AuthProvider::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AuthProvider::GetClassData() const { return &_class_data_; }


void AuthProvider::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AuthProvider*>(&to_msg);
  auto& from = static_cast<const AuthProvider&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.AuthProvider)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.jwt_locations_.MergeFrom(from._impl_.jwt_locations_);
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_issuer().empty()) {
    _this->_internal_set_issuer(from._internal_issuer());
  }
  if (!from._internal_jwks_uri().empty()) {
    _this->_internal_set_jwks_uri(from._internal_jwks_uri());
  }
  if (!from._internal_audiences().empty()) {
    _this->_internal_set_audiences(from._internal_audiences());
  }
  if (!from._internal_authorization_url().empty()) {
    _this->_internal_set_authorization_url(from._internal_authorization_url());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AuthProvider::CopyFrom(const AuthProvider& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.AuthProvider)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthProvider::IsInitialized() const {
  return true;
}

void AuthProvider::InternalSwap(AuthProvider* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.jwt_locations_.InternalSwap(&other->_impl_.jwt_locations_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.issuer_, lhs_arena,
      &other->_impl_.issuer_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.jwks_uri_, lhs_arena,
      &other->_impl_.jwks_uri_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.audiences_, lhs_arena,
      &other->_impl_.audiences_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.authorization_url_, lhs_arena,
      &other->_impl_.authorization_url_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata AuthProvider::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fauth_2eproto_getter, &descriptor_table_google_2fapi_2fauth_2eproto_once,
      file_level_metadata_google_2fapi_2fauth_2eproto[3]);
}

// ===================================================================

class OAuthRequirements::_Internal {
 public:
};

OAuthRequirements::OAuthRequirements(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.OAuthRequirements)
}
OAuthRequirements::OAuthRequirements(const OAuthRequirements& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OAuthRequirements* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.canonical_scopes_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.canonical_scopes_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.canonical_scopes_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_canonical_scopes().empty()) {
    _this->_impl_.canonical_scopes_.Set(from._internal_canonical_scopes(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.OAuthRequirements)
}

inline void OAuthRequirements::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.canonical_scopes_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.canonical_scopes_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.canonical_scopes_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

OAuthRequirements::~OAuthRequirements() {
  // @@protoc_insertion_point(destructor:google.api.OAuthRequirements)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OAuthRequirements::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.canonical_scopes_.Destroy();
}

void OAuthRequirements::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OAuthRequirements::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.OAuthRequirements)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.canonical_scopes_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OAuthRequirements::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string canonical_scopes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_canonical_scopes();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.OAuthRequirements.canonical_scopes"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OAuthRequirements::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.OAuthRequirements)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string canonical_scopes = 1;
  if (!this->_internal_canonical_scopes().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_canonical_scopes().data(), static_cast<int>(this->_internal_canonical_scopes().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.OAuthRequirements.canonical_scopes");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_canonical_scopes(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.OAuthRequirements)
  return target;
}

size_t OAuthRequirements::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.OAuthRequirements)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string canonical_scopes = 1;
  if (!this->_internal_canonical_scopes().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_canonical_scopes());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OAuthRequirements::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OAuthRequirements::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OAuthRequirements::GetClassData() const { return &_class_data_; }


void OAuthRequirements::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OAuthRequirements*>(&to_msg);
  auto& from = static_cast<const OAuthRequirements&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.OAuthRequirements)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_canonical_scopes().empty()) {
    _this->_internal_set_canonical_scopes(from._internal_canonical_scopes());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OAuthRequirements::CopyFrom(const OAuthRequirements& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.OAuthRequirements)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OAuthRequirements::IsInitialized() const {
  return true;
}

void OAuthRequirements::InternalSwap(OAuthRequirements* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.canonical_scopes_, lhs_arena,
      &other->_impl_.canonical_scopes_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata OAuthRequirements::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fauth_2eproto_getter, &descriptor_table_google_2fapi_2fauth_2eproto_once,
      file_level_metadata_google_2fapi_2fauth_2eproto[4]);
}

// ===================================================================

class AuthRequirement::_Internal {
 public:
};

AuthRequirement::AuthRequirement(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.AuthRequirement)
}
AuthRequirement::AuthRequirement(const AuthRequirement& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AuthRequirement* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.provider_id_){}
    , decltype(_impl_.audiences_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.provider_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.provider_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_provider_id().empty()) {
    _this->_impl_.provider_id_.Set(from._internal_provider_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.audiences_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.audiences_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_audiences().empty()) {
    _this->_impl_.audiences_.Set(from._internal_audiences(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.AuthRequirement)
}

inline void AuthRequirement::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.provider_id_){}
    , decltype(_impl_.audiences_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.provider_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.provider_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.audiences_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.audiences_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AuthRequirement::~AuthRequirement() {
  // @@protoc_insertion_point(destructor:google.api.AuthRequirement)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AuthRequirement::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.provider_id_.Destroy();
  _impl_.audiences_.Destroy();
}

void AuthRequirement::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AuthRequirement::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.AuthRequirement)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.provider_id_.ClearToEmpty();
  _impl_.audiences_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AuthRequirement::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string provider_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_provider_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.AuthRequirement.provider_id"));
        } else
          goto handle_unusual;
        continue;
      // string audiences = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_audiences();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.AuthRequirement.audiences"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AuthRequirement::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.AuthRequirement)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string provider_id = 1;
  if (!this->_internal_provider_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_provider_id().data(), static_cast<int>(this->_internal_provider_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.AuthRequirement.provider_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_provider_id(), target);
  }

  // string audiences = 2;
  if (!this->_internal_audiences().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_audiences().data(), static_cast<int>(this->_internal_audiences().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.AuthRequirement.audiences");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_audiences(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.AuthRequirement)
  return target;
}

size_t AuthRequirement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.AuthRequirement)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string provider_id = 1;
  if (!this->_internal_provider_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_provider_id());
  }

  // string audiences = 2;
  if (!this->_internal_audiences().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_audiences());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AuthRequirement::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AuthRequirement::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AuthRequirement::GetClassData() const { return &_class_data_; }


void AuthRequirement::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AuthRequirement*>(&to_msg);
  auto& from = static_cast<const AuthRequirement&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.AuthRequirement)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_provider_id().empty()) {
    _this->_internal_set_provider_id(from._internal_provider_id());
  }
  if (!from._internal_audiences().empty()) {
    _this->_internal_set_audiences(from._internal_audiences());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AuthRequirement::CopyFrom(const AuthRequirement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.AuthRequirement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthRequirement::IsInitialized() const {
  return true;
}

void AuthRequirement::InternalSwap(AuthRequirement* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.provider_id_, lhs_arena,
      &other->_impl_.provider_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.audiences_, lhs_arena,
      &other->_impl_.audiences_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata AuthRequirement::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fauth_2eproto_getter, &descriptor_table_google_2fapi_2fauth_2eproto_once,
      file_level_metadata_google_2fapi_2fauth_2eproto[5]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace api
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::google::api::Authentication*
Arena::CreateMaybeMessage< ::google::api::Authentication >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::Authentication >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::AuthenticationRule*
Arena::CreateMaybeMessage< ::google::api::AuthenticationRule >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::AuthenticationRule >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::JwtLocation*
Arena::CreateMaybeMessage< ::google::api::JwtLocation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::JwtLocation >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::AuthProvider*
Arena::CreateMaybeMessage< ::google::api::AuthProvider >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::AuthProvider >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::OAuthRequirements*
Arena::CreateMaybeMessage< ::google::api::OAuthRequirements >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::OAuthRequirements >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::AuthRequirement*
Arena::CreateMaybeMessage< ::google::api::AuthRequirement >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::AuthRequirement >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

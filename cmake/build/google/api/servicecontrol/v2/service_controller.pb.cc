// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/servicecontrol/v2/service_controller.proto

#include "google/api/servicecontrol/v2/service_controller.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace google {
namespace api {
namespace servicecontrol {
namespace v2 {
PROTOBUF_CONSTEXPR CheckRequest::CheckRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.resources_)*/{}
  , /*decltype(_impl_.service_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.service_config_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.flags_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.attributes_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CheckRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CheckRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CheckRequestDefaultTypeInternal() {}
  union {
    CheckRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CheckRequestDefaultTypeInternal _CheckRequest_default_instance_;
PROTOBUF_CONSTEXPR ResourceInfo::ResourceInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.type_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.permission_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.container_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.location_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ResourceInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResourceInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResourceInfoDefaultTypeInternal() {}
  union {
    ResourceInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResourceInfoDefaultTypeInternal _ResourceInfo_default_instance_;
PROTOBUF_CONSTEXPR CheckResponse_HeadersEntry_DoNotUse::CheckResponse_HeadersEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct CheckResponse_HeadersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CheckResponse_HeadersEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CheckResponse_HeadersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    CheckResponse_HeadersEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CheckResponse_HeadersEntry_DoNotUseDefaultTypeInternal _CheckResponse_HeadersEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR CheckResponse::CheckResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.headers_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.status_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CheckResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CheckResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CheckResponseDefaultTypeInternal() {}
  union {
    CheckResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CheckResponseDefaultTypeInternal _CheckResponse_default_instance_;
PROTOBUF_CONSTEXPR ReportRequest::ReportRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.operations_)*/{}
  , /*decltype(_impl_.service_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.service_config_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReportRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReportRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReportRequestDefaultTypeInternal() {}
  union {
    ReportRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReportRequestDefaultTypeInternal _ReportRequest_default_instance_;
PROTOBUF_CONSTEXPR ReportResponse::ReportResponse(
    ::_pbi::ConstantInitialized) {}
struct ReportResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReportResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReportResponseDefaultTypeInternal() {}
  union {
    ReportResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReportResponseDefaultTypeInternal _ReportResponse_default_instance_;
}  // namespace v2
}  // namespace servicecontrol
}  // namespace api
}  // namespace google
static ::_pb::Metadata file_level_metadata_google_2fapi_2fservicecontrol_2fv2_2fservice_5fcontroller_2eproto[6];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_google_2fapi_2fservicecontrol_2fv2_2fservice_5fcontroller_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_google_2fapi_2fservicecontrol_2fv2_2fservice_5fcontroller_2eproto = nullptr;

const uint32_t TableStruct_google_2fapi_2fservicecontrol_2fv2_2fservice_5fcontroller_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v2::CheckRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v2::CheckRequest, _impl_.service_name_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v2::CheckRequest, _impl_.service_config_id_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v2::CheckRequest, _impl_.attributes_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v2::CheckRequest, _impl_.resources_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v2::CheckRequest, _impl_.flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v2::ResourceInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v2::ResourceInfo, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v2::ResourceInfo, _impl_.type_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v2::ResourceInfo, _impl_.permission_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v2::ResourceInfo, _impl_.container_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v2::ResourceInfo, _impl_.location_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v2::CheckResponse_HeadersEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v2::CheckResponse_HeadersEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v2::CheckResponse_HeadersEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v2::CheckResponse_HeadersEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v2::CheckResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v2::CheckResponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v2::CheckResponse, _impl_.headers_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v2::ReportRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v2::ReportRequest, _impl_.service_name_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v2::ReportRequest, _impl_.service_config_id_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v2::ReportRequest, _impl_.operations_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v2::ReportResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::google::api::servicecontrol::v2::CheckRequest)},
  { 11, -1, -1, sizeof(::google::api::servicecontrol::v2::ResourceInfo)},
  { 22, 30, -1, sizeof(::google::api::servicecontrol::v2::CheckResponse_HeadersEntry_DoNotUse)},
  { 32, -1, -1, sizeof(::google::api::servicecontrol::v2::CheckResponse)},
  { 40, -1, -1, sizeof(::google::api::servicecontrol::v2::ReportRequest)},
  { 49, -1, -1, sizeof(::google::api::servicecontrol::v2::ReportResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::google::api::servicecontrol::v2::_CheckRequest_default_instance_._instance,
  &::google::api::servicecontrol::v2::_ResourceInfo_default_instance_._instance,
  &::google::api::servicecontrol::v2::_CheckResponse_HeadersEntry_DoNotUse_default_instance_._instance,
  &::google::api::servicecontrol::v2::_CheckResponse_default_instance_._instance,
  &::google::api::servicecontrol::v2::_ReportRequest_default_instance_._instance,
  &::google::api::servicecontrol::v2::_ReportResponse_default_instance_._instance,
};

const char descriptor_table_protodef_google_2fapi_2fservicecontrol_2fv2_2fservice_5fcontroller_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n5google/api/servicecontrol/v2/service_c"
  "ontroller.proto\022\034google.api.servicecontr"
  "ol.v2\032\034google/api/annotations.proto\032\027goo"
  "gle/api/client.proto\032*google/rpc/context"
  "/attribute_context.proto\032\027google/rpc/sta"
  "tus.proto\"\307\001\n\014CheckRequest\022\024\n\014service_na"
  "me\030\001 \001(\t\022\031\n\021service_config_id\030\002 \001(\t\0228\n\na"
  "ttributes\030\003 \001(\0132$.google.rpc.context.Att"
  "ributeContext\022=\n\tresources\030\004 \003(\0132*.googl"
  "e.api.servicecontrol.v2.ResourceInfo\022\r\n\005"
  "flags\030\005 \001(\t\"c\n\014ResourceInfo\022\014\n\004name\030\001 \001("
  "\t\022\014\n\004type\030\002 \001(\t\022\022\n\npermission\030\003 \001(\t\022\021\n\tc"
  "ontainer\030\004 \001(\t\022\020\n\010location\030\005 \001(\t\"\256\001\n\rChe"
  "ckResponse\022\"\n\006status\030\001 \001(\0132\022.google.rpc."
  "Status\022I\n\007headers\030\002 \003(\01328.google.api.ser"
  "vicecontrol.v2.CheckResponse.HeadersEntr"
  "y\032.\n\014HeadersEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030"
  "\002 \001(\t:\0028\001\"z\n\rReportRequest\022\024\n\014service_na"
  "me\030\001 \001(\t\022\031\n\021service_config_id\030\002 \001(\t\0228\n\no"
  "perations\030\003 \003(\0132$.google.rpc.context.Att"
  "ributeContext\"\020\n\016ReportResponse2\274\003\n\021Serv"
  "iceController\022\216\001\n\005Check\022*.google.api.ser"
  "vicecontrol.v2.CheckRequest\032+.google.api"
  ".servicecontrol.v2.CheckResponse\",\202\323\344\223\002&"
  "\"!/v2/services/{service_name}:check:\001*\022\222"
  "\001\n\006Report\022+.google.api.servicecontrol.v2"
  ".ReportRequest\032,.google.api.servicecontr"
  "ol.v2.ReportResponse\"-\202\323\344\223\002\'\"\"/v2/servic"
  "es/{service_name}:report:\001*\032\200\001\312A\035service"
  "control.googleapis.com\322A]https://www.goo"
  "gleapis.com/auth/cloud-platform,https://"
  "www.googleapis.com/auth/servicecontrolB\370"
  "\001\n com.google.api.servicecontrol.v2B\026Ser"
  "viceControllerProtoP\001ZJgoogle.golang.org"
  "/genproto/googleapis/api/servicecontrol/"
  "v2;servicecontrol\370\001\001\242\002\004GASC\252\002\036Google.Clo"
  "ud.ServiceControl.V2\312\002\036Google\\Cloud\\Serv"
  "iceControl\\V2\352\002!Google::Cloud::ServiceCo"
  "ntrol::V2b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_google_2fapi_2fservicecontrol_2fv2_2fservice_5fcontroller_2eproto_deps[4] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_google_2fapi_2fclient_2eproto,
  &::descriptor_table_google_2frpc_2fcontext_2fattribute_5fcontext_2eproto,
  &::descriptor_table_google_2frpc_2fstatus_2eproto,
};
static ::_pbi::once_flag descriptor_table_google_2fapi_2fservicecontrol_2fv2_2fservice_5fcontroller_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_google_2fapi_2fservicecontrol_2fv2_2fservice_5fcontroller_2eproto = {
    false, false, 1537, descriptor_table_protodef_google_2fapi_2fservicecontrol_2fv2_2fservice_5fcontroller_2eproto,
    "google/api/servicecontrol/v2/service_controller.proto",
    &descriptor_table_google_2fapi_2fservicecontrol_2fv2_2fservice_5fcontroller_2eproto_once, descriptor_table_google_2fapi_2fservicecontrol_2fv2_2fservice_5fcontroller_2eproto_deps, 4, 6,
    schemas, file_default_instances, TableStruct_google_2fapi_2fservicecontrol_2fv2_2fservice_5fcontroller_2eproto::offsets,
    file_level_metadata_google_2fapi_2fservicecontrol_2fv2_2fservice_5fcontroller_2eproto, file_level_enum_descriptors_google_2fapi_2fservicecontrol_2fv2_2fservice_5fcontroller_2eproto,
    file_level_service_descriptors_google_2fapi_2fservicecontrol_2fv2_2fservice_5fcontroller_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_google_2fapi_2fservicecontrol_2fv2_2fservice_5fcontroller_2eproto_getter() {
  return &descriptor_table_google_2fapi_2fservicecontrol_2fv2_2fservice_5fcontroller_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_google_2fapi_2fservicecontrol_2fv2_2fservice_5fcontroller_2eproto(&descriptor_table_google_2fapi_2fservicecontrol_2fv2_2fservice_5fcontroller_2eproto);
namespace google {
namespace api {
namespace servicecontrol {
namespace v2 {

// ===================================================================

class CheckRequest::_Internal {
 public:
  static const ::google::rpc::context::AttributeContext& attributes(const CheckRequest* msg);
};

const ::google::rpc::context::AttributeContext&
CheckRequest::_Internal::attributes(const CheckRequest* msg) {
  return *msg->_impl_.attributes_;
}
void CheckRequest::clear_attributes() {
  if (GetArenaForAllocation() == nullptr && _impl_.attributes_ != nullptr) {
    delete _impl_.attributes_;
  }
  _impl_.attributes_ = nullptr;
}
CheckRequest::CheckRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v2.CheckRequest)
}
CheckRequest::CheckRequest(const CheckRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CheckRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.resources_){from._impl_.resources_}
    , decltype(_impl_.service_name_){}
    , decltype(_impl_.service_config_id_){}
    , decltype(_impl_.flags_){}
    , decltype(_impl_.attributes_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_service_name().empty()) {
    _this->_impl_.service_name_.Set(from._internal_service_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.service_config_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_config_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_service_config_id().empty()) {
    _this->_impl_.service_config_id_.Set(from._internal_service_config_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.flags_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.flags_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_flags().empty()) {
    _this->_impl_.flags_.Set(from._internal_flags(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_attributes()) {
    _this->_impl_.attributes_ = new ::google::rpc::context::AttributeContext(*from._impl_.attributes_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v2.CheckRequest)
}

inline void CheckRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.resources_){arena}
    , decltype(_impl_.service_name_){}
    , decltype(_impl_.service_config_id_){}
    , decltype(_impl_.flags_){}
    , decltype(_impl_.attributes_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.service_config_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_config_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.flags_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.flags_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CheckRequest::~CheckRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v2.CheckRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CheckRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.resources_.~RepeatedPtrField();
  _impl_.service_name_.Destroy();
  _impl_.service_config_id_.Destroy();
  _impl_.flags_.Destroy();
  if (this != internal_default_instance()) delete _impl_.attributes_;
}

void CheckRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CheckRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v2.CheckRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.resources_.Clear();
  _impl_.service_name_.ClearToEmpty();
  _impl_.service_config_id_.ClearToEmpty();
  _impl_.flags_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.attributes_ != nullptr) {
    delete _impl_.attributes_;
  }
  _impl_.attributes_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CheckRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string service_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_service_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicecontrol.v2.CheckRequest.service_name"));
        } else
          goto handle_unusual;
        continue;
      // string service_config_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_service_config_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicecontrol.v2.CheckRequest.service_config_id"));
        } else
          goto handle_unusual;
        continue;
      // .google.rpc.context.AttributeContext attributes = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_attributes(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .google.api.servicecontrol.v2.ResourceInfo resources = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_resources(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string flags = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_flags();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicecontrol.v2.CheckRequest.flags"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CheckRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v2.CheckRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (!this->_internal_service_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_name().data(), static_cast<int>(this->_internal_service_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v2.CheckRequest.service_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_service_name(), target);
  }

  // string service_config_id = 2;
  if (!this->_internal_service_config_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_config_id().data(), static_cast<int>(this->_internal_service_config_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v2.CheckRequest.service_config_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_service_config_id(), target);
  }

  // .google.rpc.context.AttributeContext attributes = 3;
  if (this->_internal_has_attributes()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::attributes(this),
        _Internal::attributes(this).GetCachedSize(), target, stream);
  }

  // repeated .google.api.servicecontrol.v2.ResourceInfo resources = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_resources_size()); i < n; i++) {
    const auto& repfield = this->_internal_resources(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string flags = 5;
  if (!this->_internal_flags().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_flags().data(), static_cast<int>(this->_internal_flags().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v2.CheckRequest.flags");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v2.CheckRequest)
  return target;
}

size_t CheckRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v2.CheckRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.servicecontrol.v2.ResourceInfo resources = 4;
  total_size += 1UL * this->_internal_resources_size();
  for (const auto& msg : this->_impl_.resources_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string service_name = 1;
  if (!this->_internal_service_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_name());
  }

  // string service_config_id = 2;
  if (!this->_internal_service_config_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_config_id());
  }

  // string flags = 5;
  if (!this->_internal_flags().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_flags());
  }

  // .google.rpc.context.AttributeContext attributes = 3;
  if (this->_internal_has_attributes()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.attributes_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CheckRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CheckRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CheckRequest::GetClassData() const { return &_class_data_; }


void CheckRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CheckRequest*>(&to_msg);
  auto& from = static_cast<const CheckRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v2.CheckRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.resources_.MergeFrom(from._impl_.resources_);
  if (!from._internal_service_name().empty()) {
    _this->_internal_set_service_name(from._internal_service_name());
  }
  if (!from._internal_service_config_id().empty()) {
    _this->_internal_set_service_config_id(from._internal_service_config_id());
  }
  if (!from._internal_flags().empty()) {
    _this->_internal_set_flags(from._internal_flags());
  }
  if (from._internal_has_attributes()) {
    _this->_internal_mutable_attributes()->::google::rpc::context::AttributeContext::MergeFrom(
        from._internal_attributes());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CheckRequest::CopyFrom(const CheckRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v2.CheckRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckRequest::IsInitialized() const {
  return true;
}

void CheckRequest::InternalSwap(CheckRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.resources_.InternalSwap(&other->_impl_.resources_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.service_name_, lhs_arena,
      &other->_impl_.service_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.service_config_id_, lhs_arena,
      &other->_impl_.service_config_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.flags_, lhs_arena,
      &other->_impl_.flags_, rhs_arena
  );
  swap(_impl_.attributes_, other->_impl_.attributes_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CheckRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicecontrol_2fv2_2fservice_5fcontroller_2eproto_getter, &descriptor_table_google_2fapi_2fservicecontrol_2fv2_2fservice_5fcontroller_2eproto_once,
      file_level_metadata_google_2fapi_2fservicecontrol_2fv2_2fservice_5fcontroller_2eproto[0]);
}

// ===================================================================

class ResourceInfo::_Internal {
 public:
};

ResourceInfo::ResourceInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v2.ResourceInfo)
}
ResourceInfo::ResourceInfo(const ResourceInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ResourceInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.type_){}
    , decltype(_impl_.permission_){}
    , decltype(_impl_.container_){}
    , decltype(_impl_.location_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_type().empty()) {
    _this->_impl_.type_.Set(from._internal_type(), 
      _this->GetArenaForAllocation());
  }
  _impl_.permission_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.permission_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_permission().empty()) {
    _this->_impl_.permission_.Set(from._internal_permission(), 
      _this->GetArenaForAllocation());
  }
  _impl_.container_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.container_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_container().empty()) {
    _this->_impl_.container_.Set(from._internal_container(), 
      _this->GetArenaForAllocation());
  }
  _impl_.location_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.location_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location().empty()) {
    _this->_impl_.location_.Set(from._internal_location(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v2.ResourceInfo)
}

inline void ResourceInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.type_){}
    , decltype(_impl_.permission_){}
    , decltype(_impl_.container_){}
    , decltype(_impl_.location_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.permission_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.permission_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.container_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.container_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.location_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.location_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ResourceInfo::~ResourceInfo() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v2.ResourceInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResourceInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.type_.Destroy();
  _impl_.permission_.Destroy();
  _impl_.container_.Destroy();
  _impl_.location_.Destroy();
}

void ResourceInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ResourceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v2.ResourceInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.type_.ClearToEmpty();
  _impl_.permission_.ClearToEmpty();
  _impl_.container_.ClearToEmpty();
  _impl_.location_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResourceInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicecontrol.v2.ResourceInfo.name"));
        } else
          goto handle_unusual;
        continue;
      // string type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicecontrol.v2.ResourceInfo.type"));
        } else
          goto handle_unusual;
        continue;
      // string permission = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_permission();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicecontrol.v2.ResourceInfo.permission"));
        } else
          goto handle_unusual;
        continue;
      // string container = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_container();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicecontrol.v2.ResourceInfo.container"));
        } else
          goto handle_unusual;
        continue;
      // string location = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_location();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicecontrol.v2.ResourceInfo.location"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResourceInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v2.ResourceInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v2.ResourceInfo.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string type = 2;
  if (!this->_internal_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v2.ResourceInfo.type");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_type(), target);
  }

  // string permission = 3;
  if (!this->_internal_permission().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_permission().data(), static_cast<int>(this->_internal_permission().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v2.ResourceInfo.permission");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_permission(), target);
  }

  // string container = 4;
  if (!this->_internal_container().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_container().data(), static_cast<int>(this->_internal_container().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v2.ResourceInfo.container");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_container(), target);
  }

  // string location = 5;
  if (!this->_internal_location().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location().data(), static_cast<int>(this->_internal_location().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v2.ResourceInfo.location");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_location(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v2.ResourceInfo)
  return target;
}

size_t ResourceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v2.ResourceInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string type = 2;
  if (!this->_internal_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // string permission = 3;
  if (!this->_internal_permission().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_permission());
  }

  // string container = 4;
  if (!this->_internal_container().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_container());
  }

  // string location = 5;
  if (!this->_internal_location().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResourceInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ResourceInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResourceInfo::GetClassData() const { return &_class_data_; }


void ResourceInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ResourceInfo*>(&to_msg);
  auto& from = static_cast<const ResourceInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v2.ResourceInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  if (!from._internal_permission().empty()) {
    _this->_internal_set_permission(from._internal_permission());
  }
  if (!from._internal_container().empty()) {
    _this->_internal_set_container(from._internal_container());
  }
  if (!from._internal_location().empty()) {
    _this->_internal_set_location(from._internal_location());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResourceInfo::CopyFrom(const ResourceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v2.ResourceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceInfo::IsInitialized() const {
  return true;
}

void ResourceInfo::InternalSwap(ResourceInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.type_, lhs_arena,
      &other->_impl_.type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.permission_, lhs_arena,
      &other->_impl_.permission_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.container_, lhs_arena,
      &other->_impl_.container_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.location_, lhs_arena,
      &other->_impl_.location_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ResourceInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicecontrol_2fv2_2fservice_5fcontroller_2eproto_getter, &descriptor_table_google_2fapi_2fservicecontrol_2fv2_2fservice_5fcontroller_2eproto_once,
      file_level_metadata_google_2fapi_2fservicecontrol_2fv2_2fservice_5fcontroller_2eproto[1]);
}

// ===================================================================

CheckResponse_HeadersEntry_DoNotUse::CheckResponse_HeadersEntry_DoNotUse() {}
CheckResponse_HeadersEntry_DoNotUse::CheckResponse_HeadersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void CheckResponse_HeadersEntry_DoNotUse::MergeFrom(const CheckResponse_HeadersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata CheckResponse_HeadersEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicecontrol_2fv2_2fservice_5fcontroller_2eproto_getter, &descriptor_table_google_2fapi_2fservicecontrol_2fv2_2fservice_5fcontroller_2eproto_once,
      file_level_metadata_google_2fapi_2fservicecontrol_2fv2_2fservice_5fcontroller_2eproto[2]);
}

// ===================================================================

class CheckResponse::_Internal {
 public:
  static const ::google::rpc::Status& status(const CheckResponse* msg);
};

const ::google::rpc::Status&
CheckResponse::_Internal::status(const CheckResponse* msg) {
  return *msg->_impl_.status_;
}
void CheckResponse::clear_status() {
  if (GetArenaForAllocation() == nullptr && _impl_.status_ != nullptr) {
    delete _impl_.status_;
  }
  _impl_.status_ = nullptr;
}
CheckResponse::CheckResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &CheckResponse::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v2.CheckResponse)
}
CheckResponse::CheckResponse(const CheckResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CheckResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.headers_)*/{}
    , decltype(_impl_.status_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.headers_.MergeFrom(from._impl_.headers_);
  if (from._internal_has_status()) {
    _this->_impl_.status_ = new ::google::rpc::Status(*from._impl_.status_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v2.CheckResponse)
}

inline void CheckResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.headers_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.status_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CheckResponse::~CheckResponse() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v2.CheckResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void CheckResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.headers_.Destruct();
  _impl_.headers_.~MapField();
  if (this != internal_default_instance()) delete _impl_.status_;
}

void CheckResponse::ArenaDtor(void* object) {
  CheckResponse* _this = reinterpret_cast< CheckResponse* >(object);
  _this->_impl_.headers_.Destruct();
}
void CheckResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CheckResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v2.CheckResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.headers_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.status_ != nullptr) {
    delete _impl_.status_;
  }
  _impl_.status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CheckResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.rpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, string> headers = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.headers_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CheckResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v2.CheckResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.rpc.Status status = 1;
  if (this->_internal_has_status()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // map<string, string> headers = 2;
  if (!this->_internal_headers().empty()) {
    using MapType = ::_pb::Map<std::string, std::string>;
    using WireHelper = CheckResponse_HeadersEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_headers();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "google.api.servicecontrol.v2.CheckResponse.HeadersEntry.key");
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.second.data(), static_cast<int>(entry.second.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "google.api.servicecontrol.v2.CheckResponse.HeadersEntry.value");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v2.CheckResponse)
  return target;
}

size_t CheckResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v2.CheckResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> headers = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_headers_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_headers().begin();
      it != this->_internal_headers().end(); ++it) {
    total_size += CheckResponse_HeadersEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // .google.rpc.Status status = 1;
  if (this->_internal_has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.status_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CheckResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CheckResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CheckResponse::GetClassData() const { return &_class_data_; }


void CheckResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CheckResponse*>(&to_msg);
  auto& from = static_cast<const CheckResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v2.CheckResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.headers_.MergeFrom(from._impl_.headers_);
  if (from._internal_has_status()) {
    _this->_internal_mutable_status()->::google::rpc::Status::MergeFrom(
        from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CheckResponse::CopyFrom(const CheckResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v2.CheckResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckResponse::IsInitialized() const {
  return true;
}

void CheckResponse::InternalSwap(CheckResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.headers_.InternalSwap(&other->_impl_.headers_);
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CheckResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicecontrol_2fv2_2fservice_5fcontroller_2eproto_getter, &descriptor_table_google_2fapi_2fservicecontrol_2fv2_2fservice_5fcontroller_2eproto_once,
      file_level_metadata_google_2fapi_2fservicecontrol_2fv2_2fservice_5fcontroller_2eproto[3]);
}

// ===================================================================

class ReportRequest::_Internal {
 public:
};

void ReportRequest::clear_operations() {
  _impl_.operations_.Clear();
}
ReportRequest::ReportRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v2.ReportRequest)
}
ReportRequest::ReportRequest(const ReportRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReportRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.operations_){from._impl_.operations_}
    , decltype(_impl_.service_name_){}
    , decltype(_impl_.service_config_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_service_name().empty()) {
    _this->_impl_.service_name_.Set(from._internal_service_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.service_config_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_config_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_service_config_id().empty()) {
    _this->_impl_.service_config_id_.Set(from._internal_service_config_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v2.ReportRequest)
}

inline void ReportRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.operations_){arena}
    , decltype(_impl_.service_name_){}
    , decltype(_impl_.service_config_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.service_config_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_config_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ReportRequest::~ReportRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v2.ReportRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReportRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.operations_.~RepeatedPtrField();
  _impl_.service_name_.Destroy();
  _impl_.service_config_id_.Destroy();
}

void ReportRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v2.ReportRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.operations_.Clear();
  _impl_.service_name_.ClearToEmpty();
  _impl_.service_config_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReportRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string service_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_service_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicecontrol.v2.ReportRequest.service_name"));
        } else
          goto handle_unusual;
        continue;
      // string service_config_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_service_config_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicecontrol.v2.ReportRequest.service_config_id"));
        } else
          goto handle_unusual;
        continue;
      // repeated .google.rpc.context.AttributeContext operations = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_operations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReportRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v2.ReportRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (!this->_internal_service_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_name().data(), static_cast<int>(this->_internal_service_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v2.ReportRequest.service_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_service_name(), target);
  }

  // string service_config_id = 2;
  if (!this->_internal_service_config_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_config_id().data(), static_cast<int>(this->_internal_service_config_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v2.ReportRequest.service_config_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_service_config_id(), target);
  }

  // repeated .google.rpc.context.AttributeContext operations = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_operations_size()); i < n; i++) {
    const auto& repfield = this->_internal_operations(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v2.ReportRequest)
  return target;
}

size_t ReportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v2.ReportRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.rpc.context.AttributeContext operations = 3;
  total_size += 1UL * this->_internal_operations_size();
  for (const auto& msg : this->_impl_.operations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string service_name = 1;
  if (!this->_internal_service_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_name());
  }

  // string service_config_id = 2;
  if (!this->_internal_service_config_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_config_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReportRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReportRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReportRequest::GetClassData() const { return &_class_data_; }


void ReportRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReportRequest*>(&to_msg);
  auto& from = static_cast<const ReportRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v2.ReportRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.operations_.MergeFrom(from._impl_.operations_);
  if (!from._internal_service_name().empty()) {
    _this->_internal_set_service_name(from._internal_service_name());
  }
  if (!from._internal_service_config_id().empty()) {
    _this->_internal_set_service_config_id(from._internal_service_config_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReportRequest::CopyFrom(const ReportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v2.ReportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReportRequest::IsInitialized() const {
  return true;
}

void ReportRequest::InternalSwap(ReportRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.operations_.InternalSwap(&other->_impl_.operations_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.service_name_, lhs_arena,
      &other->_impl_.service_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.service_config_id_, lhs_arena,
      &other->_impl_.service_config_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ReportRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicecontrol_2fv2_2fservice_5fcontroller_2eproto_getter, &descriptor_table_google_2fapi_2fservicecontrol_2fv2_2fservice_5fcontroller_2eproto_once,
      file_level_metadata_google_2fapi_2fservicecontrol_2fv2_2fservice_5fcontroller_2eproto[4]);
}

// ===================================================================

class ReportResponse::_Internal {
 public:
};

ReportResponse::ReportResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v2.ReportResponse)
}
ReportResponse::ReportResponse(const ReportResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  ReportResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v2.ReportResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReportResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReportResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ReportResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicecontrol_2fv2_2fservice_5fcontroller_2eproto_getter, &descriptor_table_google_2fapi_2fservicecontrol_2fv2_2fservice_5fcontroller_2eproto_once,
      file_level_metadata_google_2fapi_2fservicecontrol_2fv2_2fservice_5fcontroller_2eproto[5]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace servicecontrol
}  // namespace api
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::google::api::servicecontrol::v2::CheckRequest*
Arena::CreateMaybeMessage< ::google::api::servicecontrol::v2::CheckRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicecontrol::v2::CheckRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicecontrol::v2::ResourceInfo*
Arena::CreateMaybeMessage< ::google::api::servicecontrol::v2::ResourceInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicecontrol::v2::ResourceInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicecontrol::v2::CheckResponse_HeadersEntry_DoNotUse*
Arena::CreateMaybeMessage< ::google::api::servicecontrol::v2::CheckResponse_HeadersEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicecontrol::v2::CheckResponse_HeadersEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicecontrol::v2::CheckResponse*
Arena::CreateMaybeMessage< ::google::api::servicecontrol::v2::CheckResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicecontrol::v2::CheckResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicecontrol::v2::ReportRequest*
Arena::CreateMaybeMessage< ::google::api::servicecontrol::v2::ReportRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicecontrol::v2::ReportRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicecontrol::v2::ReportResponse*
Arena::CreateMaybeMessage< ::google::api::servicecontrol::v2::ReportResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicecontrol::v2::ReportResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

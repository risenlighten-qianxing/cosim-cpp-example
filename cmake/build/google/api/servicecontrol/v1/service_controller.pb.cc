// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/servicecontrol/v1/service_controller.proto

#include "google/api/servicecontrol/v1/service_controller.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace google {
namespace api {
namespace servicecontrol {
namespace v1 {
PROTOBUF_CONSTEXPR CheckRequest::CheckRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.service_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.service_config_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.operation_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CheckRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CheckRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CheckRequestDefaultTypeInternal() {}
  union {
    CheckRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CheckRequestDefaultTypeInternal _CheckRequest_default_instance_;
PROTOBUF_CONSTEXPR CheckResponse_CheckInfo::CheckResponse_CheckInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.unused_arguments_)*/{}
  , /*decltype(_impl_.consumer_info_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CheckResponse_CheckInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CheckResponse_CheckInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CheckResponse_CheckInfoDefaultTypeInternal() {}
  union {
    CheckResponse_CheckInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CheckResponse_CheckInfoDefaultTypeInternal _CheckResponse_CheckInfo_default_instance_;
PROTOBUF_CONSTEXPR CheckResponse_ConsumerInfo::CheckResponse_ConsumerInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.project_number_)*/int64_t{0}
  , /*decltype(_impl_.consumer_number_)*/int64_t{0}
  , /*decltype(_impl_.type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CheckResponse_ConsumerInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CheckResponse_ConsumerInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CheckResponse_ConsumerInfoDefaultTypeInternal() {}
  union {
    CheckResponse_ConsumerInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CheckResponse_ConsumerInfoDefaultTypeInternal _CheckResponse_ConsumerInfo_default_instance_;
PROTOBUF_CONSTEXPR CheckResponse::CheckResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.check_errors_)*/{}
  , /*decltype(_impl_.operation_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.service_config_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.service_rollout_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.check_info_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CheckResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CheckResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CheckResponseDefaultTypeInternal() {}
  union {
    CheckResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CheckResponseDefaultTypeInternal _CheckResponse_default_instance_;
PROTOBUF_CONSTEXPR ReportRequest::ReportRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.operations_)*/{}
  , /*decltype(_impl_.service_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.service_config_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReportRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReportRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReportRequestDefaultTypeInternal() {}
  union {
    ReportRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReportRequestDefaultTypeInternal _ReportRequest_default_instance_;
PROTOBUF_CONSTEXPR ReportResponse_ReportError::ReportResponse_ReportError(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.operation_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.status_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReportResponse_ReportErrorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReportResponse_ReportErrorDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReportResponse_ReportErrorDefaultTypeInternal() {}
  union {
    ReportResponse_ReportError _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReportResponse_ReportErrorDefaultTypeInternal _ReportResponse_ReportError_default_instance_;
PROTOBUF_CONSTEXPR ReportResponse::ReportResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.report_errors_)*/{}
  , /*decltype(_impl_.service_config_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.service_rollout_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReportResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReportResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReportResponseDefaultTypeInternal() {}
  union {
    ReportResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReportResponseDefaultTypeInternal _ReportResponse_default_instance_;
}  // namespace v1
}  // namespace servicecontrol
}  // namespace api
}  // namespace google
static ::_pb::Metadata file_level_metadata_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto[7];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto = nullptr;

const uint32_t TableStruct_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::CheckRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::CheckRequest, _impl_.service_name_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::CheckRequest, _impl_.operation_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::CheckRequest, _impl_.service_config_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::CheckResponse_CheckInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::CheckResponse_CheckInfo, _impl_.unused_arguments_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::CheckResponse_CheckInfo, _impl_.consumer_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::CheckResponse_ConsumerInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::CheckResponse_ConsumerInfo, _impl_.project_number_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::CheckResponse_ConsumerInfo, _impl_.type_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::CheckResponse_ConsumerInfo, _impl_.consumer_number_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::CheckResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::CheckResponse, _impl_.operation_id_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::CheckResponse, _impl_.check_errors_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::CheckResponse, _impl_.service_config_id_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::CheckResponse, _impl_.service_rollout_id_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::CheckResponse, _impl_.check_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::ReportRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::ReportRequest, _impl_.service_name_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::ReportRequest, _impl_.operations_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::ReportRequest, _impl_.service_config_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::ReportResponse_ReportError, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::ReportResponse_ReportError, _impl_.operation_id_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::ReportResponse_ReportError, _impl_.status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::ReportResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::ReportResponse, _impl_.report_errors_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::ReportResponse, _impl_.service_config_id_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::ReportResponse, _impl_.service_rollout_id_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::google::api::servicecontrol::v1::CheckRequest)},
  { 9, -1, -1, sizeof(::google::api::servicecontrol::v1::CheckResponse_CheckInfo)},
  { 17, -1, -1, sizeof(::google::api::servicecontrol::v1::CheckResponse_ConsumerInfo)},
  { 26, -1, -1, sizeof(::google::api::servicecontrol::v1::CheckResponse)},
  { 37, -1, -1, sizeof(::google::api::servicecontrol::v1::ReportRequest)},
  { 46, -1, -1, sizeof(::google::api::servicecontrol::v1::ReportResponse_ReportError)},
  { 54, -1, -1, sizeof(::google::api::servicecontrol::v1::ReportResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::google::api::servicecontrol::v1::_CheckRequest_default_instance_._instance,
  &::google::api::servicecontrol::v1::_CheckResponse_CheckInfo_default_instance_._instance,
  &::google::api::servicecontrol::v1::_CheckResponse_ConsumerInfo_default_instance_._instance,
  &::google::api::servicecontrol::v1::_CheckResponse_default_instance_._instance,
  &::google::api::servicecontrol::v1::_ReportRequest_default_instance_._instance,
  &::google::api::servicecontrol::v1::_ReportResponse_ReportError_default_instance_._instance,
  &::google::api::servicecontrol::v1::_ReportResponse_default_instance_._instance,
};

const char descriptor_table_protodef_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n5google/api/servicecontrol/v1/service_c"
  "ontroller.proto\022\034google.api.servicecontr"
  "ol.v1\032\034google/api/annotations.proto\032\027goo"
  "gle/api/client.proto\032.google/api/service"
  "control/v1/check_error.proto\032,google/api"
  "/servicecontrol/v1/operation.proto\032\027goog"
  "le/rpc/status.proto\"{\n\014CheckRequest\022\024\n\014s"
  "ervice_name\030\001 \001(\t\022:\n\toperation\030\002 \001(\0132\'.g"
  "oogle.api.servicecontrol.v1.Operation\022\031\n"
  "\021service_config_id\030\004 \001(\t\"\346\004\n\rCheckRespon"
  "se\022\024\n\014operation_id\030\001 \001(\t\022>\n\014check_errors"
  "\030\002 \003(\0132(.google.api.servicecontrol.v1.Ch"
  "eckError\022\031\n\021service_config_id\030\005 \001(\t\022\032\n\022s"
  "ervice_rollout_id\030\013 \001(\t\022I\n\ncheck_info\030\006 "
  "\001(\01325.google.api.servicecontrol.v1.Check"
  "Response.CheckInfo\032v\n\tCheckInfo\022\030\n\020unuse"
  "d_arguments\030\001 \003(\t\022O\n\rconsumer_info\030\002 \001(\013"
  "28.google.api.servicecontrol.v1.CheckRes"
  "ponse.ConsumerInfo\032\204\002\n\014ConsumerInfo\022\026\n\016p"
  "roject_number\030\001 \001(\003\022S\n\004type\030\002 \001(\0162E.goog"
  "le.api.servicecontrol.v1.CheckResponse.C"
  "onsumerInfo.ConsumerType\022\027\n\017consumer_num"
  "ber\030\003 \001(\003\"n\n\014ConsumerType\022\035\n\031CONSUMER_TY"
  "PE_UNSPECIFIED\020\000\022\013\n\007PROJECT\020\001\022\n\n\006FOLDER\020"
  "\002\022\020\n\014ORGANIZATION\020\003\022\024\n\020SERVICE_SPECIFIC\020"
  "\004\"}\n\rReportRequest\022\024\n\014service_name\030\001 \001(\t"
  "\022;\n\noperations\030\002 \003(\0132\'.google.api.servic"
  "econtrol.v1.Operation\022\031\n\021service_config_"
  "id\030\003 \001(\t\"\341\001\n\016ReportResponse\022O\n\rreport_er"
  "rors\030\001 \003(\01328.google.api.servicecontrol.v"
  "1.ReportResponse.ReportError\022\031\n\021service_"
  "config_id\030\002 \001(\t\022\032\n\022service_rollout_id\030\004 "
  "\001(\t\032G\n\013ReportError\022\024\n\014operation_id\030\001 \001(\t"
  "\022\"\n\006status\030\002 \001(\0132\022.google.rpc.Status2\274\003\n"
  "\021ServiceController\022\216\001\n\005Check\022*.google.ap"
  "i.servicecontrol.v1.CheckRequest\032+.googl"
  "e.api.servicecontrol.v1.CheckResponse\",\202"
  "\323\344\223\002&\"!/v1/services/{service_name}:check"
  ":\001*\022\222\001\n\006Report\022+.google.api.servicecontr"
  "ol.v1.ReportRequest\032,.google.api.service"
  "control.v1.ReportResponse\"-\202\323\344\223\002\'\"\"/v1/s"
  "ervices/{service_name}:report:\001*\032\200\001\312A\035se"
  "rvicecontrol.googleapis.com\322A]https://ww"
  "w.googleapis.com/auth/cloud-platform,htt"
  "ps://www.googleapis.com/auth/servicecont"
  "rolB\370\001\n com.google.api.servicecontrol.v1"
  "B\026ServiceControllerProtoP\001ZJgoogle.golan"
  "g.org/genproto/googleapis/api/servicecon"
  "trol/v1;servicecontrol\370\001\001\242\002\004GASC\252\002\036Googl"
  "e.Cloud.ServiceControl.V1\312\002\036Google\\Cloud"
  "\\ServiceControl\\V1\352\002!Google::Cloud::Serv"
  "iceControl::V1b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto_deps[5] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_google_2fapi_2fclient_2eproto,
  &::descriptor_table_google_2fapi_2fservicecontrol_2fv1_2fcheck_5ferror_2eproto,
  &::descriptor_table_google_2fapi_2fservicecontrol_2fv1_2foperation_2eproto,
  &::descriptor_table_google_2frpc_2fstatus_2eproto,
};
static ::_pbi::once_flag descriptor_table_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto = {
    false, false, 2062, descriptor_table_protodef_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto,
    "google/api/servicecontrol/v1/service_controller.proto",
    &descriptor_table_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto_once, descriptor_table_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto_deps, 5, 7,
    schemas, file_default_instances, TableStruct_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::offsets,
    file_level_metadata_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto, file_level_enum_descriptors_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto,
    file_level_service_descriptors_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto_getter() {
  return &descriptor_table_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto(&descriptor_table_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto);
namespace google {
namespace api {
namespace servicecontrol {
namespace v1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CheckResponse_ConsumerInfo_ConsumerType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto);
  return file_level_enum_descriptors_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto[0];
}
bool CheckResponse_ConsumerInfo_ConsumerType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CheckResponse_ConsumerInfo_ConsumerType CheckResponse_ConsumerInfo::CONSUMER_TYPE_UNSPECIFIED;
constexpr CheckResponse_ConsumerInfo_ConsumerType CheckResponse_ConsumerInfo::PROJECT;
constexpr CheckResponse_ConsumerInfo_ConsumerType CheckResponse_ConsumerInfo::FOLDER;
constexpr CheckResponse_ConsumerInfo_ConsumerType CheckResponse_ConsumerInfo::ORGANIZATION;
constexpr CheckResponse_ConsumerInfo_ConsumerType CheckResponse_ConsumerInfo::SERVICE_SPECIFIC;
constexpr CheckResponse_ConsumerInfo_ConsumerType CheckResponse_ConsumerInfo::ConsumerType_MIN;
constexpr CheckResponse_ConsumerInfo_ConsumerType CheckResponse_ConsumerInfo::ConsumerType_MAX;
constexpr int CheckResponse_ConsumerInfo::ConsumerType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class CheckRequest::_Internal {
 public:
  static const ::google::api::servicecontrol::v1::Operation& operation(const CheckRequest* msg);
};

const ::google::api::servicecontrol::v1::Operation&
CheckRequest::_Internal::operation(const CheckRequest* msg) {
  return *msg->_impl_.operation_;
}
void CheckRequest::clear_operation() {
  if (GetArenaForAllocation() == nullptr && _impl_.operation_ != nullptr) {
    delete _impl_.operation_;
  }
  _impl_.operation_ = nullptr;
}
CheckRequest::CheckRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v1.CheckRequest)
}
CheckRequest::CheckRequest(const CheckRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CheckRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.service_name_){}
    , decltype(_impl_.service_config_id_){}
    , decltype(_impl_.operation_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_service_name().empty()) {
    _this->_impl_.service_name_.Set(from._internal_service_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.service_config_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_config_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_service_config_id().empty()) {
    _this->_impl_.service_config_id_.Set(from._internal_service_config_id(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_operation()) {
    _this->_impl_.operation_ = new ::google::api::servicecontrol::v1::Operation(*from._impl_.operation_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v1.CheckRequest)
}

inline void CheckRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.service_name_){}
    , decltype(_impl_.service_config_id_){}
    , decltype(_impl_.operation_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.service_config_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_config_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CheckRequest::~CheckRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v1.CheckRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CheckRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.service_name_.Destroy();
  _impl_.service_config_id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.operation_;
}

void CheckRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CheckRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v1.CheckRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.service_name_.ClearToEmpty();
  _impl_.service_config_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.operation_ != nullptr) {
    delete _impl_.operation_;
  }
  _impl_.operation_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CheckRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string service_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_service_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicecontrol.v1.CheckRequest.service_name"));
        } else
          goto handle_unusual;
        continue;
      // .google.api.servicecontrol.v1.Operation operation = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_operation(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string service_config_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_service_config_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicecontrol.v1.CheckRequest.service_config_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CheckRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v1.CheckRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (!this->_internal_service_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_name().data(), static_cast<int>(this->_internal_service_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.CheckRequest.service_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_service_name(), target);
  }

  // .google.api.servicecontrol.v1.Operation operation = 2;
  if (this->_internal_has_operation()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::operation(this),
        _Internal::operation(this).GetCachedSize(), target, stream);
  }

  // string service_config_id = 4;
  if (!this->_internal_service_config_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_config_id().data(), static_cast<int>(this->_internal_service_config_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.CheckRequest.service_config_id");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_service_config_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v1.CheckRequest)
  return target;
}

size_t CheckRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v1.CheckRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string service_name = 1;
  if (!this->_internal_service_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_name());
  }

  // string service_config_id = 4;
  if (!this->_internal_service_config_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_config_id());
  }

  // .google.api.servicecontrol.v1.Operation operation = 2;
  if (this->_internal_has_operation()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.operation_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CheckRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CheckRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CheckRequest::GetClassData() const { return &_class_data_; }


void CheckRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CheckRequest*>(&to_msg);
  auto& from = static_cast<const CheckRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v1.CheckRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_service_name().empty()) {
    _this->_internal_set_service_name(from._internal_service_name());
  }
  if (!from._internal_service_config_id().empty()) {
    _this->_internal_set_service_config_id(from._internal_service_config_id());
  }
  if (from._internal_has_operation()) {
    _this->_internal_mutable_operation()->::google::api::servicecontrol::v1::Operation::MergeFrom(
        from._internal_operation());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CheckRequest::CopyFrom(const CheckRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v1.CheckRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckRequest::IsInitialized() const {
  return true;
}

void CheckRequest::InternalSwap(CheckRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.service_name_, lhs_arena,
      &other->_impl_.service_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.service_config_id_, lhs_arena,
      &other->_impl_.service_config_id_, rhs_arena
  );
  swap(_impl_.operation_, other->_impl_.operation_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CheckRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto_getter, &descriptor_table_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto_once,
      file_level_metadata_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto[0]);
}

// ===================================================================

class CheckResponse_CheckInfo::_Internal {
 public:
  static const ::google::api::servicecontrol::v1::CheckResponse_ConsumerInfo& consumer_info(const CheckResponse_CheckInfo* msg);
};

const ::google::api::servicecontrol::v1::CheckResponse_ConsumerInfo&
CheckResponse_CheckInfo::_Internal::consumer_info(const CheckResponse_CheckInfo* msg) {
  return *msg->_impl_.consumer_info_;
}
CheckResponse_CheckInfo::CheckResponse_CheckInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v1.CheckResponse.CheckInfo)
}
CheckResponse_CheckInfo::CheckResponse_CheckInfo(const CheckResponse_CheckInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CheckResponse_CheckInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.unused_arguments_){from._impl_.unused_arguments_}
    , decltype(_impl_.consumer_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_consumer_info()) {
    _this->_impl_.consumer_info_ = new ::google::api::servicecontrol::v1::CheckResponse_ConsumerInfo(*from._impl_.consumer_info_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v1.CheckResponse.CheckInfo)
}

inline void CheckResponse_CheckInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.unused_arguments_){arena}
    , decltype(_impl_.consumer_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CheckResponse_CheckInfo::~CheckResponse_CheckInfo() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v1.CheckResponse.CheckInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CheckResponse_CheckInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.unused_arguments_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.consumer_info_;
}

void CheckResponse_CheckInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CheckResponse_CheckInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v1.CheckResponse.CheckInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.unused_arguments_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.consumer_info_ != nullptr) {
    delete _impl_.consumer_info_;
  }
  _impl_.consumer_info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CheckResponse_CheckInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string unused_arguments = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_unused_arguments();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "google.api.servicecontrol.v1.CheckResponse.CheckInfo.unused_arguments"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .google.api.servicecontrol.v1.CheckResponse.ConsumerInfo consumer_info = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_consumer_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CheckResponse_CheckInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v1.CheckResponse.CheckInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string unused_arguments = 1;
  for (int i = 0, n = this->_internal_unused_arguments_size(); i < n; i++) {
    const auto& s = this->_internal_unused_arguments(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.CheckResponse.CheckInfo.unused_arguments");
    target = stream->WriteString(1, s, target);
  }

  // .google.api.servicecontrol.v1.CheckResponse.ConsumerInfo consumer_info = 2;
  if (this->_internal_has_consumer_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::consumer_info(this),
        _Internal::consumer_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v1.CheckResponse.CheckInfo)
  return target;
}

size_t CheckResponse_CheckInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v1.CheckResponse.CheckInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string unused_arguments = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.unused_arguments_.size());
  for (int i = 0, n = _impl_.unused_arguments_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.unused_arguments_.Get(i));
  }

  // .google.api.servicecontrol.v1.CheckResponse.ConsumerInfo consumer_info = 2;
  if (this->_internal_has_consumer_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.consumer_info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CheckResponse_CheckInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CheckResponse_CheckInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CheckResponse_CheckInfo::GetClassData() const { return &_class_data_; }


void CheckResponse_CheckInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CheckResponse_CheckInfo*>(&to_msg);
  auto& from = static_cast<const CheckResponse_CheckInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v1.CheckResponse.CheckInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.unused_arguments_.MergeFrom(from._impl_.unused_arguments_);
  if (from._internal_has_consumer_info()) {
    _this->_internal_mutable_consumer_info()->::google::api::servicecontrol::v1::CheckResponse_ConsumerInfo::MergeFrom(
        from._internal_consumer_info());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CheckResponse_CheckInfo::CopyFrom(const CheckResponse_CheckInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v1.CheckResponse.CheckInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckResponse_CheckInfo::IsInitialized() const {
  return true;
}

void CheckResponse_CheckInfo::InternalSwap(CheckResponse_CheckInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.unused_arguments_.InternalSwap(&other->_impl_.unused_arguments_);
  swap(_impl_.consumer_info_, other->_impl_.consumer_info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CheckResponse_CheckInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto_getter, &descriptor_table_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto_once,
      file_level_metadata_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto[1]);
}

// ===================================================================

class CheckResponse_ConsumerInfo::_Internal {
 public:
};

CheckResponse_ConsumerInfo::CheckResponse_ConsumerInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v1.CheckResponse.ConsumerInfo)
}
CheckResponse_ConsumerInfo::CheckResponse_ConsumerInfo(const CheckResponse_ConsumerInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CheckResponse_ConsumerInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.project_number_){}
    , decltype(_impl_.consumer_number_){}
    , decltype(_impl_.type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.project_number_, &from._impl_.project_number_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.type_) -
    reinterpret_cast<char*>(&_impl_.project_number_)) + sizeof(_impl_.type_));
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v1.CheckResponse.ConsumerInfo)
}

inline void CheckResponse_ConsumerInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.project_number_){int64_t{0}}
    , decltype(_impl_.consumer_number_){int64_t{0}}
    , decltype(_impl_.type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CheckResponse_ConsumerInfo::~CheckResponse_ConsumerInfo() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v1.CheckResponse.ConsumerInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CheckResponse_ConsumerInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CheckResponse_ConsumerInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CheckResponse_ConsumerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v1.CheckResponse.ConsumerInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.project_number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.type_) -
      reinterpret_cast<char*>(&_impl_.project_number_)) + sizeof(_impl_.type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CheckResponse_ConsumerInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 project_number = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.project_number_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.servicecontrol.v1.CheckResponse.ConsumerInfo.ConsumerType type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::google::api::servicecontrol::v1::CheckResponse_ConsumerInfo_ConsumerType>(val));
        } else
          goto handle_unusual;
        continue;
      // int64 consumer_number = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.consumer_number_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CheckResponse_ConsumerInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v1.CheckResponse.ConsumerInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 project_number = 1;
  if (this->_internal_project_number() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_project_number(), target);
  }

  // .google.api.servicecontrol.v1.CheckResponse.ConsumerInfo.ConsumerType type = 2;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_type(), target);
  }

  // int64 consumer_number = 3;
  if (this->_internal_consumer_number() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_consumer_number(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v1.CheckResponse.ConsumerInfo)
  return target;
}

size_t CheckResponse_ConsumerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v1.CheckResponse.ConsumerInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 project_number = 1;
  if (this->_internal_project_number() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_project_number());
  }

  // int64 consumer_number = 3;
  if (this->_internal_consumer_number() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_consumer_number());
  }

  // .google.api.servicecontrol.v1.CheckResponse.ConsumerInfo.ConsumerType type = 2;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CheckResponse_ConsumerInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CheckResponse_ConsumerInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CheckResponse_ConsumerInfo::GetClassData() const { return &_class_data_; }


void CheckResponse_ConsumerInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CheckResponse_ConsumerInfo*>(&to_msg);
  auto& from = static_cast<const CheckResponse_ConsumerInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v1.CheckResponse.ConsumerInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_project_number() != 0) {
    _this->_internal_set_project_number(from._internal_project_number());
  }
  if (from._internal_consumer_number() != 0) {
    _this->_internal_set_consumer_number(from._internal_consumer_number());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CheckResponse_ConsumerInfo::CopyFrom(const CheckResponse_ConsumerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v1.CheckResponse.ConsumerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckResponse_ConsumerInfo::IsInitialized() const {
  return true;
}

void CheckResponse_ConsumerInfo::InternalSwap(CheckResponse_ConsumerInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CheckResponse_ConsumerInfo, _impl_.type_)
      + sizeof(CheckResponse_ConsumerInfo::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(CheckResponse_ConsumerInfo, _impl_.project_number_)>(
          reinterpret_cast<char*>(&_impl_.project_number_),
          reinterpret_cast<char*>(&other->_impl_.project_number_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CheckResponse_ConsumerInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto_getter, &descriptor_table_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto_once,
      file_level_metadata_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto[2]);
}

// ===================================================================

class CheckResponse::_Internal {
 public:
  static const ::google::api::servicecontrol::v1::CheckResponse_CheckInfo& check_info(const CheckResponse* msg);
};

const ::google::api::servicecontrol::v1::CheckResponse_CheckInfo&
CheckResponse::_Internal::check_info(const CheckResponse* msg) {
  return *msg->_impl_.check_info_;
}
void CheckResponse::clear_check_errors() {
  _impl_.check_errors_.Clear();
}
CheckResponse::CheckResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v1.CheckResponse)
}
CheckResponse::CheckResponse(const CheckResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CheckResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.check_errors_){from._impl_.check_errors_}
    , decltype(_impl_.operation_id_){}
    , decltype(_impl_.service_config_id_){}
    , decltype(_impl_.service_rollout_id_){}
    , decltype(_impl_.check_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.operation_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.operation_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_operation_id().empty()) {
    _this->_impl_.operation_id_.Set(from._internal_operation_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.service_config_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_config_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_service_config_id().empty()) {
    _this->_impl_.service_config_id_.Set(from._internal_service_config_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.service_rollout_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_rollout_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_service_rollout_id().empty()) {
    _this->_impl_.service_rollout_id_.Set(from._internal_service_rollout_id(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_check_info()) {
    _this->_impl_.check_info_ = new ::google::api::servicecontrol::v1::CheckResponse_CheckInfo(*from._impl_.check_info_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v1.CheckResponse)
}

inline void CheckResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.check_errors_){arena}
    , decltype(_impl_.operation_id_){}
    , decltype(_impl_.service_config_id_){}
    , decltype(_impl_.service_rollout_id_){}
    , decltype(_impl_.check_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.operation_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.operation_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.service_config_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_config_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.service_rollout_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_rollout_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CheckResponse::~CheckResponse() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v1.CheckResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CheckResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.check_errors_.~RepeatedPtrField();
  _impl_.operation_id_.Destroy();
  _impl_.service_config_id_.Destroy();
  _impl_.service_rollout_id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.check_info_;
}

void CheckResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CheckResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v1.CheckResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.check_errors_.Clear();
  _impl_.operation_id_.ClearToEmpty();
  _impl_.service_config_id_.ClearToEmpty();
  _impl_.service_rollout_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.check_info_ != nullptr) {
    delete _impl_.check_info_;
  }
  _impl_.check_info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CheckResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string operation_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_operation_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicecontrol.v1.CheckResponse.operation_id"));
        } else
          goto handle_unusual;
        continue;
      // repeated .google.api.servicecontrol.v1.CheckError check_errors = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_check_errors(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string service_config_id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_service_config_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicecontrol.v1.CheckResponse.service_config_id"));
        } else
          goto handle_unusual;
        continue;
      // .google.api.servicecontrol.v1.CheckResponse.CheckInfo check_info = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_check_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string service_rollout_id = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_service_rollout_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicecontrol.v1.CheckResponse.service_rollout_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CheckResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v1.CheckResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string operation_id = 1;
  if (!this->_internal_operation_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_operation_id().data(), static_cast<int>(this->_internal_operation_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.CheckResponse.operation_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_operation_id(), target);
  }

  // repeated .google.api.servicecontrol.v1.CheckError check_errors = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_check_errors_size()); i < n; i++) {
    const auto& repfield = this->_internal_check_errors(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string service_config_id = 5;
  if (!this->_internal_service_config_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_config_id().data(), static_cast<int>(this->_internal_service_config_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.CheckResponse.service_config_id");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_service_config_id(), target);
  }

  // .google.api.servicecontrol.v1.CheckResponse.CheckInfo check_info = 6;
  if (this->_internal_has_check_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::check_info(this),
        _Internal::check_info(this).GetCachedSize(), target, stream);
  }

  // string service_rollout_id = 11;
  if (!this->_internal_service_rollout_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_rollout_id().data(), static_cast<int>(this->_internal_service_rollout_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.CheckResponse.service_rollout_id");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_service_rollout_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v1.CheckResponse)
  return target;
}

size_t CheckResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v1.CheckResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.servicecontrol.v1.CheckError check_errors = 2;
  total_size += 1UL * this->_internal_check_errors_size();
  for (const auto& msg : this->_impl_.check_errors_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string operation_id = 1;
  if (!this->_internal_operation_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_operation_id());
  }

  // string service_config_id = 5;
  if (!this->_internal_service_config_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_config_id());
  }

  // string service_rollout_id = 11;
  if (!this->_internal_service_rollout_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_rollout_id());
  }

  // .google.api.servicecontrol.v1.CheckResponse.CheckInfo check_info = 6;
  if (this->_internal_has_check_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.check_info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CheckResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CheckResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CheckResponse::GetClassData() const { return &_class_data_; }


void CheckResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CheckResponse*>(&to_msg);
  auto& from = static_cast<const CheckResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v1.CheckResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.check_errors_.MergeFrom(from._impl_.check_errors_);
  if (!from._internal_operation_id().empty()) {
    _this->_internal_set_operation_id(from._internal_operation_id());
  }
  if (!from._internal_service_config_id().empty()) {
    _this->_internal_set_service_config_id(from._internal_service_config_id());
  }
  if (!from._internal_service_rollout_id().empty()) {
    _this->_internal_set_service_rollout_id(from._internal_service_rollout_id());
  }
  if (from._internal_has_check_info()) {
    _this->_internal_mutable_check_info()->::google::api::servicecontrol::v1::CheckResponse_CheckInfo::MergeFrom(
        from._internal_check_info());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CheckResponse::CopyFrom(const CheckResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v1.CheckResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckResponse::IsInitialized() const {
  return true;
}

void CheckResponse::InternalSwap(CheckResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.check_errors_.InternalSwap(&other->_impl_.check_errors_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.operation_id_, lhs_arena,
      &other->_impl_.operation_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.service_config_id_, lhs_arena,
      &other->_impl_.service_config_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.service_rollout_id_, lhs_arena,
      &other->_impl_.service_rollout_id_, rhs_arena
  );
  swap(_impl_.check_info_, other->_impl_.check_info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CheckResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto_getter, &descriptor_table_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto_once,
      file_level_metadata_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto[3]);
}

// ===================================================================

class ReportRequest::_Internal {
 public:
};

void ReportRequest::clear_operations() {
  _impl_.operations_.Clear();
}
ReportRequest::ReportRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v1.ReportRequest)
}
ReportRequest::ReportRequest(const ReportRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReportRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.operations_){from._impl_.operations_}
    , decltype(_impl_.service_name_){}
    , decltype(_impl_.service_config_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_service_name().empty()) {
    _this->_impl_.service_name_.Set(from._internal_service_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.service_config_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_config_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_service_config_id().empty()) {
    _this->_impl_.service_config_id_.Set(from._internal_service_config_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v1.ReportRequest)
}

inline void ReportRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.operations_){arena}
    , decltype(_impl_.service_name_){}
    , decltype(_impl_.service_config_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.service_config_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_config_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ReportRequest::~ReportRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v1.ReportRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReportRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.operations_.~RepeatedPtrField();
  _impl_.service_name_.Destroy();
  _impl_.service_config_id_.Destroy();
}

void ReportRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v1.ReportRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.operations_.Clear();
  _impl_.service_name_.ClearToEmpty();
  _impl_.service_config_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReportRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string service_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_service_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicecontrol.v1.ReportRequest.service_name"));
        } else
          goto handle_unusual;
        continue;
      // repeated .google.api.servicecontrol.v1.Operation operations = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_operations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string service_config_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_service_config_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicecontrol.v1.ReportRequest.service_config_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReportRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v1.ReportRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (!this->_internal_service_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_name().data(), static_cast<int>(this->_internal_service_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.ReportRequest.service_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_service_name(), target);
  }

  // repeated .google.api.servicecontrol.v1.Operation operations = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_operations_size()); i < n; i++) {
    const auto& repfield = this->_internal_operations(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string service_config_id = 3;
  if (!this->_internal_service_config_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_config_id().data(), static_cast<int>(this->_internal_service_config_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.ReportRequest.service_config_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_service_config_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v1.ReportRequest)
  return target;
}

size_t ReportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v1.ReportRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.servicecontrol.v1.Operation operations = 2;
  total_size += 1UL * this->_internal_operations_size();
  for (const auto& msg : this->_impl_.operations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string service_name = 1;
  if (!this->_internal_service_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_name());
  }

  // string service_config_id = 3;
  if (!this->_internal_service_config_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_config_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReportRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReportRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReportRequest::GetClassData() const { return &_class_data_; }


void ReportRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReportRequest*>(&to_msg);
  auto& from = static_cast<const ReportRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v1.ReportRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.operations_.MergeFrom(from._impl_.operations_);
  if (!from._internal_service_name().empty()) {
    _this->_internal_set_service_name(from._internal_service_name());
  }
  if (!from._internal_service_config_id().empty()) {
    _this->_internal_set_service_config_id(from._internal_service_config_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReportRequest::CopyFrom(const ReportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v1.ReportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReportRequest::IsInitialized() const {
  return true;
}

void ReportRequest::InternalSwap(ReportRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.operations_.InternalSwap(&other->_impl_.operations_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.service_name_, lhs_arena,
      &other->_impl_.service_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.service_config_id_, lhs_arena,
      &other->_impl_.service_config_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ReportRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto_getter, &descriptor_table_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto_once,
      file_level_metadata_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto[4]);
}

// ===================================================================

class ReportResponse_ReportError::_Internal {
 public:
  static const ::google::rpc::Status& status(const ReportResponse_ReportError* msg);
};

const ::google::rpc::Status&
ReportResponse_ReportError::_Internal::status(const ReportResponse_ReportError* msg) {
  return *msg->_impl_.status_;
}
void ReportResponse_ReportError::clear_status() {
  if (GetArenaForAllocation() == nullptr && _impl_.status_ != nullptr) {
    delete _impl_.status_;
  }
  _impl_.status_ = nullptr;
}
ReportResponse_ReportError::ReportResponse_ReportError(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v1.ReportResponse.ReportError)
}
ReportResponse_ReportError::ReportResponse_ReportError(const ReportResponse_ReportError& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReportResponse_ReportError* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.operation_id_){}
    , decltype(_impl_.status_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.operation_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.operation_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_operation_id().empty()) {
    _this->_impl_.operation_id_.Set(from._internal_operation_id(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_status()) {
    _this->_impl_.status_ = new ::google::rpc::Status(*from._impl_.status_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v1.ReportResponse.ReportError)
}

inline void ReportResponse_ReportError::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.operation_id_){}
    , decltype(_impl_.status_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.operation_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.operation_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ReportResponse_ReportError::~ReportResponse_ReportError() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v1.ReportResponse.ReportError)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReportResponse_ReportError::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.operation_id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.status_;
}

void ReportResponse_ReportError::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReportResponse_ReportError::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v1.ReportResponse.ReportError)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.operation_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.status_ != nullptr) {
    delete _impl_.status_;
  }
  _impl_.status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReportResponse_ReportError::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string operation_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_operation_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicecontrol.v1.ReportResponse.ReportError.operation_id"));
        } else
          goto handle_unusual;
        continue;
      // .google.rpc.Status status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReportResponse_ReportError::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v1.ReportResponse.ReportError)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string operation_id = 1;
  if (!this->_internal_operation_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_operation_id().data(), static_cast<int>(this->_internal_operation_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.ReportResponse.ReportError.operation_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_operation_id(), target);
  }

  // .google.rpc.Status status = 2;
  if (this->_internal_has_status()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v1.ReportResponse.ReportError)
  return target;
}

size_t ReportResponse_ReportError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v1.ReportResponse.ReportError)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string operation_id = 1;
  if (!this->_internal_operation_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_operation_id());
  }

  // .google.rpc.Status status = 2;
  if (this->_internal_has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.status_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReportResponse_ReportError::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReportResponse_ReportError::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReportResponse_ReportError::GetClassData() const { return &_class_data_; }


void ReportResponse_ReportError::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReportResponse_ReportError*>(&to_msg);
  auto& from = static_cast<const ReportResponse_ReportError&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v1.ReportResponse.ReportError)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_operation_id().empty()) {
    _this->_internal_set_operation_id(from._internal_operation_id());
  }
  if (from._internal_has_status()) {
    _this->_internal_mutable_status()->::google::rpc::Status::MergeFrom(
        from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReportResponse_ReportError::CopyFrom(const ReportResponse_ReportError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v1.ReportResponse.ReportError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReportResponse_ReportError::IsInitialized() const {
  return true;
}

void ReportResponse_ReportError::InternalSwap(ReportResponse_ReportError* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.operation_id_, lhs_arena,
      &other->_impl_.operation_id_, rhs_arena
  );
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReportResponse_ReportError::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto_getter, &descriptor_table_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto_once,
      file_level_metadata_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto[5]);
}

// ===================================================================

class ReportResponse::_Internal {
 public:
};

ReportResponse::ReportResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v1.ReportResponse)
}
ReportResponse::ReportResponse(const ReportResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReportResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.report_errors_){from._impl_.report_errors_}
    , decltype(_impl_.service_config_id_){}
    , decltype(_impl_.service_rollout_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.service_config_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_config_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_service_config_id().empty()) {
    _this->_impl_.service_config_id_.Set(from._internal_service_config_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.service_rollout_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_rollout_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_service_rollout_id().empty()) {
    _this->_impl_.service_rollout_id_.Set(from._internal_service_rollout_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v1.ReportResponse)
}

inline void ReportResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.report_errors_){arena}
    , decltype(_impl_.service_config_id_){}
    , decltype(_impl_.service_rollout_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.service_config_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_config_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.service_rollout_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_rollout_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ReportResponse::~ReportResponse() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v1.ReportResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReportResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.report_errors_.~RepeatedPtrField();
  _impl_.service_config_id_.Destroy();
  _impl_.service_rollout_id_.Destroy();
}

void ReportResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v1.ReportResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.report_errors_.Clear();
  _impl_.service_config_id_.ClearToEmpty();
  _impl_.service_rollout_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReportResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .google.api.servicecontrol.v1.ReportResponse.ReportError report_errors = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_report_errors(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string service_config_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_service_config_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicecontrol.v1.ReportResponse.service_config_id"));
        } else
          goto handle_unusual;
        continue;
      // string service_rollout_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_service_rollout_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicecontrol.v1.ReportResponse.service_rollout_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReportResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v1.ReportResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.servicecontrol.v1.ReportResponse.ReportError report_errors = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_report_errors_size()); i < n; i++) {
    const auto& repfield = this->_internal_report_errors(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string service_config_id = 2;
  if (!this->_internal_service_config_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_config_id().data(), static_cast<int>(this->_internal_service_config_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.ReportResponse.service_config_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_service_config_id(), target);
  }

  // string service_rollout_id = 4;
  if (!this->_internal_service_rollout_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_rollout_id().data(), static_cast<int>(this->_internal_service_rollout_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.ReportResponse.service_rollout_id");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_service_rollout_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v1.ReportResponse)
  return target;
}

size_t ReportResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v1.ReportResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.servicecontrol.v1.ReportResponse.ReportError report_errors = 1;
  total_size += 1UL * this->_internal_report_errors_size();
  for (const auto& msg : this->_impl_.report_errors_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string service_config_id = 2;
  if (!this->_internal_service_config_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_config_id());
  }

  // string service_rollout_id = 4;
  if (!this->_internal_service_rollout_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_rollout_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReportResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReportResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReportResponse::GetClassData() const { return &_class_data_; }


void ReportResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReportResponse*>(&to_msg);
  auto& from = static_cast<const ReportResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v1.ReportResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.report_errors_.MergeFrom(from._impl_.report_errors_);
  if (!from._internal_service_config_id().empty()) {
    _this->_internal_set_service_config_id(from._internal_service_config_id());
  }
  if (!from._internal_service_rollout_id().empty()) {
    _this->_internal_set_service_rollout_id(from._internal_service_rollout_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReportResponse::CopyFrom(const ReportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v1.ReportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReportResponse::IsInitialized() const {
  return true;
}

void ReportResponse::InternalSwap(ReportResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.report_errors_.InternalSwap(&other->_impl_.report_errors_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.service_config_id_, lhs_arena,
      &other->_impl_.service_config_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.service_rollout_id_, lhs_arena,
      &other->_impl_.service_rollout_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ReportResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto_getter, &descriptor_table_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto_once,
      file_level_metadata_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto[6]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace servicecontrol
}  // namespace api
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::google::api::servicecontrol::v1::CheckRequest*
Arena::CreateMaybeMessage< ::google::api::servicecontrol::v1::CheckRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicecontrol::v1::CheckRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicecontrol::v1::CheckResponse_CheckInfo*
Arena::CreateMaybeMessage< ::google::api::servicecontrol::v1::CheckResponse_CheckInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicecontrol::v1::CheckResponse_CheckInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicecontrol::v1::CheckResponse_ConsumerInfo*
Arena::CreateMaybeMessage< ::google::api::servicecontrol::v1::CheckResponse_ConsumerInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicecontrol::v1::CheckResponse_ConsumerInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicecontrol::v1::CheckResponse*
Arena::CreateMaybeMessage< ::google::api::servicecontrol::v1::CheckResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicecontrol::v1::CheckResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicecontrol::v1::ReportRequest*
Arena::CreateMaybeMessage< ::google::api::servicecontrol::v1::ReportRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicecontrol::v1::ReportRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicecontrol::v1::ReportResponse_ReportError*
Arena::CreateMaybeMessage< ::google::api::servicecontrol::v1::ReportResponse_ReportError >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicecontrol::v1::ReportResponse_ReportError >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicecontrol::v1::ReportResponse*
Arena::CreateMaybeMessage< ::google::api::servicecontrol::v1::ReportResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicecontrol::v1::ReportResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/servicecontrol/v1/operation.proto

#include "google/api/servicecontrol/v1/operation.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace google {
namespace api {
namespace servicecontrol {
namespace v1 {
PROTOBUF_CONSTEXPR Operation_LabelsEntry_DoNotUse::Operation_LabelsEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct Operation_LabelsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Operation_LabelsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Operation_LabelsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Operation_LabelsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Operation_LabelsEntry_DoNotUseDefaultTypeInternal _Operation_LabelsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR Operation::Operation(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.labels_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.metric_value_sets_)*/{}
  , /*decltype(_impl_.log_entries_)*/{}
  , /*decltype(_impl_.extensions_)*/{}
  , /*decltype(_impl_.operation_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.operation_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.consumer_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.start_time_)*/nullptr
  , /*decltype(_impl_.end_time_)*/nullptr
  , /*decltype(_impl_.importance_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OperationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OperationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OperationDefaultTypeInternal() {}
  union {
    Operation _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OperationDefaultTypeInternal _Operation_default_instance_;
}  // namespace v1
}  // namespace servicecontrol
}  // namespace api
}  // namespace google
static ::_pb::Metadata file_level_metadata_google_2fapi_2fservicecontrol_2fv1_2foperation_2eproto[2];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_google_2fapi_2fservicecontrol_2fv1_2foperation_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_google_2fapi_2fservicecontrol_2fv1_2foperation_2eproto = nullptr;

const uint32_t TableStruct_google_2fapi_2fservicecontrol_2fv1_2foperation_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::Operation_LabelsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::Operation_LabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::Operation_LabelsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::Operation_LabelsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::Operation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::Operation, _impl_.operation_id_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::Operation, _impl_.operation_name_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::Operation, _impl_.consumer_id_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::Operation, _impl_.start_time_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::Operation, _impl_.end_time_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::Operation, _impl_.labels_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::Operation, _impl_.metric_value_sets_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::Operation, _impl_.log_entries_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::Operation, _impl_.importance_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::Operation, _impl_.extensions_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, -1, sizeof(::google::api::servicecontrol::v1::Operation_LabelsEntry_DoNotUse)},
  { 10, -1, -1, sizeof(::google::api::servicecontrol::v1::Operation)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::google::api::servicecontrol::v1::_Operation_LabelsEntry_DoNotUse_default_instance_._instance,
  &::google::api::servicecontrol::v1::_Operation_default_instance_._instance,
};

const char descriptor_table_protodef_google_2fapi_2fservicecontrol_2fv1_2foperation_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n,google/api/servicecontrol/v1/operation"
  ".proto\022\034google.api.servicecontrol.v1\032,go"
  "ogle/api/servicecontrol/v1/log_entry.pro"
  "to\032/google/api/servicecontrol/v1/metric_"
  "value.proto\032\031google/protobuf/any.proto\032\037"
  "google/protobuf/timestamp.proto\"\271\004\n\tOper"
  "ation\022\024\n\014operation_id\030\001 \001(\t\022\026\n\016operation"
  "_name\030\002 \001(\t\022\023\n\013consumer_id\030\003 \001(\t\022.\n\nstar"
  "t_time\030\004 \001(\0132\032.google.protobuf.Timestamp"
  "\022,\n\010end_time\030\005 \001(\0132\032.google.protobuf.Tim"
  "estamp\022C\n\006labels\030\006 \003(\01323.google.api.serv"
  "icecontrol.v1.Operation.LabelsEntry\022G\n\021m"
  "etric_value_sets\030\007 \003(\0132,.google.api.serv"
  "icecontrol.v1.MetricValueSet\022;\n\013log_entr"
  "ies\030\010 \003(\0132&.google.api.servicecontrol.v1"
  ".LogEntry\022F\n\nimportance\030\013 \001(\01622.google.a"
  "pi.servicecontrol.v1.Operation.Importanc"
  "e\022(\n\nextensions\030\020 \003(\0132\024.google.protobuf."
  "Any\032-\n\013LabelsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value"
  "\030\002 \001(\t:\0028\001\"\037\n\nImportance\022\007\n\003LOW\020\000\022\010\n\004HIG"
  "H\020\001B\351\001\n com.google.api.servicecontrol.v1"
  "B\016OperationProtoP\001ZJgoogle.golang.org/ge"
  "nproto/googleapis/api/servicecontrol/v1;"
  "servicecontrol\370\001\001\252\002\036Google.Cloud.Service"
  "Control.V1\312\002\036Google\\Cloud\\ServiceControl"
  "\\V1\352\002!Google::Cloud::ServiceControl::V1b"
  "\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_google_2fapi_2fservicecontrol_2fv1_2foperation_2eproto_deps[4] = {
  &::descriptor_table_google_2fapi_2fservicecontrol_2fv1_2flog_5fentry_2eproto,
  &::descriptor_table_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto,
  &::descriptor_table_google_2fprotobuf_2fany_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::_pbi::once_flag descriptor_table_google_2fapi_2fservicecontrol_2fv1_2foperation_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_google_2fapi_2fservicecontrol_2fv1_2foperation_2eproto = {
    false, false, 1047, descriptor_table_protodef_google_2fapi_2fservicecontrol_2fv1_2foperation_2eproto,
    "google/api/servicecontrol/v1/operation.proto",
    &descriptor_table_google_2fapi_2fservicecontrol_2fv1_2foperation_2eproto_once, descriptor_table_google_2fapi_2fservicecontrol_2fv1_2foperation_2eproto_deps, 4, 2,
    schemas, file_default_instances, TableStruct_google_2fapi_2fservicecontrol_2fv1_2foperation_2eproto::offsets,
    file_level_metadata_google_2fapi_2fservicecontrol_2fv1_2foperation_2eproto, file_level_enum_descriptors_google_2fapi_2fservicecontrol_2fv1_2foperation_2eproto,
    file_level_service_descriptors_google_2fapi_2fservicecontrol_2fv1_2foperation_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_google_2fapi_2fservicecontrol_2fv1_2foperation_2eproto_getter() {
  return &descriptor_table_google_2fapi_2fservicecontrol_2fv1_2foperation_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_google_2fapi_2fservicecontrol_2fv1_2foperation_2eproto(&descriptor_table_google_2fapi_2fservicecontrol_2fv1_2foperation_2eproto);
namespace google {
namespace api {
namespace servicecontrol {
namespace v1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Operation_Importance_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_google_2fapi_2fservicecontrol_2fv1_2foperation_2eproto);
  return file_level_enum_descriptors_google_2fapi_2fservicecontrol_2fv1_2foperation_2eproto[0];
}
bool Operation_Importance_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Operation_Importance Operation::LOW;
constexpr Operation_Importance Operation::HIGH;
constexpr Operation_Importance Operation::Importance_MIN;
constexpr Operation_Importance Operation::Importance_MAX;
constexpr int Operation::Importance_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

Operation_LabelsEntry_DoNotUse::Operation_LabelsEntry_DoNotUse() {}
Operation_LabelsEntry_DoNotUse::Operation_LabelsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Operation_LabelsEntry_DoNotUse::MergeFrom(const Operation_LabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Operation_LabelsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicecontrol_2fv1_2foperation_2eproto_getter, &descriptor_table_google_2fapi_2fservicecontrol_2fv1_2foperation_2eproto_once,
      file_level_metadata_google_2fapi_2fservicecontrol_2fv1_2foperation_2eproto[0]);
}

// ===================================================================

class Operation::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& start_time(const Operation* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& end_time(const Operation* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
Operation::_Internal::start_time(const Operation* msg) {
  return *msg->_impl_.start_time_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
Operation::_Internal::end_time(const Operation* msg) {
  return *msg->_impl_.end_time_;
}
void Operation::clear_start_time() {
  if (GetArenaForAllocation() == nullptr && _impl_.start_time_ != nullptr) {
    delete _impl_.start_time_;
  }
  _impl_.start_time_ = nullptr;
}
void Operation::clear_end_time() {
  if (GetArenaForAllocation() == nullptr && _impl_.end_time_ != nullptr) {
    delete _impl_.end_time_;
  }
  _impl_.end_time_ = nullptr;
}
void Operation::clear_metric_value_sets() {
  _impl_.metric_value_sets_.Clear();
}
void Operation::clear_log_entries() {
  _impl_.log_entries_.Clear();
}
void Operation::clear_extensions() {
  _impl_.extensions_.Clear();
}
Operation::Operation(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &Operation::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v1.Operation)
}
Operation::Operation(const Operation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Operation* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.labels_)*/{}
    , decltype(_impl_.metric_value_sets_){from._impl_.metric_value_sets_}
    , decltype(_impl_.log_entries_){from._impl_.log_entries_}
    , decltype(_impl_.extensions_){from._impl_.extensions_}
    , decltype(_impl_.operation_id_){}
    , decltype(_impl_.operation_name_){}
    , decltype(_impl_.consumer_id_){}
    , decltype(_impl_.start_time_){nullptr}
    , decltype(_impl_.end_time_){nullptr}
    , decltype(_impl_.importance_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.labels_.MergeFrom(from._impl_.labels_);
  _impl_.operation_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.operation_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_operation_id().empty()) {
    _this->_impl_.operation_id_.Set(from._internal_operation_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.operation_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.operation_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_operation_name().empty()) {
    _this->_impl_.operation_name_.Set(from._internal_operation_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.consumer_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.consumer_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_consumer_id().empty()) {
    _this->_impl_.consumer_id_.Set(from._internal_consumer_id(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_start_time()) {
    _this->_impl_.start_time_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.start_time_);
  }
  if (from._internal_has_end_time()) {
    _this->_impl_.end_time_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.end_time_);
  }
  _this->_impl_.importance_ = from._impl_.importance_;
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v1.Operation)
}

inline void Operation::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.labels_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.metric_value_sets_){arena}
    , decltype(_impl_.log_entries_){arena}
    , decltype(_impl_.extensions_){arena}
    , decltype(_impl_.operation_id_){}
    , decltype(_impl_.operation_name_){}
    , decltype(_impl_.consumer_id_){}
    , decltype(_impl_.start_time_){nullptr}
    , decltype(_impl_.end_time_){nullptr}
    , decltype(_impl_.importance_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.operation_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.operation_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.operation_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.operation_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.consumer_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.consumer_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Operation::~Operation() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v1.Operation)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void Operation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.labels_.Destruct();
  _impl_.labels_.~MapField();
  _impl_.metric_value_sets_.~RepeatedPtrField();
  _impl_.log_entries_.~RepeatedPtrField();
  _impl_.extensions_.~RepeatedPtrField();
  _impl_.operation_id_.Destroy();
  _impl_.operation_name_.Destroy();
  _impl_.consumer_id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.start_time_;
  if (this != internal_default_instance()) delete _impl_.end_time_;
}

void Operation::ArenaDtor(void* object) {
  Operation* _this = reinterpret_cast< Operation* >(object);
  _this->_impl_.labels_.Destruct();
}
void Operation::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Operation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v1.Operation)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.labels_.Clear();
  _impl_.metric_value_sets_.Clear();
  _impl_.log_entries_.Clear();
  _impl_.extensions_.Clear();
  _impl_.operation_id_.ClearToEmpty();
  _impl_.operation_name_.ClearToEmpty();
  _impl_.consumer_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.start_time_ != nullptr) {
    delete _impl_.start_time_;
  }
  _impl_.start_time_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.end_time_ != nullptr) {
    delete _impl_.end_time_;
  }
  _impl_.end_time_ = nullptr;
  _impl_.importance_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Operation::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string operation_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_operation_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicecontrol.v1.Operation.operation_id"));
        } else
          goto handle_unusual;
        continue;
      // string operation_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_operation_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicecontrol.v1.Operation.operation_name"));
        } else
          goto handle_unusual;
        continue;
      // string consumer_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_consumer_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicecontrol.v1.Operation.consumer_id"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp start_time = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_start_time(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp end_time = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_end_time(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, string> labels = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.labels_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .google.api.servicecontrol.v1.MetricValueSet metric_value_sets = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_metric_value_sets(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .google.api.servicecontrol.v1.LogEntry log_entries = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_log_entries(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .google.api.servicecontrol.v1.Operation.Importance importance = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_importance(static_cast<::google::api::servicecontrol::v1::Operation_Importance>(val));
        } else
          goto handle_unusual;
        continue;
      // repeated .google.protobuf.Any extensions = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 130)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_extensions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<130>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Operation::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v1.Operation)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string operation_id = 1;
  if (!this->_internal_operation_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_operation_id().data(), static_cast<int>(this->_internal_operation_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.Operation.operation_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_operation_id(), target);
  }

  // string operation_name = 2;
  if (!this->_internal_operation_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_operation_name().data(), static_cast<int>(this->_internal_operation_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.Operation.operation_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_operation_name(), target);
  }

  // string consumer_id = 3;
  if (!this->_internal_consumer_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_consumer_id().data(), static_cast<int>(this->_internal_consumer_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.Operation.consumer_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_consumer_id(), target);
  }

  // .google.protobuf.Timestamp start_time = 4;
  if (this->_internal_has_start_time()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::start_time(this),
        _Internal::start_time(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp end_time = 5;
  if (this->_internal_has_end_time()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::end_time(this),
        _Internal::end_time(this).GetCachedSize(), target, stream);
  }

  // map<string, string> labels = 6;
  if (!this->_internal_labels().empty()) {
    using MapType = ::_pb::Map<std::string, std::string>;
    using WireHelper = Operation_LabelsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_labels();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "google.api.servicecontrol.v1.Operation.LabelsEntry.key");
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.second.data(), static_cast<int>(entry.second.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "google.api.servicecontrol.v1.Operation.LabelsEntry.value");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(6, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(6, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // repeated .google.api.servicecontrol.v1.MetricValueSet metric_value_sets = 7;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_metric_value_sets_size()); i < n; i++) {
    const auto& repfield = this->_internal_metric_value_sets(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(7, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .google.api.servicecontrol.v1.LogEntry log_entries = 8;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_log_entries_size()); i < n; i++) {
    const auto& repfield = this->_internal_log_entries(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(8, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .google.api.servicecontrol.v1.Operation.Importance importance = 11;
  if (this->_internal_importance() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      11, this->_internal_importance(), target);
  }

  // repeated .google.protobuf.Any extensions = 16;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_extensions_size()); i < n; i++) {
    const auto& repfield = this->_internal_extensions(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(16, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v1.Operation)
  return target;
}

size_t Operation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v1.Operation)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> labels = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_labels_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_labels().begin();
      it != this->_internal_labels().end(); ++it) {
    total_size += Operation_LabelsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // repeated .google.api.servicecontrol.v1.MetricValueSet metric_value_sets = 7;
  total_size += 1UL * this->_internal_metric_value_sets_size();
  for (const auto& msg : this->_impl_.metric_value_sets_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .google.api.servicecontrol.v1.LogEntry log_entries = 8;
  total_size += 1UL * this->_internal_log_entries_size();
  for (const auto& msg : this->_impl_.log_entries_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .google.protobuf.Any extensions = 16;
  total_size += 2UL * this->_internal_extensions_size();
  for (const auto& msg : this->_impl_.extensions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string operation_id = 1;
  if (!this->_internal_operation_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_operation_id());
  }

  // string operation_name = 2;
  if (!this->_internal_operation_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_operation_name());
  }

  // string consumer_id = 3;
  if (!this->_internal_consumer_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_consumer_id());
  }

  // .google.protobuf.Timestamp start_time = 4;
  if (this->_internal_has_start_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.start_time_);
  }

  // .google.protobuf.Timestamp end_time = 5;
  if (this->_internal_has_end_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.end_time_);
  }

  // .google.api.servicecontrol.v1.Operation.Importance importance = 11;
  if (this->_internal_importance() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_importance());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Operation::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Operation::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Operation::GetClassData() const { return &_class_data_; }


void Operation::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Operation*>(&to_msg);
  auto& from = static_cast<const Operation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v1.Operation)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.labels_.MergeFrom(from._impl_.labels_);
  _this->_impl_.metric_value_sets_.MergeFrom(from._impl_.metric_value_sets_);
  _this->_impl_.log_entries_.MergeFrom(from._impl_.log_entries_);
  _this->_impl_.extensions_.MergeFrom(from._impl_.extensions_);
  if (!from._internal_operation_id().empty()) {
    _this->_internal_set_operation_id(from._internal_operation_id());
  }
  if (!from._internal_operation_name().empty()) {
    _this->_internal_set_operation_name(from._internal_operation_name());
  }
  if (!from._internal_consumer_id().empty()) {
    _this->_internal_set_consumer_id(from._internal_consumer_id());
  }
  if (from._internal_has_start_time()) {
    _this->_internal_mutable_start_time()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_start_time());
  }
  if (from._internal_has_end_time()) {
    _this->_internal_mutable_end_time()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_end_time());
  }
  if (from._internal_importance() != 0) {
    _this->_internal_set_importance(from._internal_importance());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Operation::CopyFrom(const Operation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v1.Operation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Operation::IsInitialized() const {
  return true;
}

void Operation::InternalSwap(Operation* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.labels_.InternalSwap(&other->_impl_.labels_);
  _impl_.metric_value_sets_.InternalSwap(&other->_impl_.metric_value_sets_);
  _impl_.log_entries_.InternalSwap(&other->_impl_.log_entries_);
  _impl_.extensions_.InternalSwap(&other->_impl_.extensions_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.operation_id_, lhs_arena,
      &other->_impl_.operation_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.operation_name_, lhs_arena,
      &other->_impl_.operation_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.consumer_id_, lhs_arena,
      &other->_impl_.consumer_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Operation, _impl_.importance_)
      + sizeof(Operation::_impl_.importance_)
      - PROTOBUF_FIELD_OFFSET(Operation, _impl_.start_time_)>(
          reinterpret_cast<char*>(&_impl_.start_time_),
          reinterpret_cast<char*>(&other->_impl_.start_time_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Operation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicecontrol_2fv1_2foperation_2eproto_getter, &descriptor_table_google_2fapi_2fservicecontrol_2fv1_2foperation_2eproto_once,
      file_level_metadata_google_2fapi_2fservicecontrol_2fv1_2foperation_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace servicecontrol
}  // namespace api
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::google::api::servicecontrol::v1::Operation_LabelsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::google::api::servicecontrol::v1::Operation_LabelsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicecontrol::v1::Operation_LabelsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicecontrol::v1::Operation*
Arena::CreateMaybeMessage< ::google::api::servicecontrol::v1::Operation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicecontrol::v1::Operation >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

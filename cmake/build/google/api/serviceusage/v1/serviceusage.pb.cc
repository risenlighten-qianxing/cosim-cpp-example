// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/serviceusage/v1/serviceusage.proto

#include "google/api/serviceusage/v1/serviceusage.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace google {
namespace api {
namespace serviceusage {
namespace v1 {
PROTOBUF_CONSTEXPR EnableServiceRequest::EnableServiceRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct EnableServiceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EnableServiceRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EnableServiceRequestDefaultTypeInternal() {}
  union {
    EnableServiceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EnableServiceRequestDefaultTypeInternal _EnableServiceRequest_default_instance_;
PROTOBUF_CONSTEXPR EnableServiceResponse::EnableServiceResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.service_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct EnableServiceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EnableServiceResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EnableServiceResponseDefaultTypeInternal() {}
  union {
    EnableServiceResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EnableServiceResponseDefaultTypeInternal _EnableServiceResponse_default_instance_;
PROTOBUF_CONSTEXPR DisableServiceRequest::DisableServiceRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.disable_dependent_services_)*/false
  , /*decltype(_impl_.check_if_service_has_usage_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DisableServiceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DisableServiceRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DisableServiceRequestDefaultTypeInternal() {}
  union {
    DisableServiceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DisableServiceRequestDefaultTypeInternal _DisableServiceRequest_default_instance_;
PROTOBUF_CONSTEXPR DisableServiceResponse::DisableServiceResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.service_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DisableServiceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DisableServiceResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DisableServiceResponseDefaultTypeInternal() {}
  union {
    DisableServiceResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DisableServiceResponseDefaultTypeInternal _DisableServiceResponse_default_instance_;
PROTOBUF_CONSTEXPR GetServiceRequest::GetServiceRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetServiceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetServiceRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetServiceRequestDefaultTypeInternal() {}
  union {
    GetServiceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetServiceRequestDefaultTypeInternal _GetServiceRequest_default_instance_;
PROTOBUF_CONSTEXPR ListServicesRequest::ListServicesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.parent_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.page_token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.filter_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.page_size_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListServicesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListServicesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListServicesRequestDefaultTypeInternal() {}
  union {
    ListServicesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListServicesRequestDefaultTypeInternal _ListServicesRequest_default_instance_;
PROTOBUF_CONSTEXPR ListServicesResponse::ListServicesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.services_)*/{}
  , /*decltype(_impl_.next_page_token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListServicesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListServicesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListServicesResponseDefaultTypeInternal() {}
  union {
    ListServicesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListServicesResponseDefaultTypeInternal _ListServicesResponse_default_instance_;
PROTOBUF_CONSTEXPR BatchEnableServicesRequest::BatchEnableServicesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.service_ids_)*/{}
  , /*decltype(_impl_.parent_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BatchEnableServicesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BatchEnableServicesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BatchEnableServicesRequestDefaultTypeInternal() {}
  union {
    BatchEnableServicesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BatchEnableServicesRequestDefaultTypeInternal _BatchEnableServicesRequest_default_instance_;
PROTOBUF_CONSTEXPR BatchEnableServicesResponse_EnableFailure::BatchEnableServicesResponse_EnableFailure(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.service_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.error_message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BatchEnableServicesResponse_EnableFailureDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BatchEnableServicesResponse_EnableFailureDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BatchEnableServicesResponse_EnableFailureDefaultTypeInternal() {}
  union {
    BatchEnableServicesResponse_EnableFailure _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BatchEnableServicesResponse_EnableFailureDefaultTypeInternal _BatchEnableServicesResponse_EnableFailure_default_instance_;
PROTOBUF_CONSTEXPR BatchEnableServicesResponse::BatchEnableServicesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.services_)*/{}
  , /*decltype(_impl_.failures_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BatchEnableServicesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BatchEnableServicesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BatchEnableServicesResponseDefaultTypeInternal() {}
  union {
    BatchEnableServicesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BatchEnableServicesResponseDefaultTypeInternal _BatchEnableServicesResponse_default_instance_;
PROTOBUF_CONSTEXPR BatchGetServicesRequest::BatchGetServicesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.names_)*/{}
  , /*decltype(_impl_.parent_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BatchGetServicesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BatchGetServicesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BatchGetServicesRequestDefaultTypeInternal() {}
  union {
    BatchGetServicesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BatchGetServicesRequestDefaultTypeInternal _BatchGetServicesRequest_default_instance_;
PROTOBUF_CONSTEXPR BatchGetServicesResponse::BatchGetServicesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.services_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BatchGetServicesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BatchGetServicesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BatchGetServicesResponseDefaultTypeInternal() {}
  union {
    BatchGetServicesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BatchGetServicesResponseDefaultTypeInternal _BatchGetServicesResponse_default_instance_;
}  // namespace v1
}  // namespace serviceusage
}  // namespace api
}  // namespace google
static ::_pb::Metadata file_level_metadata_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto[12];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto = nullptr;

const uint32_t TableStruct_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::EnableServiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::EnableServiceRequest, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::EnableServiceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::EnableServiceResponse, _impl_.service_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::DisableServiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::DisableServiceRequest, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::DisableServiceRequest, _impl_.disable_dependent_services_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::DisableServiceRequest, _impl_.check_if_service_has_usage_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::DisableServiceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::DisableServiceResponse, _impl_.service_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::GetServiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::GetServiceRequest, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::ListServicesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::ListServicesRequest, _impl_.parent_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::ListServicesRequest, _impl_.page_size_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::ListServicesRequest, _impl_.page_token_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::ListServicesRequest, _impl_.filter_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::ListServicesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::ListServicesResponse, _impl_.services_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::ListServicesResponse, _impl_.next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::BatchEnableServicesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::BatchEnableServicesRequest, _impl_.parent_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::BatchEnableServicesRequest, _impl_.service_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::BatchEnableServicesResponse_EnableFailure, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::BatchEnableServicesResponse_EnableFailure, _impl_.service_id_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::BatchEnableServicesResponse_EnableFailure, _impl_.error_message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::BatchEnableServicesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::BatchEnableServicesResponse, _impl_.services_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::BatchEnableServicesResponse, _impl_.failures_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::BatchGetServicesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::BatchGetServicesRequest, _impl_.parent_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::BatchGetServicesRequest, _impl_.names_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::BatchGetServicesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::BatchGetServicesResponse, _impl_.services_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::google::api::serviceusage::v1::EnableServiceRequest)},
  { 7, -1, -1, sizeof(::google::api::serviceusage::v1::EnableServiceResponse)},
  { 14, -1, -1, sizeof(::google::api::serviceusage::v1::DisableServiceRequest)},
  { 23, -1, -1, sizeof(::google::api::serviceusage::v1::DisableServiceResponse)},
  { 30, -1, -1, sizeof(::google::api::serviceusage::v1::GetServiceRequest)},
  { 37, -1, -1, sizeof(::google::api::serviceusage::v1::ListServicesRequest)},
  { 47, -1, -1, sizeof(::google::api::serviceusage::v1::ListServicesResponse)},
  { 55, -1, -1, sizeof(::google::api::serviceusage::v1::BatchEnableServicesRequest)},
  { 63, -1, -1, sizeof(::google::api::serviceusage::v1::BatchEnableServicesResponse_EnableFailure)},
  { 71, -1, -1, sizeof(::google::api::serviceusage::v1::BatchEnableServicesResponse)},
  { 79, -1, -1, sizeof(::google::api::serviceusage::v1::BatchGetServicesRequest)},
  { 87, -1, -1, sizeof(::google::api::serviceusage::v1::BatchGetServicesResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::google::api::serviceusage::v1::_EnableServiceRequest_default_instance_._instance,
  &::google::api::serviceusage::v1::_EnableServiceResponse_default_instance_._instance,
  &::google::api::serviceusage::v1::_DisableServiceRequest_default_instance_._instance,
  &::google::api::serviceusage::v1::_DisableServiceResponse_default_instance_._instance,
  &::google::api::serviceusage::v1::_GetServiceRequest_default_instance_._instance,
  &::google::api::serviceusage::v1::_ListServicesRequest_default_instance_._instance,
  &::google::api::serviceusage::v1::_ListServicesResponse_default_instance_._instance,
  &::google::api::serviceusage::v1::_BatchEnableServicesRequest_default_instance_._instance,
  &::google::api::serviceusage::v1::_BatchEnableServicesResponse_EnableFailure_default_instance_._instance,
  &::google::api::serviceusage::v1::_BatchEnableServicesResponse_default_instance_._instance,
  &::google::api::serviceusage::v1::_BatchGetServicesRequest_default_instance_._instance,
  &::google::api::serviceusage::v1::_BatchGetServicesResponse_default_instance_._instance,
};

const char descriptor_table_protodef_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n-google/api/serviceusage/v1/serviceusag"
  "e.proto\022\032google.api.serviceusage.v1\032\034goo"
  "gle/api/annotations.proto\032*google/api/se"
  "rviceusage/v1/resources.proto\032#google/lo"
  "ngrunning/operations.proto\032\027google/api/c"
  "lient.proto\"$\n\024EnableServiceRequest\022\014\n\004n"
  "ame\030\001 \001(\t\"M\n\025EnableServiceResponse\0224\n\007se"
  "rvice\030\001 \001(\0132#.google.api.serviceusage.v1"
  ".Service\"\222\002\n\025DisableServiceRequest\022\014\n\004na"
  "me\030\001 \001(\t\022\"\n\032disable_dependent_services\030\002"
  " \001(\010\022l\n\032check_if_service_has_usage\030\003 \001(\016"
  "2H.google.api.serviceusage.v1.DisableSer"
  "viceRequest.CheckIfServiceHasUsage\"Y\n\026Ch"
  "eckIfServiceHasUsage\022*\n&CHECK_IF_SERVICE"
  "_HAS_USAGE_UNSPECIFIED\020\000\022\010\n\004SKIP\020\001\022\t\n\005CH"
  "ECK\020\002\"N\n\026DisableServiceResponse\0224\n\007servi"
  "ce\030\001 \001(\0132#.google.api.serviceusage.v1.Se"
  "rvice\"!\n\021GetServiceRequest\022\014\n\004name\030\001 \001(\t"
  "\"\\\n\023ListServicesRequest\022\016\n\006parent\030\001 \001(\t\022"
  "\021\n\tpage_size\030\002 \001(\005\022\022\n\npage_token\030\003 \001(\t\022\016"
  "\n\006filter\030\004 \001(\t\"f\n\024ListServicesResponse\0225"
  "\n\010services\030\001 \003(\0132#.google.api.serviceusa"
  "ge.v1.Service\022\027\n\017next_page_token\030\002 \001(\t\"A"
  "\n\032BatchEnableServicesRequest\022\016\n\006parent\030\001"
  " \001(\t\022\023\n\013service_ids\030\002 \003(\t\"\351\001\n\033BatchEnabl"
  "eServicesResponse\0225\n\010services\030\001 \003(\0132#.go"
  "ogle.api.serviceusage.v1.Service\022W\n\010fail"
  "ures\030\002 \003(\0132E.google.api.serviceusage.v1."
  "BatchEnableServicesResponse.EnableFailur"
  "e\032:\n\rEnableFailure\022\022\n\nservice_id\030\001 \001(\t\022\025"
  "\n\rerror_message\030\002 \001(\t\"8\n\027BatchGetService"
  "sRequest\022\016\n\006parent\030\001 \001(\t\022\r\n\005names\030\002 \003(\t\""
  "Q\n\030BatchGetServicesResponse\0225\n\010services\030"
  "\001 \003(\0132#.google.api.serviceusage.v1.Servi"
  "ce2\350\t\n\014ServiceUsage\022\272\001\n\rEnableService\0220."
  "google.api.serviceusage.v1.EnableService"
  "Request\032\035.google.longrunning.Operation\"X"
  "\202\323\344\223\002%\" /v1/{name=*/*/services/*}:enable"
  ":\001*\312A*\n\025EnableServiceResponse\022\021Operation"
  "Metadata\022\276\001\n\016DisableService\0221.google.api"
  ".serviceusage.v1.DisableServiceRequest\032\035"
  ".google.longrunning.Operation\"Z\202\323\344\223\002&\"!/"
  "v1/{name=*/*/services/*}:disable:\001*\312A+\n\026"
  "DisableServiceResponse\022\021OperationMetadat"
  "a\022\203\001\n\nGetService\022-.google.api.serviceusa"
  "ge.v1.GetServiceRequest\032#.google.api.ser"
  "viceusage.v1.Service\"!\202\323\344\223\002\033\022\031/v1/{name="
  "*/*/services/*}\022\224\001\n\014ListServices\022/.googl"
  "e.api.serviceusage.v1.ListServicesReques"
  "t\0320.google.api.serviceusage.v1.ListServi"
  "cesResponse\"!\202\323\344\223\002\033\022\031/v1/{parent=*/*}/se"
  "rvices\022\321\001\n\023BatchEnableServices\0226.google."
  "api.serviceusage.v1.BatchEnableServicesR"
  "equest\032\035.google.longrunning.Operation\"c\202"
  "\323\344\223\002*\"%/v1/{parent=*/*}/services:batchEn"
  "able:\001*\312A0\n\033BatchEnableServicesResponse\022"
  "\021OperationMetadata\022\251\001\n\020BatchGetServices\022"
  "3.google.api.serviceusage.v1.BatchGetSer"
  "vicesRequest\0324.google.api.serviceusage.v"
  "1.BatchGetServicesResponse\"*\202\323\344\223\002$\022\"/v1/"
  "{parent=*/*}/services:batchGet\032\274\001\312A\033serv"
  "iceusage.googleapis.com\322A\232\001https://www.g"
  "oogleapis.com/auth/cloud-platform,https:"
  "//www.googleapis.com/auth/cloud-platform"
  ".read-only,https://www.googleapis.com/au"
  "th/service.managementB\335\001\n\036com.google.api"
  ".serviceusage.v1B\021ServiceUsageProtoP\001ZFg"
  "oogle.golang.org/genproto/googleapis/api"
  "/serviceusage/v1;serviceusage\252\002\034Google.C"
  "loud.ServiceUsage.V1\312\002\034Google\\Cloud\\Serv"
  "iceUsage\\V1\352\002\037Google::Cloud::ServiceUsag"
  "e::V1b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto_deps[4] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_google_2fapi_2fclient_2eproto,
  &::descriptor_table_google_2fapi_2fserviceusage_2fv1_2fresources_2eproto,
  &::descriptor_table_google_2flongrunning_2foperations_2eproto,
};
static ::_pbi::once_flag descriptor_table_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto = {
    false, false, 2853, descriptor_table_protodef_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto,
    "google/api/serviceusage/v1/serviceusage.proto",
    &descriptor_table_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto_once, descriptor_table_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto_deps, 4, 12,
    schemas, file_default_instances, TableStruct_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto::offsets,
    file_level_metadata_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto, file_level_enum_descriptors_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto,
    file_level_service_descriptors_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto_getter() {
  return &descriptor_table_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto(&descriptor_table_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto);
namespace google {
namespace api {
namespace serviceusage {
namespace v1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DisableServiceRequest_CheckIfServiceHasUsage_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto);
  return file_level_enum_descriptors_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto[0];
}
bool DisableServiceRequest_CheckIfServiceHasUsage_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr DisableServiceRequest_CheckIfServiceHasUsage DisableServiceRequest::CHECK_IF_SERVICE_HAS_USAGE_UNSPECIFIED;
constexpr DisableServiceRequest_CheckIfServiceHasUsage DisableServiceRequest::SKIP;
constexpr DisableServiceRequest_CheckIfServiceHasUsage DisableServiceRequest::CHECK;
constexpr DisableServiceRequest_CheckIfServiceHasUsage DisableServiceRequest::CheckIfServiceHasUsage_MIN;
constexpr DisableServiceRequest_CheckIfServiceHasUsage DisableServiceRequest::CheckIfServiceHasUsage_MAX;
constexpr int DisableServiceRequest::CheckIfServiceHasUsage_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class EnableServiceRequest::_Internal {
 public:
};

EnableServiceRequest::EnableServiceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.serviceusage.v1.EnableServiceRequest)
}
EnableServiceRequest::EnableServiceRequest(const EnableServiceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EnableServiceRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.serviceusage.v1.EnableServiceRequest)
}

inline void EnableServiceRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

EnableServiceRequest::~EnableServiceRequest() {
  // @@protoc_insertion_point(destructor:google.api.serviceusage.v1.EnableServiceRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EnableServiceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void EnableServiceRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EnableServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.serviceusage.v1.EnableServiceRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EnableServiceRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.serviceusage.v1.EnableServiceRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EnableServiceRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.serviceusage.v1.EnableServiceRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.serviceusage.v1.EnableServiceRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.serviceusage.v1.EnableServiceRequest)
  return target;
}

size_t EnableServiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.serviceusage.v1.EnableServiceRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EnableServiceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EnableServiceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EnableServiceRequest::GetClassData() const { return &_class_data_; }


void EnableServiceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EnableServiceRequest*>(&to_msg);
  auto& from = static_cast<const EnableServiceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.serviceusage.v1.EnableServiceRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EnableServiceRequest::CopyFrom(const EnableServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.serviceusage.v1.EnableServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableServiceRequest::IsInitialized() const {
  return true;
}

void EnableServiceRequest::InternalSwap(EnableServiceRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata EnableServiceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto_getter, &descriptor_table_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto_once,
      file_level_metadata_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto[0]);
}

// ===================================================================

class EnableServiceResponse::_Internal {
 public:
  static const ::google::api::serviceusage::v1::Service& service(const EnableServiceResponse* msg);
};

const ::google::api::serviceusage::v1::Service&
EnableServiceResponse::_Internal::service(const EnableServiceResponse* msg) {
  return *msg->_impl_.service_;
}
void EnableServiceResponse::clear_service() {
  if (GetArenaForAllocation() == nullptr && _impl_.service_ != nullptr) {
    delete _impl_.service_;
  }
  _impl_.service_ = nullptr;
}
EnableServiceResponse::EnableServiceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.serviceusage.v1.EnableServiceResponse)
}
EnableServiceResponse::EnableServiceResponse(const EnableServiceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EnableServiceResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.service_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_service()) {
    _this->_impl_.service_ = new ::google::api::serviceusage::v1::Service(*from._impl_.service_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.serviceusage.v1.EnableServiceResponse)
}

inline void EnableServiceResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.service_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

EnableServiceResponse::~EnableServiceResponse() {
  // @@protoc_insertion_point(destructor:google.api.serviceusage.v1.EnableServiceResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EnableServiceResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.service_;
}

void EnableServiceResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EnableServiceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.serviceusage.v1.EnableServiceResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.service_ != nullptr) {
    delete _impl_.service_;
  }
  _impl_.service_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EnableServiceResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.api.serviceusage.v1.Service service = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_service(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EnableServiceResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.serviceusage.v1.EnableServiceResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.serviceusage.v1.Service service = 1;
  if (this->_internal_has_service()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::service(this),
        _Internal::service(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.serviceusage.v1.EnableServiceResponse)
  return target;
}

size_t EnableServiceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.serviceusage.v1.EnableServiceResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.api.serviceusage.v1.Service service = 1;
  if (this->_internal_has_service()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.service_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EnableServiceResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EnableServiceResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EnableServiceResponse::GetClassData() const { return &_class_data_; }


void EnableServiceResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EnableServiceResponse*>(&to_msg);
  auto& from = static_cast<const EnableServiceResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.serviceusage.v1.EnableServiceResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_service()) {
    _this->_internal_mutable_service()->::google::api::serviceusage::v1::Service::MergeFrom(
        from._internal_service());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EnableServiceResponse::CopyFrom(const EnableServiceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.serviceusage.v1.EnableServiceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableServiceResponse::IsInitialized() const {
  return true;
}

void EnableServiceResponse::InternalSwap(EnableServiceResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.service_, other->_impl_.service_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EnableServiceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto_getter, &descriptor_table_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto_once,
      file_level_metadata_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto[1]);
}

// ===================================================================

class DisableServiceRequest::_Internal {
 public:
};

DisableServiceRequest::DisableServiceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.serviceusage.v1.DisableServiceRequest)
}
DisableServiceRequest::DisableServiceRequest(const DisableServiceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DisableServiceRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.disable_dependent_services_){}
    , decltype(_impl_.check_if_service_has_usage_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.disable_dependent_services_, &from._impl_.disable_dependent_services_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.check_if_service_has_usage_) -
    reinterpret_cast<char*>(&_impl_.disable_dependent_services_)) + sizeof(_impl_.check_if_service_has_usage_));
  // @@protoc_insertion_point(copy_constructor:google.api.serviceusage.v1.DisableServiceRequest)
}

inline void DisableServiceRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.disable_dependent_services_){false}
    , decltype(_impl_.check_if_service_has_usage_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DisableServiceRequest::~DisableServiceRequest() {
  // @@protoc_insertion_point(destructor:google.api.serviceusage.v1.DisableServiceRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DisableServiceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void DisableServiceRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DisableServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.serviceusage.v1.DisableServiceRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  ::memset(&_impl_.disable_dependent_services_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.check_if_service_has_usage_) -
      reinterpret_cast<char*>(&_impl_.disable_dependent_services_)) + sizeof(_impl_.check_if_service_has_usage_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DisableServiceRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.serviceusage.v1.DisableServiceRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // bool disable_dependent_services = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.disable_dependent_services_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.serviceusage.v1.DisableServiceRequest.CheckIfServiceHasUsage check_if_service_has_usage = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_check_if_service_has_usage(static_cast<::google::api::serviceusage::v1::DisableServiceRequest_CheckIfServiceHasUsage>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DisableServiceRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.serviceusage.v1.DisableServiceRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.serviceusage.v1.DisableServiceRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // bool disable_dependent_services = 2;
  if (this->_internal_disable_dependent_services() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_disable_dependent_services(), target);
  }

  // .google.api.serviceusage.v1.DisableServiceRequest.CheckIfServiceHasUsage check_if_service_has_usage = 3;
  if (this->_internal_check_if_service_has_usage() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_check_if_service_has_usage(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.serviceusage.v1.DisableServiceRequest)
  return target;
}

size_t DisableServiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.serviceusage.v1.DisableServiceRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // bool disable_dependent_services = 2;
  if (this->_internal_disable_dependent_services() != 0) {
    total_size += 1 + 1;
  }

  // .google.api.serviceusage.v1.DisableServiceRequest.CheckIfServiceHasUsage check_if_service_has_usage = 3;
  if (this->_internal_check_if_service_has_usage() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_check_if_service_has_usage());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DisableServiceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DisableServiceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DisableServiceRequest::GetClassData() const { return &_class_data_; }


void DisableServiceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DisableServiceRequest*>(&to_msg);
  auto& from = static_cast<const DisableServiceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.serviceusage.v1.DisableServiceRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_disable_dependent_services() != 0) {
    _this->_internal_set_disable_dependent_services(from._internal_disable_dependent_services());
  }
  if (from._internal_check_if_service_has_usage() != 0) {
    _this->_internal_set_check_if_service_has_usage(from._internal_check_if_service_has_usage());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DisableServiceRequest::CopyFrom(const DisableServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.serviceusage.v1.DisableServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisableServiceRequest::IsInitialized() const {
  return true;
}

void DisableServiceRequest::InternalSwap(DisableServiceRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DisableServiceRequest, _impl_.check_if_service_has_usage_)
      + sizeof(DisableServiceRequest::_impl_.check_if_service_has_usage_)
      - PROTOBUF_FIELD_OFFSET(DisableServiceRequest, _impl_.disable_dependent_services_)>(
          reinterpret_cast<char*>(&_impl_.disable_dependent_services_),
          reinterpret_cast<char*>(&other->_impl_.disable_dependent_services_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DisableServiceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto_getter, &descriptor_table_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto_once,
      file_level_metadata_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto[2]);
}

// ===================================================================

class DisableServiceResponse::_Internal {
 public:
  static const ::google::api::serviceusage::v1::Service& service(const DisableServiceResponse* msg);
};

const ::google::api::serviceusage::v1::Service&
DisableServiceResponse::_Internal::service(const DisableServiceResponse* msg) {
  return *msg->_impl_.service_;
}
void DisableServiceResponse::clear_service() {
  if (GetArenaForAllocation() == nullptr && _impl_.service_ != nullptr) {
    delete _impl_.service_;
  }
  _impl_.service_ = nullptr;
}
DisableServiceResponse::DisableServiceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.serviceusage.v1.DisableServiceResponse)
}
DisableServiceResponse::DisableServiceResponse(const DisableServiceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DisableServiceResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.service_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_service()) {
    _this->_impl_.service_ = new ::google::api::serviceusage::v1::Service(*from._impl_.service_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.serviceusage.v1.DisableServiceResponse)
}

inline void DisableServiceResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.service_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DisableServiceResponse::~DisableServiceResponse() {
  // @@protoc_insertion_point(destructor:google.api.serviceusage.v1.DisableServiceResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DisableServiceResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.service_;
}

void DisableServiceResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DisableServiceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.serviceusage.v1.DisableServiceResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.service_ != nullptr) {
    delete _impl_.service_;
  }
  _impl_.service_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DisableServiceResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.api.serviceusage.v1.Service service = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_service(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DisableServiceResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.serviceusage.v1.DisableServiceResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.serviceusage.v1.Service service = 1;
  if (this->_internal_has_service()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::service(this),
        _Internal::service(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.serviceusage.v1.DisableServiceResponse)
  return target;
}

size_t DisableServiceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.serviceusage.v1.DisableServiceResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.api.serviceusage.v1.Service service = 1;
  if (this->_internal_has_service()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.service_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DisableServiceResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DisableServiceResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DisableServiceResponse::GetClassData() const { return &_class_data_; }


void DisableServiceResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DisableServiceResponse*>(&to_msg);
  auto& from = static_cast<const DisableServiceResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.serviceusage.v1.DisableServiceResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_service()) {
    _this->_internal_mutable_service()->::google::api::serviceusage::v1::Service::MergeFrom(
        from._internal_service());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DisableServiceResponse::CopyFrom(const DisableServiceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.serviceusage.v1.DisableServiceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisableServiceResponse::IsInitialized() const {
  return true;
}

void DisableServiceResponse::InternalSwap(DisableServiceResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.service_, other->_impl_.service_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DisableServiceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto_getter, &descriptor_table_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto_once,
      file_level_metadata_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto[3]);
}

// ===================================================================

class GetServiceRequest::_Internal {
 public:
};

GetServiceRequest::GetServiceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.serviceusage.v1.GetServiceRequest)
}
GetServiceRequest::GetServiceRequest(const GetServiceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetServiceRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.serviceusage.v1.GetServiceRequest)
}

inline void GetServiceRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetServiceRequest::~GetServiceRequest() {
  // @@protoc_insertion_point(destructor:google.api.serviceusage.v1.GetServiceRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetServiceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void GetServiceRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.serviceusage.v1.GetServiceRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetServiceRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.serviceusage.v1.GetServiceRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetServiceRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.serviceusage.v1.GetServiceRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.serviceusage.v1.GetServiceRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.serviceusage.v1.GetServiceRequest)
  return target;
}

size_t GetServiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.serviceusage.v1.GetServiceRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetServiceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetServiceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetServiceRequest::GetClassData() const { return &_class_data_; }


void GetServiceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetServiceRequest*>(&to_msg);
  auto& from = static_cast<const GetServiceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.serviceusage.v1.GetServiceRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetServiceRequest::CopyFrom(const GetServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.serviceusage.v1.GetServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetServiceRequest::IsInitialized() const {
  return true;
}

void GetServiceRequest::InternalSwap(GetServiceRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetServiceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto_getter, &descriptor_table_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto_once,
      file_level_metadata_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto[4]);
}

// ===================================================================

class ListServicesRequest::_Internal {
 public:
};

ListServicesRequest::ListServicesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.serviceusage.v1.ListServicesRequest)
}
ListServicesRequest::ListServicesRequest(const ListServicesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListServicesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.parent_){}
    , decltype(_impl_.page_token_){}
    , decltype(_impl_.filter_){}
    , decltype(_impl_.page_size_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.parent_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    _this->_impl_.parent_.Set(from._internal_parent(), 
      _this->GetArenaForAllocation());
  }
  _impl_.page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_page_token().empty()) {
    _this->_impl_.page_token_.Set(from._internal_page_token(), 
      _this->GetArenaForAllocation());
  }
  _impl_.filter_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.filter_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_filter().empty()) {
    _this->_impl_.filter_.Set(from._internal_filter(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.page_size_ = from._impl_.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.api.serviceusage.v1.ListServicesRequest)
}

inline void ListServicesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.parent_){}
    , decltype(_impl_.page_token_){}
    , decltype(_impl_.filter_){}
    , decltype(_impl_.page_size_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.parent_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.filter_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.filter_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListServicesRequest::~ListServicesRequest() {
  // @@protoc_insertion_point(destructor:google.api.serviceusage.v1.ListServicesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListServicesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.parent_.Destroy();
  _impl_.page_token_.Destroy();
  _impl_.filter_.Destroy();
}

void ListServicesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListServicesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.serviceusage.v1.ListServicesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parent_.ClearToEmpty();
  _impl_.page_token_.ClearToEmpty();
  _impl_.filter_.ClearToEmpty();
  _impl_.page_size_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListServicesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.serviceusage.v1.ListServicesRequest.parent"));
        } else
          goto handle_unusual;
        continue;
      // int32 page_size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string page_token = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_page_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.serviceusage.v1.ListServicesRequest.page_token"));
        } else
          goto handle_unusual;
        continue;
      // string filter = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_filter();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.serviceusage.v1.ListServicesRequest.filter"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListServicesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.serviceusage.v1.ListServicesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.serviceusage.v1.ListServicesRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_page_size(), target);
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.serviceusage.v1.ListServicesRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_page_token(), target);
  }

  // string filter = 4;
  if (!this->_internal_filter().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_filter().data(), static_cast<int>(this->_internal_filter().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.serviceusage.v1.ListServicesRequest.filter");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_filter(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.serviceusage.v1.ListServicesRequest)
  return target;
}

size_t ListServicesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.serviceusage.v1.ListServicesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1;
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // string filter = 4;
  if (!this->_internal_filter().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_filter());
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_page_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListServicesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListServicesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListServicesRequest::GetClassData() const { return &_class_data_; }


void ListServicesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListServicesRequest*>(&to_msg);
  auto& from = static_cast<const ListServicesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.serviceusage.v1.ListServicesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _this->_internal_set_parent(from._internal_parent());
  }
  if (!from._internal_page_token().empty()) {
    _this->_internal_set_page_token(from._internal_page_token());
  }
  if (!from._internal_filter().empty()) {
    _this->_internal_set_filter(from._internal_filter());
  }
  if (from._internal_page_size() != 0) {
    _this->_internal_set_page_size(from._internal_page_size());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListServicesRequest::CopyFrom(const ListServicesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.serviceusage.v1.ListServicesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListServicesRequest::IsInitialized() const {
  return true;
}

void ListServicesRequest::InternalSwap(ListServicesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.parent_, lhs_arena,
      &other->_impl_.parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.page_token_, lhs_arena,
      &other->_impl_.page_token_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.filter_, lhs_arena,
      &other->_impl_.filter_, rhs_arena
  );
  swap(_impl_.page_size_, other->_impl_.page_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListServicesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto_getter, &descriptor_table_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto_once,
      file_level_metadata_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto[5]);
}

// ===================================================================

class ListServicesResponse::_Internal {
 public:
};

void ListServicesResponse::clear_services() {
  _impl_.services_.Clear();
}
ListServicesResponse::ListServicesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.serviceusage.v1.ListServicesResponse)
}
ListServicesResponse::ListServicesResponse(const ListServicesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListServicesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.services_){from._impl_.services_}
    , decltype(_impl_.next_page_token_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.next_page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_next_page_token().empty()) {
    _this->_impl_.next_page_token_.Set(from._internal_next_page_token(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.serviceusage.v1.ListServicesResponse)
}

inline void ListServicesResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.services_){arena}
    , decltype(_impl_.next_page_token_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.next_page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListServicesResponse::~ListServicesResponse() {
  // @@protoc_insertion_point(destructor:google.api.serviceusage.v1.ListServicesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListServicesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.services_.~RepeatedPtrField();
  _impl_.next_page_token_.Destroy();
}

void ListServicesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListServicesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.serviceusage.v1.ListServicesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.services_.Clear();
  _impl_.next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListServicesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .google.api.serviceusage.v1.Service services = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_services(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.serviceusage.v1.ListServicesResponse.next_page_token"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListServicesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.serviceusage.v1.ListServicesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.serviceusage.v1.Service services = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_services_size()); i < n; i++) {
    const auto& repfield = this->_internal_services(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.serviceusage.v1.ListServicesResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.serviceusage.v1.ListServicesResponse)
  return target;
}

size_t ListServicesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.serviceusage.v1.ListServicesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.serviceusage.v1.Service services = 1;
  total_size += 1UL * this->_internal_services_size();
  for (const auto& msg : this->_impl_.services_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListServicesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListServicesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListServicesResponse::GetClassData() const { return &_class_data_; }


void ListServicesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListServicesResponse*>(&to_msg);
  auto& from = static_cast<const ListServicesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.serviceusage.v1.ListServicesResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.services_.MergeFrom(from._impl_.services_);
  if (!from._internal_next_page_token().empty()) {
    _this->_internal_set_next_page_token(from._internal_next_page_token());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListServicesResponse::CopyFrom(const ListServicesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.serviceusage.v1.ListServicesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListServicesResponse::IsInitialized() const {
  return true;
}

void ListServicesResponse::InternalSwap(ListServicesResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.services_.InternalSwap(&other->_impl_.services_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.next_page_token_, lhs_arena,
      &other->_impl_.next_page_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListServicesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto_getter, &descriptor_table_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto_once,
      file_level_metadata_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto[6]);
}

// ===================================================================

class BatchEnableServicesRequest::_Internal {
 public:
};

BatchEnableServicesRequest::BatchEnableServicesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.serviceusage.v1.BatchEnableServicesRequest)
}
BatchEnableServicesRequest::BatchEnableServicesRequest(const BatchEnableServicesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BatchEnableServicesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.service_ids_){from._impl_.service_ids_}
    , decltype(_impl_.parent_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.parent_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    _this->_impl_.parent_.Set(from._internal_parent(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.serviceusage.v1.BatchEnableServicesRequest)
}

inline void BatchEnableServicesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.service_ids_){arena}
    , decltype(_impl_.parent_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.parent_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

BatchEnableServicesRequest::~BatchEnableServicesRequest() {
  // @@protoc_insertion_point(destructor:google.api.serviceusage.v1.BatchEnableServicesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BatchEnableServicesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.service_ids_.~RepeatedPtrField();
  _impl_.parent_.Destroy();
}

void BatchEnableServicesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BatchEnableServicesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.serviceusage.v1.BatchEnableServicesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.service_ids_.Clear();
  _impl_.parent_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BatchEnableServicesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.serviceusage.v1.BatchEnableServicesRequest.parent"));
        } else
          goto handle_unusual;
        continue;
      // repeated string service_ids = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_service_ids();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "google.api.serviceusage.v1.BatchEnableServicesRequest.service_ids"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BatchEnableServicesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.serviceusage.v1.BatchEnableServicesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.serviceusage.v1.BatchEnableServicesRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // repeated string service_ids = 2;
  for (int i = 0, n = this->_internal_service_ids_size(); i < n; i++) {
    const auto& s = this->_internal_service_ids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.serviceusage.v1.BatchEnableServicesRequest.service_ids");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.serviceusage.v1.BatchEnableServicesRequest)
  return target;
}

size_t BatchEnableServicesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.serviceusage.v1.BatchEnableServicesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string service_ids = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.service_ids_.size());
  for (int i = 0, n = _impl_.service_ids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.service_ids_.Get(i));
  }

  // string parent = 1;
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BatchEnableServicesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BatchEnableServicesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BatchEnableServicesRequest::GetClassData() const { return &_class_data_; }


void BatchEnableServicesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BatchEnableServicesRequest*>(&to_msg);
  auto& from = static_cast<const BatchEnableServicesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.serviceusage.v1.BatchEnableServicesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.service_ids_.MergeFrom(from._impl_.service_ids_);
  if (!from._internal_parent().empty()) {
    _this->_internal_set_parent(from._internal_parent());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BatchEnableServicesRequest::CopyFrom(const BatchEnableServicesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.serviceusage.v1.BatchEnableServicesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchEnableServicesRequest::IsInitialized() const {
  return true;
}

void BatchEnableServicesRequest::InternalSwap(BatchEnableServicesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.service_ids_.InternalSwap(&other->_impl_.service_ids_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.parent_, lhs_arena,
      &other->_impl_.parent_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata BatchEnableServicesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto_getter, &descriptor_table_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto_once,
      file_level_metadata_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto[7]);
}

// ===================================================================

class BatchEnableServicesResponse_EnableFailure::_Internal {
 public:
};

BatchEnableServicesResponse_EnableFailure::BatchEnableServicesResponse_EnableFailure(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.serviceusage.v1.BatchEnableServicesResponse.EnableFailure)
}
BatchEnableServicesResponse_EnableFailure::BatchEnableServicesResponse_EnableFailure(const BatchEnableServicesResponse_EnableFailure& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BatchEnableServicesResponse_EnableFailure* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.service_id_){}
    , decltype(_impl_.error_message_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.service_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_service_id().empty()) {
    _this->_impl_.service_id_.Set(from._internal_service_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error_message().empty()) {
    _this->_impl_.error_message_.Set(from._internal_error_message(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.serviceusage.v1.BatchEnableServicesResponse.EnableFailure)
}

inline void BatchEnableServicesResponse_EnableFailure::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.service_id_){}
    , decltype(_impl_.error_message_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.service_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

BatchEnableServicesResponse_EnableFailure::~BatchEnableServicesResponse_EnableFailure() {
  // @@protoc_insertion_point(destructor:google.api.serviceusage.v1.BatchEnableServicesResponse.EnableFailure)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BatchEnableServicesResponse_EnableFailure::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.service_id_.Destroy();
  _impl_.error_message_.Destroy();
}

void BatchEnableServicesResponse_EnableFailure::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BatchEnableServicesResponse_EnableFailure::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.serviceusage.v1.BatchEnableServicesResponse.EnableFailure)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.service_id_.ClearToEmpty();
  _impl_.error_message_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BatchEnableServicesResponse_EnableFailure::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string service_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_service_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.serviceusage.v1.BatchEnableServicesResponse.EnableFailure.service_id"));
        } else
          goto handle_unusual;
        continue;
      // string error_message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_error_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.serviceusage.v1.BatchEnableServicesResponse.EnableFailure.error_message"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BatchEnableServicesResponse_EnableFailure::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.serviceusage.v1.BatchEnableServicesResponse.EnableFailure)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_id = 1;
  if (!this->_internal_service_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_id().data(), static_cast<int>(this->_internal_service_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.serviceusage.v1.BatchEnableServicesResponse.EnableFailure.service_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_service_id(), target);
  }

  // string error_message = 2;
  if (!this->_internal_error_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_message().data(), static_cast<int>(this->_internal_error_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.serviceusage.v1.BatchEnableServicesResponse.EnableFailure.error_message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.serviceusage.v1.BatchEnableServicesResponse.EnableFailure)
  return target;
}

size_t BatchEnableServicesResponse_EnableFailure::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.serviceusage.v1.BatchEnableServicesResponse.EnableFailure)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string service_id = 1;
  if (!this->_internal_service_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_id());
  }

  // string error_message = 2;
  if (!this->_internal_error_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_message());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BatchEnableServicesResponse_EnableFailure::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BatchEnableServicesResponse_EnableFailure::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BatchEnableServicesResponse_EnableFailure::GetClassData() const { return &_class_data_; }


void BatchEnableServicesResponse_EnableFailure::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BatchEnableServicesResponse_EnableFailure*>(&to_msg);
  auto& from = static_cast<const BatchEnableServicesResponse_EnableFailure&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.serviceusage.v1.BatchEnableServicesResponse.EnableFailure)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_service_id().empty()) {
    _this->_internal_set_service_id(from._internal_service_id());
  }
  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BatchEnableServicesResponse_EnableFailure::CopyFrom(const BatchEnableServicesResponse_EnableFailure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.serviceusage.v1.BatchEnableServicesResponse.EnableFailure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchEnableServicesResponse_EnableFailure::IsInitialized() const {
  return true;
}

void BatchEnableServicesResponse_EnableFailure::InternalSwap(BatchEnableServicesResponse_EnableFailure* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.service_id_, lhs_arena,
      &other->_impl_.service_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_message_, lhs_arena,
      &other->_impl_.error_message_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata BatchEnableServicesResponse_EnableFailure::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto_getter, &descriptor_table_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto_once,
      file_level_metadata_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto[8]);
}

// ===================================================================

class BatchEnableServicesResponse::_Internal {
 public:
};

void BatchEnableServicesResponse::clear_services() {
  _impl_.services_.Clear();
}
BatchEnableServicesResponse::BatchEnableServicesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.serviceusage.v1.BatchEnableServicesResponse)
}
BatchEnableServicesResponse::BatchEnableServicesResponse(const BatchEnableServicesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BatchEnableServicesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.services_){from._impl_.services_}
    , decltype(_impl_.failures_){from._impl_.failures_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.api.serviceusage.v1.BatchEnableServicesResponse)
}

inline void BatchEnableServicesResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.services_){arena}
    , decltype(_impl_.failures_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

BatchEnableServicesResponse::~BatchEnableServicesResponse() {
  // @@protoc_insertion_point(destructor:google.api.serviceusage.v1.BatchEnableServicesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BatchEnableServicesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.services_.~RepeatedPtrField();
  _impl_.failures_.~RepeatedPtrField();
}

void BatchEnableServicesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BatchEnableServicesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.serviceusage.v1.BatchEnableServicesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.services_.Clear();
  _impl_.failures_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BatchEnableServicesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .google.api.serviceusage.v1.Service services = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_services(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .google.api.serviceusage.v1.BatchEnableServicesResponse.EnableFailure failures = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_failures(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BatchEnableServicesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.serviceusage.v1.BatchEnableServicesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.serviceusage.v1.Service services = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_services_size()); i < n; i++) {
    const auto& repfield = this->_internal_services(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .google.api.serviceusage.v1.BatchEnableServicesResponse.EnableFailure failures = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_failures_size()); i < n; i++) {
    const auto& repfield = this->_internal_failures(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.serviceusage.v1.BatchEnableServicesResponse)
  return target;
}

size_t BatchEnableServicesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.serviceusage.v1.BatchEnableServicesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.serviceusage.v1.Service services = 1;
  total_size += 1UL * this->_internal_services_size();
  for (const auto& msg : this->_impl_.services_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .google.api.serviceusage.v1.BatchEnableServicesResponse.EnableFailure failures = 2;
  total_size += 1UL * this->_internal_failures_size();
  for (const auto& msg : this->_impl_.failures_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BatchEnableServicesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BatchEnableServicesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BatchEnableServicesResponse::GetClassData() const { return &_class_data_; }


void BatchEnableServicesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BatchEnableServicesResponse*>(&to_msg);
  auto& from = static_cast<const BatchEnableServicesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.serviceusage.v1.BatchEnableServicesResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.services_.MergeFrom(from._impl_.services_);
  _this->_impl_.failures_.MergeFrom(from._impl_.failures_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BatchEnableServicesResponse::CopyFrom(const BatchEnableServicesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.serviceusage.v1.BatchEnableServicesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchEnableServicesResponse::IsInitialized() const {
  return true;
}

void BatchEnableServicesResponse::InternalSwap(BatchEnableServicesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.services_.InternalSwap(&other->_impl_.services_);
  _impl_.failures_.InternalSwap(&other->_impl_.failures_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BatchEnableServicesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto_getter, &descriptor_table_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto_once,
      file_level_metadata_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto[9]);
}

// ===================================================================

class BatchGetServicesRequest::_Internal {
 public:
};

BatchGetServicesRequest::BatchGetServicesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.serviceusage.v1.BatchGetServicesRequest)
}
BatchGetServicesRequest::BatchGetServicesRequest(const BatchGetServicesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BatchGetServicesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.names_){from._impl_.names_}
    , decltype(_impl_.parent_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.parent_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    _this->_impl_.parent_.Set(from._internal_parent(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.serviceusage.v1.BatchGetServicesRequest)
}

inline void BatchGetServicesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.names_){arena}
    , decltype(_impl_.parent_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.parent_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

BatchGetServicesRequest::~BatchGetServicesRequest() {
  // @@protoc_insertion_point(destructor:google.api.serviceusage.v1.BatchGetServicesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BatchGetServicesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.names_.~RepeatedPtrField();
  _impl_.parent_.Destroy();
}

void BatchGetServicesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BatchGetServicesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.serviceusage.v1.BatchGetServicesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.names_.Clear();
  _impl_.parent_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BatchGetServicesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.serviceusage.v1.BatchGetServicesRequest.parent"));
        } else
          goto handle_unusual;
        continue;
      // repeated string names = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_names();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "google.api.serviceusage.v1.BatchGetServicesRequest.names"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BatchGetServicesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.serviceusage.v1.BatchGetServicesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.serviceusage.v1.BatchGetServicesRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // repeated string names = 2;
  for (int i = 0, n = this->_internal_names_size(); i < n; i++) {
    const auto& s = this->_internal_names(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.serviceusage.v1.BatchGetServicesRequest.names");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.serviceusage.v1.BatchGetServicesRequest)
  return target;
}

size_t BatchGetServicesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.serviceusage.v1.BatchGetServicesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string names = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.names_.size());
  for (int i = 0, n = _impl_.names_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.names_.Get(i));
  }

  // string parent = 1;
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BatchGetServicesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BatchGetServicesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BatchGetServicesRequest::GetClassData() const { return &_class_data_; }


void BatchGetServicesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BatchGetServicesRequest*>(&to_msg);
  auto& from = static_cast<const BatchGetServicesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.serviceusage.v1.BatchGetServicesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.names_.MergeFrom(from._impl_.names_);
  if (!from._internal_parent().empty()) {
    _this->_internal_set_parent(from._internal_parent());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BatchGetServicesRequest::CopyFrom(const BatchGetServicesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.serviceusage.v1.BatchGetServicesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchGetServicesRequest::IsInitialized() const {
  return true;
}

void BatchGetServicesRequest::InternalSwap(BatchGetServicesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.names_.InternalSwap(&other->_impl_.names_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.parent_, lhs_arena,
      &other->_impl_.parent_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata BatchGetServicesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto_getter, &descriptor_table_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto_once,
      file_level_metadata_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto[10]);
}

// ===================================================================

class BatchGetServicesResponse::_Internal {
 public:
};

void BatchGetServicesResponse::clear_services() {
  _impl_.services_.Clear();
}
BatchGetServicesResponse::BatchGetServicesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.serviceusage.v1.BatchGetServicesResponse)
}
BatchGetServicesResponse::BatchGetServicesResponse(const BatchGetServicesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BatchGetServicesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.services_){from._impl_.services_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.api.serviceusage.v1.BatchGetServicesResponse)
}

inline void BatchGetServicesResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.services_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

BatchGetServicesResponse::~BatchGetServicesResponse() {
  // @@protoc_insertion_point(destructor:google.api.serviceusage.v1.BatchGetServicesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BatchGetServicesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.services_.~RepeatedPtrField();
}

void BatchGetServicesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BatchGetServicesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.serviceusage.v1.BatchGetServicesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.services_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BatchGetServicesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .google.api.serviceusage.v1.Service services = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_services(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BatchGetServicesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.serviceusage.v1.BatchGetServicesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.serviceusage.v1.Service services = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_services_size()); i < n; i++) {
    const auto& repfield = this->_internal_services(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.serviceusage.v1.BatchGetServicesResponse)
  return target;
}

size_t BatchGetServicesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.serviceusage.v1.BatchGetServicesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.serviceusage.v1.Service services = 1;
  total_size += 1UL * this->_internal_services_size();
  for (const auto& msg : this->_impl_.services_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BatchGetServicesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BatchGetServicesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BatchGetServicesResponse::GetClassData() const { return &_class_data_; }


void BatchGetServicesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BatchGetServicesResponse*>(&to_msg);
  auto& from = static_cast<const BatchGetServicesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.serviceusage.v1.BatchGetServicesResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.services_.MergeFrom(from._impl_.services_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BatchGetServicesResponse::CopyFrom(const BatchGetServicesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.serviceusage.v1.BatchGetServicesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchGetServicesResponse::IsInitialized() const {
  return true;
}

void BatchGetServicesResponse::InternalSwap(BatchGetServicesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.services_.InternalSwap(&other->_impl_.services_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BatchGetServicesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto_getter, &descriptor_table_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto_once,
      file_level_metadata_google_2fapi_2fserviceusage_2fv1_2fserviceusage_2eproto[11]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace serviceusage
}  // namespace api
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::google::api::serviceusage::v1::EnableServiceRequest*
Arena::CreateMaybeMessage< ::google::api::serviceusage::v1::EnableServiceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::serviceusage::v1::EnableServiceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::serviceusage::v1::EnableServiceResponse*
Arena::CreateMaybeMessage< ::google::api::serviceusage::v1::EnableServiceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::serviceusage::v1::EnableServiceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::serviceusage::v1::DisableServiceRequest*
Arena::CreateMaybeMessage< ::google::api::serviceusage::v1::DisableServiceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::serviceusage::v1::DisableServiceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::serviceusage::v1::DisableServiceResponse*
Arena::CreateMaybeMessage< ::google::api::serviceusage::v1::DisableServiceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::serviceusage::v1::DisableServiceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::serviceusage::v1::GetServiceRequest*
Arena::CreateMaybeMessage< ::google::api::serviceusage::v1::GetServiceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::serviceusage::v1::GetServiceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::serviceusage::v1::ListServicesRequest*
Arena::CreateMaybeMessage< ::google::api::serviceusage::v1::ListServicesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::serviceusage::v1::ListServicesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::serviceusage::v1::ListServicesResponse*
Arena::CreateMaybeMessage< ::google::api::serviceusage::v1::ListServicesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::serviceusage::v1::ListServicesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::serviceusage::v1::BatchEnableServicesRequest*
Arena::CreateMaybeMessage< ::google::api::serviceusage::v1::BatchEnableServicesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::serviceusage::v1::BatchEnableServicesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::serviceusage::v1::BatchEnableServicesResponse_EnableFailure*
Arena::CreateMaybeMessage< ::google::api::serviceusage::v1::BatchEnableServicesResponse_EnableFailure >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::serviceusage::v1::BatchEnableServicesResponse_EnableFailure >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::serviceusage::v1::BatchEnableServicesResponse*
Arena::CreateMaybeMessage< ::google::api::serviceusage::v1::BatchEnableServicesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::serviceusage::v1::BatchEnableServicesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::serviceusage::v1::BatchGetServicesRequest*
Arena::CreateMaybeMessage< ::google::api::serviceusage::v1::BatchGetServicesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::serviceusage::v1::BatchGetServicesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::serviceusage::v1::BatchGetServicesResponse*
Arena::CreateMaybeMessage< ::google::api::serviceusage::v1::BatchGetServicesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::serviceusage::v1::BatchGetServicesResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

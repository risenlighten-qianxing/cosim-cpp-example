// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/apikeys/v2/resources.proto

#include "google/api/apikeys/v2/resources.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace google {
namespace api {
namespace apikeys {
namespace v2 {
PROTOBUF_CONSTEXPR Key_AnnotationsEntry_DoNotUse::Key_AnnotationsEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct Key_AnnotationsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Key_AnnotationsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Key_AnnotationsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Key_AnnotationsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Key_AnnotationsEntry_DoNotUseDefaultTypeInternal _Key_AnnotationsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR Key::Key(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.annotations_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.display_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.key_string_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.uid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.etag_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.create_time_)*/nullptr
  , /*decltype(_impl_.update_time_)*/nullptr
  , /*decltype(_impl_.delete_time_)*/nullptr
  , /*decltype(_impl_.restrictions_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct KeyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR KeyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~KeyDefaultTypeInternal() {}
  union {
    Key _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 KeyDefaultTypeInternal _Key_default_instance_;
PROTOBUF_CONSTEXPR Restrictions::Restrictions(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.api_targets_)*/{}
  , /*decltype(_impl_.client_restrictions_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct RestrictionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RestrictionsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RestrictionsDefaultTypeInternal() {}
  union {
    Restrictions _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RestrictionsDefaultTypeInternal _Restrictions_default_instance_;
PROTOBUF_CONSTEXPR BrowserKeyRestrictions::BrowserKeyRestrictions(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.allowed_referrers_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BrowserKeyRestrictionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BrowserKeyRestrictionsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BrowserKeyRestrictionsDefaultTypeInternal() {}
  union {
    BrowserKeyRestrictions _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BrowserKeyRestrictionsDefaultTypeInternal _BrowserKeyRestrictions_default_instance_;
PROTOBUF_CONSTEXPR ServerKeyRestrictions::ServerKeyRestrictions(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.allowed_ips_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ServerKeyRestrictionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServerKeyRestrictionsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServerKeyRestrictionsDefaultTypeInternal() {}
  union {
    ServerKeyRestrictions _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServerKeyRestrictionsDefaultTypeInternal _ServerKeyRestrictions_default_instance_;
PROTOBUF_CONSTEXPR AndroidKeyRestrictions::AndroidKeyRestrictions(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.allowed_applications_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AndroidKeyRestrictionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AndroidKeyRestrictionsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AndroidKeyRestrictionsDefaultTypeInternal() {}
  union {
    AndroidKeyRestrictions _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AndroidKeyRestrictionsDefaultTypeInternal _AndroidKeyRestrictions_default_instance_;
PROTOBUF_CONSTEXPR AndroidApplication::AndroidApplication(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.sha1_fingerprint_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.package_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AndroidApplicationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AndroidApplicationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AndroidApplicationDefaultTypeInternal() {}
  union {
    AndroidApplication _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AndroidApplicationDefaultTypeInternal _AndroidApplication_default_instance_;
PROTOBUF_CONSTEXPR IosKeyRestrictions::IosKeyRestrictions(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.allowed_bundle_ids_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct IosKeyRestrictionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IosKeyRestrictionsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~IosKeyRestrictionsDefaultTypeInternal() {}
  union {
    IosKeyRestrictions _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IosKeyRestrictionsDefaultTypeInternal _IosKeyRestrictions_default_instance_;
PROTOBUF_CONSTEXPR ApiTarget::ApiTarget(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.methods_)*/{}
  , /*decltype(_impl_.service_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ApiTargetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ApiTargetDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ApiTargetDefaultTypeInternal() {}
  union {
    ApiTarget _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ApiTargetDefaultTypeInternal _ApiTarget_default_instance_;
}  // namespace v2
}  // namespace apikeys
}  // namespace api
}  // namespace google
static ::_pb::Metadata file_level_metadata_google_2fapi_2fapikeys_2fv2_2fresources_2eproto[9];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_google_2fapi_2fapikeys_2fv2_2fresources_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_google_2fapi_2fapikeys_2fv2_2fresources_2eproto = nullptr;

const uint32_t TableStruct_google_2fapi_2fapikeys_2fv2_2fresources_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::Key_AnnotationsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::Key_AnnotationsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::Key_AnnotationsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::Key_AnnotationsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::Key, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::Key, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::Key, _impl_.uid_),
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::Key, _impl_.display_name_),
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::Key, _impl_.key_string_),
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::Key, _impl_.create_time_),
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::Key, _impl_.update_time_),
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::Key, _impl_.delete_time_),
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::Key, _impl_.annotations_),
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::Key, _impl_.restrictions_),
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::Key, _impl_.etag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::Restrictions, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::Restrictions, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::Restrictions, _impl_.api_targets_),
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::Restrictions, _impl_.client_restrictions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::BrowserKeyRestrictions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::BrowserKeyRestrictions, _impl_.allowed_referrers_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::ServerKeyRestrictions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::ServerKeyRestrictions, _impl_.allowed_ips_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::AndroidKeyRestrictions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::AndroidKeyRestrictions, _impl_.allowed_applications_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::AndroidApplication, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::AndroidApplication, _impl_.sha1_fingerprint_),
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::AndroidApplication, _impl_.package_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::IosKeyRestrictions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::IosKeyRestrictions, _impl_.allowed_bundle_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::ApiTarget, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::ApiTarget, _impl_.service_),
  PROTOBUF_FIELD_OFFSET(::google::api::apikeys::v2::ApiTarget, _impl_.methods_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, -1, sizeof(::google::api::apikeys::v2::Key_AnnotationsEntry_DoNotUse)},
  { 10, -1, -1, sizeof(::google::api::apikeys::v2::Key)},
  { 26, -1, -1, sizeof(::google::api::apikeys::v2::Restrictions)},
  { 38, -1, -1, sizeof(::google::api::apikeys::v2::BrowserKeyRestrictions)},
  { 45, -1, -1, sizeof(::google::api::apikeys::v2::ServerKeyRestrictions)},
  { 52, -1, -1, sizeof(::google::api::apikeys::v2::AndroidKeyRestrictions)},
  { 59, -1, -1, sizeof(::google::api::apikeys::v2::AndroidApplication)},
  { 67, -1, -1, sizeof(::google::api::apikeys::v2::IosKeyRestrictions)},
  { 74, -1, -1, sizeof(::google::api::apikeys::v2::ApiTarget)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::google::api::apikeys::v2::_Key_AnnotationsEntry_DoNotUse_default_instance_._instance,
  &::google::api::apikeys::v2::_Key_default_instance_._instance,
  &::google::api::apikeys::v2::_Restrictions_default_instance_._instance,
  &::google::api::apikeys::v2::_BrowserKeyRestrictions_default_instance_._instance,
  &::google::api::apikeys::v2::_ServerKeyRestrictions_default_instance_._instance,
  &::google::api::apikeys::v2::_AndroidKeyRestrictions_default_instance_._instance,
  &::google::api::apikeys::v2::_AndroidApplication_default_instance_._instance,
  &::google::api::apikeys::v2::_IosKeyRestrictions_default_instance_._instance,
  &::google::api::apikeys::v2::_ApiTarget_default_instance_._instance,
};

const char descriptor_table_protodef_google_2fapi_2fapikeys_2fv2_2fresources_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n%google/api/apikeys/v2/resources.proto\022"
  "\025google.api.apikeys.v2\032\037google/api/field"
  "_behavior.proto\032\031google/api/resource.pro"
  "to\032\037google/protobuf/timestamp.proto\"\242\004\n\003"
  "Key\022\021\n\004name\030\001 \001(\tB\003\340A\003\022\020\n\003uid\030\005 \001(\tB\003\340A\003"
  "\022\024\n\014display_name\030\002 \001(\t\022\027\n\nkey_string\030\003 \001"
  "(\tB\003\340A\003\0224\n\013create_time\030\004 \001(\0132\032.google.pr"
  "otobuf.TimestampB\003\340A\003\0224\n\013update_time\030\006 \001"
  "(\0132\032.google.protobuf.TimestampB\003\340A\003\0224\n\013d"
  "elete_time\030\007 \001(\0132\032.google.protobuf.Times"
  "tampB\003\340A\003\022@\n\013annotations\030\010 \003(\0132+.google."
  "api.apikeys.v2.Key.AnnotationsEntry\0229\n\014r"
  "estrictions\030\t \001(\0132#.google.api.apikeys.v"
  "2.Restrictions\022\021\n\004etag\030\013 \001(\tB\003\340A\003\0322\n\020Ann"
  "otationsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001("
  "\t:\0028\001:a\352A^\n\032apikeys.googleapis.com/Key\0222"
  "projects/{project}/locations/{location}/"
  "keys/{key}*\004keys2\003keyR\001\001\"\236\003\n\014Restriction"
  "s\022Q\n\030browser_key_restrictions\030\001 \001(\0132-.go"
  "ogle.api.apikeys.v2.BrowserKeyRestrictio"
  "nsH\000\022O\n\027server_key_restrictions\030\002 \001(\0132,."
  "google.api.apikeys.v2.ServerKeyRestricti"
  "onsH\000\022Q\n\030android_key_restrictions\030\003 \001(\0132"
  "-.google.api.apikeys.v2.AndroidKeyRestri"
  "ctionsH\000\022I\n\024ios_key_restrictions\030\004 \001(\0132)"
  ".google.api.apikeys.v2.IosKeyRestriction"
  "sH\000\0225\n\013api_targets\030\005 \003(\0132 .google.api.ap"
  "ikeys.v2.ApiTargetB\025\n\023client_restriction"
  "s\"3\n\026BrowserKeyRestrictions\022\031\n\021allowed_r"
  "eferrers\030\001 \003(\t\",\n\025ServerKeyRestrictions\022"
  "\023\n\013allowed_ips\030\001 \003(\t\"a\n\026AndroidKeyRestri"
  "ctions\022G\n\024allowed_applications\030\001 \003(\0132).g"
  "oogle.api.apikeys.v2.AndroidApplication\""
  "D\n\022AndroidApplication\022\030\n\020sha1_fingerprin"
  "t\030\001 \001(\t\022\024\n\014package_name\030\002 \001(\t\"0\n\022IosKeyR"
  "estrictions\022\032\n\022allowed_bundle_ids\030\001 \003(\t\""
  "2\n\tApiTarget\022\017\n\007service\030\001 \001(\t\022\024\n\007methods"
  "\030\002 \003(\tB\003\340A\001B\274\001\n\031com.google.api.apikeys.v"
  "2B\016ResourcesProtoP\001Z<google.golang.org/g"
  "enproto/googleapis/api/apikeys/v2;apikey"
  "s\252\002\027Google.Cloud.ApiKeys.V2\312\002\027Google\\Clo"
  "ud\\ApiKeys\\V2\352\002\032Google::Cloud::ApiKeys::"
  "V2b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_google_2fapi_2fapikeys_2fv2_2fresources_2eproto_deps[3] = {
  &::descriptor_table_google_2fapi_2ffield_5fbehavior_2eproto,
  &::descriptor_table_google_2fapi_2fresource_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::_pbi::once_flag descriptor_table_google_2fapi_2fapikeys_2fv2_2fresources_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_google_2fapi_2fapikeys_2fv2_2fresources_2eproto = {
    false, false, 1690, descriptor_table_protodef_google_2fapi_2fapikeys_2fv2_2fresources_2eproto,
    "google/api/apikeys/v2/resources.proto",
    &descriptor_table_google_2fapi_2fapikeys_2fv2_2fresources_2eproto_once, descriptor_table_google_2fapi_2fapikeys_2fv2_2fresources_2eproto_deps, 3, 9,
    schemas, file_default_instances, TableStruct_google_2fapi_2fapikeys_2fv2_2fresources_2eproto::offsets,
    file_level_metadata_google_2fapi_2fapikeys_2fv2_2fresources_2eproto, file_level_enum_descriptors_google_2fapi_2fapikeys_2fv2_2fresources_2eproto,
    file_level_service_descriptors_google_2fapi_2fapikeys_2fv2_2fresources_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_google_2fapi_2fapikeys_2fv2_2fresources_2eproto_getter() {
  return &descriptor_table_google_2fapi_2fapikeys_2fv2_2fresources_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_google_2fapi_2fapikeys_2fv2_2fresources_2eproto(&descriptor_table_google_2fapi_2fapikeys_2fv2_2fresources_2eproto);
namespace google {
namespace api {
namespace apikeys {
namespace v2 {

// ===================================================================

Key_AnnotationsEntry_DoNotUse::Key_AnnotationsEntry_DoNotUse() {}
Key_AnnotationsEntry_DoNotUse::Key_AnnotationsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Key_AnnotationsEntry_DoNotUse::MergeFrom(const Key_AnnotationsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Key_AnnotationsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fapikeys_2fv2_2fresources_2eproto_getter, &descriptor_table_google_2fapi_2fapikeys_2fv2_2fresources_2eproto_once,
      file_level_metadata_google_2fapi_2fapikeys_2fv2_2fresources_2eproto[0]);
}

// ===================================================================

class Key::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& create_time(const Key* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& update_time(const Key* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& delete_time(const Key* msg);
  static const ::google::api::apikeys::v2::Restrictions& restrictions(const Key* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
Key::_Internal::create_time(const Key* msg) {
  return *msg->_impl_.create_time_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
Key::_Internal::update_time(const Key* msg) {
  return *msg->_impl_.update_time_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
Key::_Internal::delete_time(const Key* msg) {
  return *msg->_impl_.delete_time_;
}
const ::google::api::apikeys::v2::Restrictions&
Key::_Internal::restrictions(const Key* msg) {
  return *msg->_impl_.restrictions_;
}
void Key::clear_create_time() {
  if (GetArenaForAllocation() == nullptr && _impl_.create_time_ != nullptr) {
    delete _impl_.create_time_;
  }
  _impl_.create_time_ = nullptr;
}
void Key::clear_update_time() {
  if (GetArenaForAllocation() == nullptr && _impl_.update_time_ != nullptr) {
    delete _impl_.update_time_;
  }
  _impl_.update_time_ = nullptr;
}
void Key::clear_delete_time() {
  if (GetArenaForAllocation() == nullptr && _impl_.delete_time_ != nullptr) {
    delete _impl_.delete_time_;
  }
  _impl_.delete_time_ = nullptr;
}
Key::Key(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &Key::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:google.api.apikeys.v2.Key)
}
Key::Key(const Key& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Key* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.annotations_)*/{}
    , decltype(_impl_.name_){}
    , decltype(_impl_.display_name_){}
    , decltype(_impl_.key_string_){}
    , decltype(_impl_.uid_){}
    , decltype(_impl_.etag_){}
    , decltype(_impl_.create_time_){nullptr}
    , decltype(_impl_.update_time_){nullptr}
    , decltype(_impl_.delete_time_){nullptr}
    , decltype(_impl_.restrictions_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.annotations_.MergeFrom(from._impl_.annotations_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.display_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.display_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_display_name().empty()) {
    _this->_impl_.display_name_.Set(from._internal_display_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.key_string_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_string_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key_string().empty()) {
    _this->_impl_.key_string_.Set(from._internal_key_string(), 
      _this->GetArenaForAllocation());
  }
  _impl_.uid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_uid().empty()) {
    _this->_impl_.uid_.Set(from._internal_uid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.etag_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.etag_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_etag().empty()) {
    _this->_impl_.etag_.Set(from._internal_etag(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_create_time()) {
    _this->_impl_.create_time_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.create_time_);
  }
  if (from._internal_has_update_time()) {
    _this->_impl_.update_time_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.update_time_);
  }
  if (from._internal_has_delete_time()) {
    _this->_impl_.delete_time_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.delete_time_);
  }
  if (from._internal_has_restrictions()) {
    _this->_impl_.restrictions_ = new ::google::api::apikeys::v2::Restrictions(*from._impl_.restrictions_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.apikeys.v2.Key)
}

inline void Key::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.annotations_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.name_){}
    , decltype(_impl_.display_name_){}
    , decltype(_impl_.key_string_){}
    , decltype(_impl_.uid_){}
    , decltype(_impl_.etag_){}
    , decltype(_impl_.create_time_){nullptr}
    , decltype(_impl_.update_time_){nullptr}
    , decltype(_impl_.delete_time_){nullptr}
    , decltype(_impl_.restrictions_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.display_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.display_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.key_string_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_string_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.uid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.etag_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.etag_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Key::~Key() {
  // @@protoc_insertion_point(destructor:google.api.apikeys.v2.Key)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void Key::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.annotations_.Destruct();
  _impl_.annotations_.~MapField();
  _impl_.name_.Destroy();
  _impl_.display_name_.Destroy();
  _impl_.key_string_.Destroy();
  _impl_.uid_.Destroy();
  _impl_.etag_.Destroy();
  if (this != internal_default_instance()) delete _impl_.create_time_;
  if (this != internal_default_instance()) delete _impl_.update_time_;
  if (this != internal_default_instance()) delete _impl_.delete_time_;
  if (this != internal_default_instance()) delete _impl_.restrictions_;
}

void Key::ArenaDtor(void* object) {
  Key* _this = reinterpret_cast< Key* >(object);
  _this->_impl_.annotations_.Destruct();
}
void Key::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Key::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.apikeys.v2.Key)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.annotations_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.display_name_.ClearToEmpty();
  _impl_.key_string_.ClearToEmpty();
  _impl_.uid_.ClearToEmpty();
  _impl_.etag_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.create_time_ != nullptr) {
    delete _impl_.create_time_;
  }
  _impl_.create_time_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.update_time_ != nullptr) {
    delete _impl_.update_time_;
  }
  _impl_.update_time_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.delete_time_ != nullptr) {
    delete _impl_.delete_time_;
  }
  _impl_.delete_time_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.restrictions_ != nullptr) {
    delete _impl_.restrictions_;
  }
  _impl_.restrictions_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Key::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.apikeys.v2.Key.name"));
        } else
          goto handle_unusual;
        continue;
      // string display_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_display_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.apikeys.v2.Key.display_name"));
        } else
          goto handle_unusual;
        continue;
      // string key_string = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_key_string();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.apikeys.v2.Key.key_string"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp create_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_create_time(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string uid = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_uid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.apikeys.v2.Key.uid"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp update_time = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_update_time(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp delete_time = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_delete_time(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, string> annotations = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.annotations_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .google.api.apikeys.v2.Restrictions restrictions = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_restrictions(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string etag = 11 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_etag();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.apikeys.v2.Key.etag"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Key::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.apikeys.v2.Key)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.apikeys.v2.Key.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string display_name = 2;
  if (!this->_internal_display_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_display_name().data(), static_cast<int>(this->_internal_display_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.apikeys.v2.Key.display_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_display_name(), target);
  }

  // string key_string = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (!this->_internal_key_string().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key_string().data(), static_cast<int>(this->_internal_key_string().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.apikeys.v2.Key.key_string");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_key_string(), target);
  }

  // .google.protobuf.Timestamp create_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->_internal_has_create_time()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::create_time(this),
        _Internal::create_time(this).GetCachedSize(), target, stream);
  }

  // string uid = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (!this->_internal_uid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uid().data(), static_cast<int>(this->_internal_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.apikeys.v2.Key.uid");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_uid(), target);
  }

  // .google.protobuf.Timestamp update_time = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->_internal_has_update_time()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::update_time(this),
        _Internal::update_time(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp delete_time = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->_internal_has_delete_time()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::delete_time(this),
        _Internal::delete_time(this).GetCachedSize(), target, stream);
  }

  // map<string, string> annotations = 8;
  if (!this->_internal_annotations().empty()) {
    using MapType = ::_pb::Map<std::string, std::string>;
    using WireHelper = Key_AnnotationsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_annotations();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "google.api.apikeys.v2.Key.AnnotationsEntry.key");
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.second.data(), static_cast<int>(entry.second.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "google.api.apikeys.v2.Key.AnnotationsEntry.value");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(8, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(8, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // .google.api.apikeys.v2.Restrictions restrictions = 9;
  if (this->_internal_has_restrictions()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::restrictions(this),
        _Internal::restrictions(this).GetCachedSize(), target, stream);
  }

  // string etag = 11 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (!this->_internal_etag().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_etag().data(), static_cast<int>(this->_internal_etag().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.apikeys.v2.Key.etag");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_etag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.apikeys.v2.Key)
  return target;
}

size_t Key::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.apikeys.v2.Key)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> annotations = 8;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_annotations_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_annotations().begin();
      it != this->_internal_annotations().end(); ++it) {
    total_size += Key_AnnotationsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string display_name = 2;
  if (!this->_internal_display_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_display_name());
  }

  // string key_string = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (!this->_internal_key_string().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key_string());
  }

  // string uid = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (!this->_internal_uid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uid());
  }

  // string etag = 11 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (!this->_internal_etag().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_etag());
  }

  // .google.protobuf.Timestamp create_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->_internal_has_create_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.create_time_);
  }

  // .google.protobuf.Timestamp update_time = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->_internal_has_update_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.update_time_);
  }

  // .google.protobuf.Timestamp delete_time = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->_internal_has_delete_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.delete_time_);
  }

  // .google.api.apikeys.v2.Restrictions restrictions = 9;
  if (this->_internal_has_restrictions()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.restrictions_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Key::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Key::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Key::GetClassData() const { return &_class_data_; }


void Key::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Key*>(&to_msg);
  auto& from = static_cast<const Key&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.apikeys.v2.Key)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.annotations_.MergeFrom(from._impl_.annotations_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_display_name().empty()) {
    _this->_internal_set_display_name(from._internal_display_name());
  }
  if (!from._internal_key_string().empty()) {
    _this->_internal_set_key_string(from._internal_key_string());
  }
  if (!from._internal_uid().empty()) {
    _this->_internal_set_uid(from._internal_uid());
  }
  if (!from._internal_etag().empty()) {
    _this->_internal_set_etag(from._internal_etag());
  }
  if (from._internal_has_create_time()) {
    _this->_internal_mutable_create_time()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_create_time());
  }
  if (from._internal_has_update_time()) {
    _this->_internal_mutable_update_time()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_update_time());
  }
  if (from._internal_has_delete_time()) {
    _this->_internal_mutable_delete_time()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_delete_time());
  }
  if (from._internal_has_restrictions()) {
    _this->_internal_mutable_restrictions()->::google::api::apikeys::v2::Restrictions::MergeFrom(
        from._internal_restrictions());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Key::CopyFrom(const Key& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.apikeys.v2.Key)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Key::IsInitialized() const {
  return true;
}

void Key::InternalSwap(Key* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.annotations_.InternalSwap(&other->_impl_.annotations_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.display_name_, lhs_arena,
      &other->_impl_.display_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.key_string_, lhs_arena,
      &other->_impl_.key_string_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.uid_, lhs_arena,
      &other->_impl_.uid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.etag_, lhs_arena,
      &other->_impl_.etag_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Key, _impl_.restrictions_)
      + sizeof(Key::_impl_.restrictions_)
      - PROTOBUF_FIELD_OFFSET(Key, _impl_.create_time_)>(
          reinterpret_cast<char*>(&_impl_.create_time_),
          reinterpret_cast<char*>(&other->_impl_.create_time_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Key::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fapikeys_2fv2_2fresources_2eproto_getter, &descriptor_table_google_2fapi_2fapikeys_2fv2_2fresources_2eproto_once,
      file_level_metadata_google_2fapi_2fapikeys_2fv2_2fresources_2eproto[1]);
}

// ===================================================================

class Restrictions::_Internal {
 public:
  static const ::google::api::apikeys::v2::BrowserKeyRestrictions& browser_key_restrictions(const Restrictions* msg);
  static const ::google::api::apikeys::v2::ServerKeyRestrictions& server_key_restrictions(const Restrictions* msg);
  static const ::google::api::apikeys::v2::AndroidKeyRestrictions& android_key_restrictions(const Restrictions* msg);
  static const ::google::api::apikeys::v2::IosKeyRestrictions& ios_key_restrictions(const Restrictions* msg);
};

const ::google::api::apikeys::v2::BrowserKeyRestrictions&
Restrictions::_Internal::browser_key_restrictions(const Restrictions* msg) {
  return *msg->_impl_.client_restrictions_.browser_key_restrictions_;
}
const ::google::api::apikeys::v2::ServerKeyRestrictions&
Restrictions::_Internal::server_key_restrictions(const Restrictions* msg) {
  return *msg->_impl_.client_restrictions_.server_key_restrictions_;
}
const ::google::api::apikeys::v2::AndroidKeyRestrictions&
Restrictions::_Internal::android_key_restrictions(const Restrictions* msg) {
  return *msg->_impl_.client_restrictions_.android_key_restrictions_;
}
const ::google::api::apikeys::v2::IosKeyRestrictions&
Restrictions::_Internal::ios_key_restrictions(const Restrictions* msg) {
  return *msg->_impl_.client_restrictions_.ios_key_restrictions_;
}
void Restrictions::set_allocated_browser_key_restrictions(::google::api::apikeys::v2::BrowserKeyRestrictions* browser_key_restrictions) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_client_restrictions();
  if (browser_key_restrictions) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(browser_key_restrictions);
    if (message_arena != submessage_arena) {
      browser_key_restrictions = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, browser_key_restrictions, submessage_arena);
    }
    set_has_browser_key_restrictions();
    _impl_.client_restrictions_.browser_key_restrictions_ = browser_key_restrictions;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.apikeys.v2.Restrictions.browser_key_restrictions)
}
void Restrictions::set_allocated_server_key_restrictions(::google::api::apikeys::v2::ServerKeyRestrictions* server_key_restrictions) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_client_restrictions();
  if (server_key_restrictions) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(server_key_restrictions);
    if (message_arena != submessage_arena) {
      server_key_restrictions = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, server_key_restrictions, submessage_arena);
    }
    set_has_server_key_restrictions();
    _impl_.client_restrictions_.server_key_restrictions_ = server_key_restrictions;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.apikeys.v2.Restrictions.server_key_restrictions)
}
void Restrictions::set_allocated_android_key_restrictions(::google::api::apikeys::v2::AndroidKeyRestrictions* android_key_restrictions) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_client_restrictions();
  if (android_key_restrictions) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(android_key_restrictions);
    if (message_arena != submessage_arena) {
      android_key_restrictions = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, android_key_restrictions, submessage_arena);
    }
    set_has_android_key_restrictions();
    _impl_.client_restrictions_.android_key_restrictions_ = android_key_restrictions;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.apikeys.v2.Restrictions.android_key_restrictions)
}
void Restrictions::set_allocated_ios_key_restrictions(::google::api::apikeys::v2::IosKeyRestrictions* ios_key_restrictions) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_client_restrictions();
  if (ios_key_restrictions) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(ios_key_restrictions);
    if (message_arena != submessage_arena) {
      ios_key_restrictions = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ios_key_restrictions, submessage_arena);
    }
    set_has_ios_key_restrictions();
    _impl_.client_restrictions_.ios_key_restrictions_ = ios_key_restrictions;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.apikeys.v2.Restrictions.ios_key_restrictions)
}
Restrictions::Restrictions(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.apikeys.v2.Restrictions)
}
Restrictions::Restrictions(const Restrictions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Restrictions* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.api_targets_){from._impl_.api_targets_}
    , decltype(_impl_.client_restrictions_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_client_restrictions();
  switch (from.client_restrictions_case()) {
    case kBrowserKeyRestrictions: {
      _this->_internal_mutable_browser_key_restrictions()->::google::api::apikeys::v2::BrowserKeyRestrictions::MergeFrom(
          from._internal_browser_key_restrictions());
      break;
    }
    case kServerKeyRestrictions: {
      _this->_internal_mutable_server_key_restrictions()->::google::api::apikeys::v2::ServerKeyRestrictions::MergeFrom(
          from._internal_server_key_restrictions());
      break;
    }
    case kAndroidKeyRestrictions: {
      _this->_internal_mutable_android_key_restrictions()->::google::api::apikeys::v2::AndroidKeyRestrictions::MergeFrom(
          from._internal_android_key_restrictions());
      break;
    }
    case kIosKeyRestrictions: {
      _this->_internal_mutable_ios_key_restrictions()->::google::api::apikeys::v2::IosKeyRestrictions::MergeFrom(
          from._internal_ios_key_restrictions());
      break;
    }
    case CLIENT_RESTRICTIONS_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.api.apikeys.v2.Restrictions)
}

inline void Restrictions::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.api_targets_){arena}
    , decltype(_impl_.client_restrictions_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_client_restrictions();
}

Restrictions::~Restrictions() {
  // @@protoc_insertion_point(destructor:google.api.apikeys.v2.Restrictions)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Restrictions::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.api_targets_.~RepeatedPtrField();
  if (has_client_restrictions()) {
    clear_client_restrictions();
  }
}

void Restrictions::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Restrictions::clear_client_restrictions() {
// @@protoc_insertion_point(one_of_clear_start:google.api.apikeys.v2.Restrictions)
  switch (client_restrictions_case()) {
    case kBrowserKeyRestrictions: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.client_restrictions_.browser_key_restrictions_;
      }
      break;
    }
    case kServerKeyRestrictions: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.client_restrictions_.server_key_restrictions_;
      }
      break;
    }
    case kAndroidKeyRestrictions: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.client_restrictions_.android_key_restrictions_;
      }
      break;
    }
    case kIosKeyRestrictions: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.client_restrictions_.ios_key_restrictions_;
      }
      break;
    }
    case CLIENT_RESTRICTIONS_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = CLIENT_RESTRICTIONS_NOT_SET;
}


void Restrictions::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.apikeys.v2.Restrictions)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.api_targets_.Clear();
  clear_client_restrictions();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Restrictions::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.api.apikeys.v2.BrowserKeyRestrictions browser_key_restrictions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_browser_key_restrictions(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.apikeys.v2.ServerKeyRestrictions server_key_restrictions = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_server_key_restrictions(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.apikeys.v2.AndroidKeyRestrictions android_key_restrictions = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_android_key_restrictions(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.apikeys.v2.IosKeyRestrictions ios_key_restrictions = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_ios_key_restrictions(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .google.api.apikeys.v2.ApiTarget api_targets = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_api_targets(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Restrictions::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.apikeys.v2.Restrictions)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.apikeys.v2.BrowserKeyRestrictions browser_key_restrictions = 1;
  if (_internal_has_browser_key_restrictions()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::browser_key_restrictions(this),
        _Internal::browser_key_restrictions(this).GetCachedSize(), target, stream);
  }

  // .google.api.apikeys.v2.ServerKeyRestrictions server_key_restrictions = 2;
  if (_internal_has_server_key_restrictions()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::server_key_restrictions(this),
        _Internal::server_key_restrictions(this).GetCachedSize(), target, stream);
  }

  // .google.api.apikeys.v2.AndroidKeyRestrictions android_key_restrictions = 3;
  if (_internal_has_android_key_restrictions()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::android_key_restrictions(this),
        _Internal::android_key_restrictions(this).GetCachedSize(), target, stream);
  }

  // .google.api.apikeys.v2.IosKeyRestrictions ios_key_restrictions = 4;
  if (_internal_has_ios_key_restrictions()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::ios_key_restrictions(this),
        _Internal::ios_key_restrictions(this).GetCachedSize(), target, stream);
  }

  // repeated .google.api.apikeys.v2.ApiTarget api_targets = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_api_targets_size()); i < n; i++) {
    const auto& repfield = this->_internal_api_targets(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.apikeys.v2.Restrictions)
  return target;
}

size_t Restrictions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.apikeys.v2.Restrictions)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.apikeys.v2.ApiTarget api_targets = 5;
  total_size += 1UL * this->_internal_api_targets_size();
  for (const auto& msg : this->_impl_.api_targets_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  switch (client_restrictions_case()) {
    // .google.api.apikeys.v2.BrowserKeyRestrictions browser_key_restrictions = 1;
    case kBrowserKeyRestrictions: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.client_restrictions_.browser_key_restrictions_);
      break;
    }
    // .google.api.apikeys.v2.ServerKeyRestrictions server_key_restrictions = 2;
    case kServerKeyRestrictions: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.client_restrictions_.server_key_restrictions_);
      break;
    }
    // .google.api.apikeys.v2.AndroidKeyRestrictions android_key_restrictions = 3;
    case kAndroidKeyRestrictions: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.client_restrictions_.android_key_restrictions_);
      break;
    }
    // .google.api.apikeys.v2.IosKeyRestrictions ios_key_restrictions = 4;
    case kIosKeyRestrictions: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.client_restrictions_.ios_key_restrictions_);
      break;
    }
    case CLIENT_RESTRICTIONS_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Restrictions::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Restrictions::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Restrictions::GetClassData() const { return &_class_data_; }


void Restrictions::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Restrictions*>(&to_msg);
  auto& from = static_cast<const Restrictions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.apikeys.v2.Restrictions)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.api_targets_.MergeFrom(from._impl_.api_targets_);
  switch (from.client_restrictions_case()) {
    case kBrowserKeyRestrictions: {
      _this->_internal_mutable_browser_key_restrictions()->::google::api::apikeys::v2::BrowserKeyRestrictions::MergeFrom(
          from._internal_browser_key_restrictions());
      break;
    }
    case kServerKeyRestrictions: {
      _this->_internal_mutable_server_key_restrictions()->::google::api::apikeys::v2::ServerKeyRestrictions::MergeFrom(
          from._internal_server_key_restrictions());
      break;
    }
    case kAndroidKeyRestrictions: {
      _this->_internal_mutable_android_key_restrictions()->::google::api::apikeys::v2::AndroidKeyRestrictions::MergeFrom(
          from._internal_android_key_restrictions());
      break;
    }
    case kIosKeyRestrictions: {
      _this->_internal_mutable_ios_key_restrictions()->::google::api::apikeys::v2::IosKeyRestrictions::MergeFrom(
          from._internal_ios_key_restrictions());
      break;
    }
    case CLIENT_RESTRICTIONS_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Restrictions::CopyFrom(const Restrictions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.apikeys.v2.Restrictions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Restrictions::IsInitialized() const {
  return true;
}

void Restrictions::InternalSwap(Restrictions* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.api_targets_.InternalSwap(&other->_impl_.api_targets_);
  swap(_impl_.client_restrictions_, other->_impl_.client_restrictions_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Restrictions::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fapikeys_2fv2_2fresources_2eproto_getter, &descriptor_table_google_2fapi_2fapikeys_2fv2_2fresources_2eproto_once,
      file_level_metadata_google_2fapi_2fapikeys_2fv2_2fresources_2eproto[2]);
}

// ===================================================================

class BrowserKeyRestrictions::_Internal {
 public:
};

BrowserKeyRestrictions::BrowserKeyRestrictions(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.apikeys.v2.BrowserKeyRestrictions)
}
BrowserKeyRestrictions::BrowserKeyRestrictions(const BrowserKeyRestrictions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BrowserKeyRestrictions* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.allowed_referrers_){from._impl_.allowed_referrers_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.api.apikeys.v2.BrowserKeyRestrictions)
}

inline void BrowserKeyRestrictions::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.allowed_referrers_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

BrowserKeyRestrictions::~BrowserKeyRestrictions() {
  // @@protoc_insertion_point(destructor:google.api.apikeys.v2.BrowserKeyRestrictions)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BrowserKeyRestrictions::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.allowed_referrers_.~RepeatedPtrField();
}

void BrowserKeyRestrictions::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BrowserKeyRestrictions::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.apikeys.v2.BrowserKeyRestrictions)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.allowed_referrers_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BrowserKeyRestrictions::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string allowed_referrers = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_allowed_referrers();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "google.api.apikeys.v2.BrowserKeyRestrictions.allowed_referrers"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BrowserKeyRestrictions::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.apikeys.v2.BrowserKeyRestrictions)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string allowed_referrers = 1;
  for (int i = 0, n = this->_internal_allowed_referrers_size(); i < n; i++) {
    const auto& s = this->_internal_allowed_referrers(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.apikeys.v2.BrowserKeyRestrictions.allowed_referrers");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.apikeys.v2.BrowserKeyRestrictions)
  return target;
}

size_t BrowserKeyRestrictions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.apikeys.v2.BrowserKeyRestrictions)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string allowed_referrers = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.allowed_referrers_.size());
  for (int i = 0, n = _impl_.allowed_referrers_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.allowed_referrers_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BrowserKeyRestrictions::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BrowserKeyRestrictions::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BrowserKeyRestrictions::GetClassData() const { return &_class_data_; }


void BrowserKeyRestrictions::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BrowserKeyRestrictions*>(&to_msg);
  auto& from = static_cast<const BrowserKeyRestrictions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.apikeys.v2.BrowserKeyRestrictions)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.allowed_referrers_.MergeFrom(from._impl_.allowed_referrers_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BrowserKeyRestrictions::CopyFrom(const BrowserKeyRestrictions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.apikeys.v2.BrowserKeyRestrictions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BrowserKeyRestrictions::IsInitialized() const {
  return true;
}

void BrowserKeyRestrictions::InternalSwap(BrowserKeyRestrictions* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.allowed_referrers_.InternalSwap(&other->_impl_.allowed_referrers_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BrowserKeyRestrictions::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fapikeys_2fv2_2fresources_2eproto_getter, &descriptor_table_google_2fapi_2fapikeys_2fv2_2fresources_2eproto_once,
      file_level_metadata_google_2fapi_2fapikeys_2fv2_2fresources_2eproto[3]);
}

// ===================================================================

class ServerKeyRestrictions::_Internal {
 public:
};

ServerKeyRestrictions::ServerKeyRestrictions(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.apikeys.v2.ServerKeyRestrictions)
}
ServerKeyRestrictions::ServerKeyRestrictions(const ServerKeyRestrictions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ServerKeyRestrictions* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.allowed_ips_){from._impl_.allowed_ips_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.api.apikeys.v2.ServerKeyRestrictions)
}

inline void ServerKeyRestrictions::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.allowed_ips_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ServerKeyRestrictions::~ServerKeyRestrictions() {
  // @@protoc_insertion_point(destructor:google.api.apikeys.v2.ServerKeyRestrictions)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ServerKeyRestrictions::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.allowed_ips_.~RepeatedPtrField();
}

void ServerKeyRestrictions::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ServerKeyRestrictions::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.apikeys.v2.ServerKeyRestrictions)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.allowed_ips_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServerKeyRestrictions::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string allowed_ips = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_allowed_ips();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "google.api.apikeys.v2.ServerKeyRestrictions.allowed_ips"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ServerKeyRestrictions::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.apikeys.v2.ServerKeyRestrictions)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string allowed_ips = 1;
  for (int i = 0, n = this->_internal_allowed_ips_size(); i < n; i++) {
    const auto& s = this->_internal_allowed_ips(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.apikeys.v2.ServerKeyRestrictions.allowed_ips");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.apikeys.v2.ServerKeyRestrictions)
  return target;
}

size_t ServerKeyRestrictions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.apikeys.v2.ServerKeyRestrictions)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string allowed_ips = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.allowed_ips_.size());
  for (int i = 0, n = _impl_.allowed_ips_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.allowed_ips_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ServerKeyRestrictions::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ServerKeyRestrictions::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ServerKeyRestrictions::GetClassData() const { return &_class_data_; }


void ServerKeyRestrictions::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ServerKeyRestrictions*>(&to_msg);
  auto& from = static_cast<const ServerKeyRestrictions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.apikeys.v2.ServerKeyRestrictions)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.allowed_ips_.MergeFrom(from._impl_.allowed_ips_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ServerKeyRestrictions::CopyFrom(const ServerKeyRestrictions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.apikeys.v2.ServerKeyRestrictions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerKeyRestrictions::IsInitialized() const {
  return true;
}

void ServerKeyRestrictions::InternalSwap(ServerKeyRestrictions* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.allowed_ips_.InternalSwap(&other->_impl_.allowed_ips_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ServerKeyRestrictions::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fapikeys_2fv2_2fresources_2eproto_getter, &descriptor_table_google_2fapi_2fapikeys_2fv2_2fresources_2eproto_once,
      file_level_metadata_google_2fapi_2fapikeys_2fv2_2fresources_2eproto[4]);
}

// ===================================================================

class AndroidKeyRestrictions::_Internal {
 public:
};

AndroidKeyRestrictions::AndroidKeyRestrictions(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.apikeys.v2.AndroidKeyRestrictions)
}
AndroidKeyRestrictions::AndroidKeyRestrictions(const AndroidKeyRestrictions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AndroidKeyRestrictions* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.allowed_applications_){from._impl_.allowed_applications_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.api.apikeys.v2.AndroidKeyRestrictions)
}

inline void AndroidKeyRestrictions::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.allowed_applications_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AndroidKeyRestrictions::~AndroidKeyRestrictions() {
  // @@protoc_insertion_point(destructor:google.api.apikeys.v2.AndroidKeyRestrictions)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AndroidKeyRestrictions::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.allowed_applications_.~RepeatedPtrField();
}

void AndroidKeyRestrictions::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AndroidKeyRestrictions::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.apikeys.v2.AndroidKeyRestrictions)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.allowed_applications_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AndroidKeyRestrictions::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .google.api.apikeys.v2.AndroidApplication allowed_applications = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_allowed_applications(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AndroidKeyRestrictions::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.apikeys.v2.AndroidKeyRestrictions)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.apikeys.v2.AndroidApplication allowed_applications = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_allowed_applications_size()); i < n; i++) {
    const auto& repfield = this->_internal_allowed_applications(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.apikeys.v2.AndroidKeyRestrictions)
  return target;
}

size_t AndroidKeyRestrictions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.apikeys.v2.AndroidKeyRestrictions)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.apikeys.v2.AndroidApplication allowed_applications = 1;
  total_size += 1UL * this->_internal_allowed_applications_size();
  for (const auto& msg : this->_impl_.allowed_applications_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AndroidKeyRestrictions::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AndroidKeyRestrictions::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AndroidKeyRestrictions::GetClassData() const { return &_class_data_; }


void AndroidKeyRestrictions::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AndroidKeyRestrictions*>(&to_msg);
  auto& from = static_cast<const AndroidKeyRestrictions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.apikeys.v2.AndroidKeyRestrictions)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.allowed_applications_.MergeFrom(from._impl_.allowed_applications_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AndroidKeyRestrictions::CopyFrom(const AndroidKeyRestrictions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.apikeys.v2.AndroidKeyRestrictions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AndroidKeyRestrictions::IsInitialized() const {
  return true;
}

void AndroidKeyRestrictions::InternalSwap(AndroidKeyRestrictions* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.allowed_applications_.InternalSwap(&other->_impl_.allowed_applications_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AndroidKeyRestrictions::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fapikeys_2fv2_2fresources_2eproto_getter, &descriptor_table_google_2fapi_2fapikeys_2fv2_2fresources_2eproto_once,
      file_level_metadata_google_2fapi_2fapikeys_2fv2_2fresources_2eproto[5]);
}

// ===================================================================

class AndroidApplication::_Internal {
 public:
};

AndroidApplication::AndroidApplication(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.apikeys.v2.AndroidApplication)
}
AndroidApplication::AndroidApplication(const AndroidApplication& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AndroidApplication* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.sha1_fingerprint_){}
    , decltype(_impl_.package_name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.sha1_fingerprint_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.sha1_fingerprint_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sha1_fingerprint().empty()) {
    _this->_impl_.sha1_fingerprint_.Set(from._internal_sha1_fingerprint(), 
      _this->GetArenaForAllocation());
  }
  _impl_.package_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.package_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_package_name().empty()) {
    _this->_impl_.package_name_.Set(from._internal_package_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.apikeys.v2.AndroidApplication)
}

inline void AndroidApplication::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.sha1_fingerprint_){}
    , decltype(_impl_.package_name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.sha1_fingerprint_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.sha1_fingerprint_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.package_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.package_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AndroidApplication::~AndroidApplication() {
  // @@protoc_insertion_point(destructor:google.api.apikeys.v2.AndroidApplication)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AndroidApplication::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sha1_fingerprint_.Destroy();
  _impl_.package_name_.Destroy();
}

void AndroidApplication::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AndroidApplication::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.apikeys.v2.AndroidApplication)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sha1_fingerprint_.ClearToEmpty();
  _impl_.package_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AndroidApplication::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sha1_fingerprint = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sha1_fingerprint();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.apikeys.v2.AndroidApplication.sha1_fingerprint"));
        } else
          goto handle_unusual;
        continue;
      // string package_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_package_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.apikeys.v2.AndroidApplication.package_name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AndroidApplication::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.apikeys.v2.AndroidApplication)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string sha1_fingerprint = 1;
  if (!this->_internal_sha1_fingerprint().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sha1_fingerprint().data(), static_cast<int>(this->_internal_sha1_fingerprint().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.apikeys.v2.AndroidApplication.sha1_fingerprint");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_sha1_fingerprint(), target);
  }

  // string package_name = 2;
  if (!this->_internal_package_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_package_name().data(), static_cast<int>(this->_internal_package_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.apikeys.v2.AndroidApplication.package_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_package_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.apikeys.v2.AndroidApplication)
  return target;
}

size_t AndroidApplication::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.apikeys.v2.AndroidApplication)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sha1_fingerprint = 1;
  if (!this->_internal_sha1_fingerprint().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sha1_fingerprint());
  }

  // string package_name = 2;
  if (!this->_internal_package_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_package_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AndroidApplication::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AndroidApplication::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AndroidApplication::GetClassData() const { return &_class_data_; }


void AndroidApplication::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AndroidApplication*>(&to_msg);
  auto& from = static_cast<const AndroidApplication&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.apikeys.v2.AndroidApplication)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sha1_fingerprint().empty()) {
    _this->_internal_set_sha1_fingerprint(from._internal_sha1_fingerprint());
  }
  if (!from._internal_package_name().empty()) {
    _this->_internal_set_package_name(from._internal_package_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AndroidApplication::CopyFrom(const AndroidApplication& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.apikeys.v2.AndroidApplication)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AndroidApplication::IsInitialized() const {
  return true;
}

void AndroidApplication::InternalSwap(AndroidApplication* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.sha1_fingerprint_, lhs_arena,
      &other->_impl_.sha1_fingerprint_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.package_name_, lhs_arena,
      &other->_impl_.package_name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata AndroidApplication::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fapikeys_2fv2_2fresources_2eproto_getter, &descriptor_table_google_2fapi_2fapikeys_2fv2_2fresources_2eproto_once,
      file_level_metadata_google_2fapi_2fapikeys_2fv2_2fresources_2eproto[6]);
}

// ===================================================================

class IosKeyRestrictions::_Internal {
 public:
};

IosKeyRestrictions::IosKeyRestrictions(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.apikeys.v2.IosKeyRestrictions)
}
IosKeyRestrictions::IosKeyRestrictions(const IosKeyRestrictions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  IosKeyRestrictions* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.allowed_bundle_ids_){from._impl_.allowed_bundle_ids_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.api.apikeys.v2.IosKeyRestrictions)
}

inline void IosKeyRestrictions::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.allowed_bundle_ids_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

IosKeyRestrictions::~IosKeyRestrictions() {
  // @@protoc_insertion_point(destructor:google.api.apikeys.v2.IosKeyRestrictions)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void IosKeyRestrictions::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.allowed_bundle_ids_.~RepeatedPtrField();
}

void IosKeyRestrictions::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void IosKeyRestrictions::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.apikeys.v2.IosKeyRestrictions)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.allowed_bundle_ids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IosKeyRestrictions::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string allowed_bundle_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_allowed_bundle_ids();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "google.api.apikeys.v2.IosKeyRestrictions.allowed_bundle_ids"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* IosKeyRestrictions::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.apikeys.v2.IosKeyRestrictions)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string allowed_bundle_ids = 1;
  for (int i = 0, n = this->_internal_allowed_bundle_ids_size(); i < n; i++) {
    const auto& s = this->_internal_allowed_bundle_ids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.apikeys.v2.IosKeyRestrictions.allowed_bundle_ids");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.apikeys.v2.IosKeyRestrictions)
  return target;
}

size_t IosKeyRestrictions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.apikeys.v2.IosKeyRestrictions)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string allowed_bundle_ids = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.allowed_bundle_ids_.size());
  for (int i = 0, n = _impl_.allowed_bundle_ids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.allowed_bundle_ids_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData IosKeyRestrictions::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    IosKeyRestrictions::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*IosKeyRestrictions::GetClassData() const { return &_class_data_; }


void IosKeyRestrictions::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<IosKeyRestrictions*>(&to_msg);
  auto& from = static_cast<const IosKeyRestrictions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.apikeys.v2.IosKeyRestrictions)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.allowed_bundle_ids_.MergeFrom(from._impl_.allowed_bundle_ids_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void IosKeyRestrictions::CopyFrom(const IosKeyRestrictions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.apikeys.v2.IosKeyRestrictions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IosKeyRestrictions::IsInitialized() const {
  return true;
}

void IosKeyRestrictions::InternalSwap(IosKeyRestrictions* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.allowed_bundle_ids_.InternalSwap(&other->_impl_.allowed_bundle_ids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IosKeyRestrictions::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fapikeys_2fv2_2fresources_2eproto_getter, &descriptor_table_google_2fapi_2fapikeys_2fv2_2fresources_2eproto_once,
      file_level_metadata_google_2fapi_2fapikeys_2fv2_2fresources_2eproto[7]);
}

// ===================================================================

class ApiTarget::_Internal {
 public:
};

ApiTarget::ApiTarget(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.apikeys.v2.ApiTarget)
}
ApiTarget::ApiTarget(const ApiTarget& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ApiTarget* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.methods_){from._impl_.methods_}
    , decltype(_impl_.service_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.service_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_service().empty()) {
    _this->_impl_.service_.Set(from._internal_service(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.apikeys.v2.ApiTarget)
}

inline void ApiTarget::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.methods_){arena}
    , decltype(_impl_.service_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.service_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ApiTarget::~ApiTarget() {
  // @@protoc_insertion_point(destructor:google.api.apikeys.v2.ApiTarget)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ApiTarget::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.methods_.~RepeatedPtrField();
  _impl_.service_.Destroy();
}

void ApiTarget::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ApiTarget::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.apikeys.v2.ApiTarget)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.methods_.Clear();
  _impl_.service_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ApiTarget::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string service = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_service();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.apikeys.v2.ApiTarget.service"));
        } else
          goto handle_unusual;
        continue;
      // repeated string methods = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_methods();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "google.api.apikeys.v2.ApiTarget.methods"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ApiTarget::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.apikeys.v2.ApiTarget)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string service = 1;
  if (!this->_internal_service().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service().data(), static_cast<int>(this->_internal_service().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.apikeys.v2.ApiTarget.service");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_service(), target);
  }

  // repeated string methods = 2 [(.google.api.field_behavior) = OPTIONAL];
  for (int i = 0, n = this->_internal_methods_size(); i < n; i++) {
    const auto& s = this->_internal_methods(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.apikeys.v2.ApiTarget.methods");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.apikeys.v2.ApiTarget)
  return target;
}

size_t ApiTarget::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.apikeys.v2.ApiTarget)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string methods = 2 [(.google.api.field_behavior) = OPTIONAL];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.methods_.size());
  for (int i = 0, n = _impl_.methods_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.methods_.Get(i));
  }

  // string service = 1;
  if (!this->_internal_service().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ApiTarget::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ApiTarget::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ApiTarget::GetClassData() const { return &_class_data_; }


void ApiTarget::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ApiTarget*>(&to_msg);
  auto& from = static_cast<const ApiTarget&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.apikeys.v2.ApiTarget)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.methods_.MergeFrom(from._impl_.methods_);
  if (!from._internal_service().empty()) {
    _this->_internal_set_service(from._internal_service());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ApiTarget::CopyFrom(const ApiTarget& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.apikeys.v2.ApiTarget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApiTarget::IsInitialized() const {
  return true;
}

void ApiTarget::InternalSwap(ApiTarget* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.methods_.InternalSwap(&other->_impl_.methods_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.service_, lhs_arena,
      &other->_impl_.service_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ApiTarget::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fapikeys_2fv2_2fresources_2eproto_getter, &descriptor_table_google_2fapi_2fapikeys_2fv2_2fresources_2eproto_once,
      file_level_metadata_google_2fapi_2fapikeys_2fv2_2fresources_2eproto[8]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace apikeys
}  // namespace api
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::google::api::apikeys::v2::Key_AnnotationsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::google::api::apikeys::v2::Key_AnnotationsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::apikeys::v2::Key_AnnotationsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::apikeys::v2::Key*
Arena::CreateMaybeMessage< ::google::api::apikeys::v2::Key >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::apikeys::v2::Key >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::apikeys::v2::Restrictions*
Arena::CreateMaybeMessage< ::google::api::apikeys::v2::Restrictions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::apikeys::v2::Restrictions >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::apikeys::v2::BrowserKeyRestrictions*
Arena::CreateMaybeMessage< ::google::api::apikeys::v2::BrowserKeyRestrictions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::apikeys::v2::BrowserKeyRestrictions >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::apikeys::v2::ServerKeyRestrictions*
Arena::CreateMaybeMessage< ::google::api::apikeys::v2::ServerKeyRestrictions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::apikeys::v2::ServerKeyRestrictions >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::apikeys::v2::AndroidKeyRestrictions*
Arena::CreateMaybeMessage< ::google::api::apikeys::v2::AndroidKeyRestrictions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::apikeys::v2::AndroidKeyRestrictions >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::apikeys::v2::AndroidApplication*
Arena::CreateMaybeMessage< ::google::api::apikeys::v2::AndroidApplication >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::apikeys::v2::AndroidApplication >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::apikeys::v2::IosKeyRestrictions*
Arena::CreateMaybeMessage< ::google::api::apikeys::v2::IosKeyRestrictions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::apikeys::v2::IosKeyRestrictions >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::apikeys::v2::ApiTarget*
Arena::CreateMaybeMessage< ::google::api::apikeys::v2::ApiTarget >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::apikeys::v2::ApiTarget >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

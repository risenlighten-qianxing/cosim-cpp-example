// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/serviceusage/v1/resources.proto

#include "google/api/serviceusage/v1/resources.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace google {
namespace api {
namespace serviceusage {
namespace v1 {
PROTOBUF_CONSTEXPR Service::Service(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.parent_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.config_)*/nullptr
  , /*decltype(_impl_.state_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ServiceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServiceDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServiceDefaultTypeInternal() {}
  union {
    Service _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServiceDefaultTypeInternal _Service_default_instance_;
PROTOBUF_CONSTEXPR ServiceConfig::ServiceConfig(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.apis_)*/{}
  , /*decltype(_impl_.endpoints_)*/{}
  , /*decltype(_impl_.monitored_resources_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.title_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.documentation_)*/nullptr
  , /*decltype(_impl_.quota_)*/nullptr
  , /*decltype(_impl_.authentication_)*/nullptr
  , /*decltype(_impl_.usage_)*/nullptr
  , /*decltype(_impl_.monitoring_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ServiceConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServiceConfigDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServiceConfigDefaultTypeInternal() {}
  union {
    ServiceConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServiceConfigDefaultTypeInternal _ServiceConfig_default_instance_;
PROTOBUF_CONSTEXPR OperationMetadata::OperationMetadata(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.resource_names_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OperationMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OperationMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OperationMetadataDefaultTypeInternal() {}
  union {
    OperationMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OperationMetadataDefaultTypeInternal _OperationMetadata_default_instance_;
}  // namespace v1
}  // namespace serviceusage
}  // namespace api
}  // namespace google
static ::_pb::Metadata file_level_metadata_google_2fapi_2fserviceusage_2fv1_2fresources_2eproto[3];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_google_2fapi_2fserviceusage_2fv1_2fresources_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_google_2fapi_2fserviceusage_2fv1_2fresources_2eproto = nullptr;

const uint32_t TableStruct_google_2fapi_2fserviceusage_2fv1_2fresources_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::Service, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::Service, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::Service, _impl_.parent_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::Service, _impl_.config_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::Service, _impl_.state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::ServiceConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::ServiceConfig, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::ServiceConfig, _impl_.title_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::ServiceConfig, _impl_.apis_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::ServiceConfig, _impl_.documentation_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::ServiceConfig, _impl_.quota_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::ServiceConfig, _impl_.authentication_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::ServiceConfig, _impl_.usage_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::ServiceConfig, _impl_.endpoints_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::ServiceConfig, _impl_.monitored_resources_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::ServiceConfig, _impl_.monitoring_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::OperationMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1::OperationMetadata, _impl_.resource_names_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::google::api::serviceusage::v1::Service)},
  { 10, -1, -1, sizeof(::google::api::serviceusage::v1::ServiceConfig)},
  { 26, -1, -1, sizeof(::google::api::serviceusage::v1::OperationMetadata)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::google::api::serviceusage::v1::_Service_default_instance_._instance,
  &::google::api::serviceusage::v1::_ServiceConfig_default_instance_._instance,
  &::google::api::serviceusage::v1::_OperationMetadata_default_instance_._instance,
};

const char descriptor_table_protodef_google_2fapi_2fserviceusage_2fv1_2fresources_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n*google/api/serviceusage/v1/resources.p"
  "roto\022\032google.api.serviceusage.v1\032\025google"
  "/api/auth.proto\032\036google/api/documentatio"
  "n.proto\032\031google/api/endpoint.proto\032#goog"
  "le/api/monitored_resource.proto\032\033google/"
  "api/monitoring.proto\032\026google/api/quota.p"
  "roto\032\026google/api/usage.proto\032\031google/pro"
  "tobuf/api.proto\"\224\001\n\007Service\022\014\n\004name\030\001 \001("
  "\t\022\016\n\006parent\030\005 \001(\t\0229\n\006config\030\002 \001(\0132).goog"
  "le.api.serviceusage.v1.ServiceConfig\0220\n\005"
  "state\030\004 \001(\0162!.google.api.serviceusage.v1"
  ".State\"\225\003\n\rServiceConfig\022\014\n\004name\030\001 \001(\t\022\r"
  "\n\005title\030\002 \001(\t\022\"\n\004apis\030\003 \003(\0132\024.google.pro"
  "tobuf.Api\0220\n\rdocumentation\030\006 \001(\0132\031.googl"
  "e.api.Documentation\022 \n\005quota\030\n \001(\0132\021.goo"
  "gle.api.Quota\0222\n\016authentication\030\013 \001(\0132\032."
  "google.api.Authentication\022 \n\005usage\030\017 \001(\013"
  "2\021.google.api.Usage\022\'\n\tendpoints\030\022 \003(\0132\024"
  ".google.api.Endpoint\022D\n\023monitored_resour"
  "ces\030\031 \003(\0132\'.google.api.MonitoredResource"
  "Descriptor\022*\n\nmonitoring\030\034 \001(\0132\026.google."
  "api.Monitoring\"+\n\021OperationMetadata\022\026\n\016r"
  "esource_names\030\002 \003(\t*9\n\005State\022\025\n\021STATE_UN"
  "SPECIFIED\020\000\022\014\n\010DISABLED\020\001\022\013\n\007ENABLED\020\002B\332"
  "\001\n\036com.google.api.serviceusage.v1B\016Resou"
  "rcesProtoP\001ZFgoogle.golang.org/genproto/"
  "googleapis/api/serviceusage/v1;serviceus"
  "age\252\002\034Google.Cloud.ServiceUsage.V1\312\002\034Goo"
  "gle\\Cloud\\ServiceUsage\\V1\352\002\037Google::Clou"
  "d::ServiceUsage::V1b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_google_2fapi_2fserviceusage_2fv1_2fresources_2eproto_deps[8] = {
  &::descriptor_table_google_2fapi_2fauth_2eproto,
  &::descriptor_table_google_2fapi_2fdocumentation_2eproto,
  &::descriptor_table_google_2fapi_2fendpoint_2eproto,
  &::descriptor_table_google_2fapi_2fmonitored_5fresource_2eproto,
  &::descriptor_table_google_2fapi_2fmonitoring_2eproto,
  &::descriptor_table_google_2fapi_2fquota_2eproto,
  &::descriptor_table_google_2fapi_2fusage_2eproto,
  &::descriptor_table_google_2fprotobuf_2fapi_2eproto,
};
static ::_pbi::once_flag descriptor_table_google_2fapi_2fserviceusage_2fv1_2fresources_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_google_2fapi_2fserviceusage_2fv1_2fresources_2eproto = {
    false, false, 1187, descriptor_table_protodef_google_2fapi_2fserviceusage_2fv1_2fresources_2eproto,
    "google/api/serviceusage/v1/resources.proto",
    &descriptor_table_google_2fapi_2fserviceusage_2fv1_2fresources_2eproto_once, descriptor_table_google_2fapi_2fserviceusage_2fv1_2fresources_2eproto_deps, 8, 3,
    schemas, file_default_instances, TableStruct_google_2fapi_2fserviceusage_2fv1_2fresources_2eproto::offsets,
    file_level_metadata_google_2fapi_2fserviceusage_2fv1_2fresources_2eproto, file_level_enum_descriptors_google_2fapi_2fserviceusage_2fv1_2fresources_2eproto,
    file_level_service_descriptors_google_2fapi_2fserviceusage_2fv1_2fresources_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_google_2fapi_2fserviceusage_2fv1_2fresources_2eproto_getter() {
  return &descriptor_table_google_2fapi_2fserviceusage_2fv1_2fresources_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_google_2fapi_2fserviceusage_2fv1_2fresources_2eproto(&descriptor_table_google_2fapi_2fserviceusage_2fv1_2fresources_2eproto);
namespace google {
namespace api {
namespace serviceusage {
namespace v1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* State_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_google_2fapi_2fserviceusage_2fv1_2fresources_2eproto);
  return file_level_enum_descriptors_google_2fapi_2fserviceusage_2fv1_2fresources_2eproto[0];
}
bool State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class Service::_Internal {
 public:
  static const ::google::api::serviceusage::v1::ServiceConfig& config(const Service* msg);
};

const ::google::api::serviceusage::v1::ServiceConfig&
Service::_Internal::config(const Service* msg) {
  return *msg->_impl_.config_;
}
Service::Service(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.serviceusage.v1.Service)
}
Service::Service(const Service& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Service* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.parent_){}
    , decltype(_impl_.config_){nullptr}
    , decltype(_impl_.state_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.parent_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    _this->_impl_.parent_.Set(from._internal_parent(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_config()) {
    _this->_impl_.config_ = new ::google::api::serviceusage::v1::ServiceConfig(*from._impl_.config_);
  }
  _this->_impl_.state_ = from._impl_.state_;
  // @@protoc_insertion_point(copy_constructor:google.api.serviceusage.v1.Service)
}

inline void Service::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.parent_){}
    , decltype(_impl_.config_){nullptr}
    , decltype(_impl_.state_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.parent_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Service::~Service() {
  // @@protoc_insertion_point(destructor:google.api.serviceusage.v1.Service)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Service::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.parent_.Destroy();
  if (this != internal_default_instance()) delete _impl_.config_;
}

void Service::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Service::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.serviceusage.v1.Service)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.parent_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.config_ != nullptr) {
    delete _impl_.config_;
  }
  _impl_.config_ = nullptr;
  _impl_.state_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Service::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.serviceusage.v1.Service.name"));
        } else
          goto handle_unusual;
        continue;
      // .google.api.serviceusage.v1.ServiceConfig config = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.serviceusage.v1.State state = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_state(static_cast<::google::api::serviceusage::v1::State>(val));
        } else
          goto handle_unusual;
        continue;
      // string parent = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_parent();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.serviceusage.v1.Service.parent"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Service::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.serviceusage.v1.Service)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.serviceusage.v1.Service.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .google.api.serviceusage.v1.ServiceConfig config = 2;
  if (this->_internal_has_config()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::config(this),
        _Internal::config(this).GetCachedSize(), target, stream);
  }

  // .google.api.serviceusage.v1.State state = 4;
  if (this->_internal_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_state(), target);
  }

  // string parent = 5;
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.serviceusage.v1.Service.parent");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_parent(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.serviceusage.v1.Service)
  return target;
}

size_t Service::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.serviceusage.v1.Service)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string parent = 5;
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // .google.api.serviceusage.v1.ServiceConfig config = 2;
  if (this->_internal_has_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.config_);
  }

  // .google.api.serviceusage.v1.State state = 4;
  if (this->_internal_state() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_state());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Service::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Service::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Service::GetClassData() const { return &_class_data_; }


void Service::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Service*>(&to_msg);
  auto& from = static_cast<const Service&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.serviceusage.v1.Service)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_parent().empty()) {
    _this->_internal_set_parent(from._internal_parent());
  }
  if (from._internal_has_config()) {
    _this->_internal_mutable_config()->::google::api::serviceusage::v1::ServiceConfig::MergeFrom(
        from._internal_config());
  }
  if (from._internal_state() != 0) {
    _this->_internal_set_state(from._internal_state());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Service::CopyFrom(const Service& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.serviceusage.v1.Service)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Service::IsInitialized() const {
  return true;
}

void Service::InternalSwap(Service* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.parent_, lhs_arena,
      &other->_impl_.parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Service, _impl_.state_)
      + sizeof(Service::_impl_.state_)
      - PROTOBUF_FIELD_OFFSET(Service, _impl_.config_)>(
          reinterpret_cast<char*>(&_impl_.config_),
          reinterpret_cast<char*>(&other->_impl_.config_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Service::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fserviceusage_2fv1_2fresources_2eproto_getter, &descriptor_table_google_2fapi_2fserviceusage_2fv1_2fresources_2eproto_once,
      file_level_metadata_google_2fapi_2fserviceusage_2fv1_2fresources_2eproto[0]);
}

// ===================================================================

class ServiceConfig::_Internal {
 public:
  static const ::google::api::Documentation& documentation(const ServiceConfig* msg);
  static const ::google::api::Quota& quota(const ServiceConfig* msg);
  static const ::google::api::Authentication& authentication(const ServiceConfig* msg);
  static const ::google::api::Usage& usage(const ServiceConfig* msg);
  static const ::google::api::Monitoring& monitoring(const ServiceConfig* msg);
};

const ::google::api::Documentation&
ServiceConfig::_Internal::documentation(const ServiceConfig* msg) {
  return *msg->_impl_.documentation_;
}
const ::google::api::Quota&
ServiceConfig::_Internal::quota(const ServiceConfig* msg) {
  return *msg->_impl_.quota_;
}
const ::google::api::Authentication&
ServiceConfig::_Internal::authentication(const ServiceConfig* msg) {
  return *msg->_impl_.authentication_;
}
const ::google::api::Usage&
ServiceConfig::_Internal::usage(const ServiceConfig* msg) {
  return *msg->_impl_.usage_;
}
const ::google::api::Monitoring&
ServiceConfig::_Internal::monitoring(const ServiceConfig* msg) {
  return *msg->_impl_.monitoring_;
}
void ServiceConfig::clear_apis() {
  _impl_.apis_.Clear();
}
void ServiceConfig::clear_documentation() {
  if (GetArenaForAllocation() == nullptr && _impl_.documentation_ != nullptr) {
    delete _impl_.documentation_;
  }
  _impl_.documentation_ = nullptr;
}
void ServiceConfig::clear_quota() {
  if (GetArenaForAllocation() == nullptr && _impl_.quota_ != nullptr) {
    delete _impl_.quota_;
  }
  _impl_.quota_ = nullptr;
}
void ServiceConfig::clear_authentication() {
  if (GetArenaForAllocation() == nullptr && _impl_.authentication_ != nullptr) {
    delete _impl_.authentication_;
  }
  _impl_.authentication_ = nullptr;
}
void ServiceConfig::clear_usage() {
  if (GetArenaForAllocation() == nullptr && _impl_.usage_ != nullptr) {
    delete _impl_.usage_;
  }
  _impl_.usage_ = nullptr;
}
void ServiceConfig::clear_endpoints() {
  _impl_.endpoints_.Clear();
}
void ServiceConfig::clear_monitored_resources() {
  _impl_.monitored_resources_.Clear();
}
void ServiceConfig::clear_monitoring() {
  if (GetArenaForAllocation() == nullptr && _impl_.monitoring_ != nullptr) {
    delete _impl_.monitoring_;
  }
  _impl_.monitoring_ = nullptr;
}
ServiceConfig::ServiceConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.serviceusage.v1.ServiceConfig)
}
ServiceConfig::ServiceConfig(const ServiceConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ServiceConfig* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.apis_){from._impl_.apis_}
    , decltype(_impl_.endpoints_){from._impl_.endpoints_}
    , decltype(_impl_.monitored_resources_){from._impl_.monitored_resources_}
    , decltype(_impl_.name_){}
    , decltype(_impl_.title_){}
    , decltype(_impl_.documentation_){nullptr}
    , decltype(_impl_.quota_){nullptr}
    , decltype(_impl_.authentication_){nullptr}
    , decltype(_impl_.usage_){nullptr}
    , decltype(_impl_.monitoring_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.title_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_title().empty()) {
    _this->_impl_.title_.Set(from._internal_title(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_documentation()) {
    _this->_impl_.documentation_ = new ::google::api::Documentation(*from._impl_.documentation_);
  }
  if (from._internal_has_quota()) {
    _this->_impl_.quota_ = new ::google::api::Quota(*from._impl_.quota_);
  }
  if (from._internal_has_authentication()) {
    _this->_impl_.authentication_ = new ::google::api::Authentication(*from._impl_.authentication_);
  }
  if (from._internal_has_usage()) {
    _this->_impl_.usage_ = new ::google::api::Usage(*from._impl_.usage_);
  }
  if (from._internal_has_monitoring()) {
    _this->_impl_.monitoring_ = new ::google::api::Monitoring(*from._impl_.monitoring_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.serviceusage.v1.ServiceConfig)
}

inline void ServiceConfig::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.apis_){arena}
    , decltype(_impl_.endpoints_){arena}
    , decltype(_impl_.monitored_resources_){arena}
    , decltype(_impl_.name_){}
    , decltype(_impl_.title_){}
    , decltype(_impl_.documentation_){nullptr}
    , decltype(_impl_.quota_){nullptr}
    , decltype(_impl_.authentication_){nullptr}
    , decltype(_impl_.usage_){nullptr}
    , decltype(_impl_.monitoring_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.title_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ServiceConfig::~ServiceConfig() {
  // @@protoc_insertion_point(destructor:google.api.serviceusage.v1.ServiceConfig)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ServiceConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.apis_.~RepeatedPtrField();
  _impl_.endpoints_.~RepeatedPtrField();
  _impl_.monitored_resources_.~RepeatedPtrField();
  _impl_.name_.Destroy();
  _impl_.title_.Destroy();
  if (this != internal_default_instance()) delete _impl_.documentation_;
  if (this != internal_default_instance()) delete _impl_.quota_;
  if (this != internal_default_instance()) delete _impl_.authentication_;
  if (this != internal_default_instance()) delete _impl_.usage_;
  if (this != internal_default_instance()) delete _impl_.monitoring_;
}

void ServiceConfig::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ServiceConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.serviceusage.v1.ServiceConfig)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.apis_.Clear();
  _impl_.endpoints_.Clear();
  _impl_.monitored_resources_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.title_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.documentation_ != nullptr) {
    delete _impl_.documentation_;
  }
  _impl_.documentation_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.quota_ != nullptr) {
    delete _impl_.quota_;
  }
  _impl_.quota_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.authentication_ != nullptr) {
    delete _impl_.authentication_;
  }
  _impl_.authentication_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.usage_ != nullptr) {
    delete _impl_.usage_;
  }
  _impl_.usage_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.monitoring_ != nullptr) {
    delete _impl_.monitoring_;
  }
  _impl_.monitoring_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServiceConfig::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.serviceusage.v1.ServiceConfig.name"));
        } else
          goto handle_unusual;
        continue;
      // string title = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_title();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.serviceusage.v1.ServiceConfig.title"));
        } else
          goto handle_unusual;
        continue;
      // repeated .google.protobuf.Api apis = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_apis(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .google.api.Documentation documentation = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_documentation(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.Quota quota = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_quota(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.Authentication authentication = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_authentication(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.Usage usage = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_usage(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .google.api.Endpoint endpoints = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 146)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_endpoints(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<146>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .google.api.MonitoredResourceDescriptor monitored_resources = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_monitored_resources(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<202>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .google.api.Monitoring monitoring = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 226)) {
          ptr = ctx->ParseMessage(_internal_mutable_monitoring(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ServiceConfig::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.serviceusage.v1.ServiceConfig)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.serviceusage.v1.ServiceConfig.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string title = 2;
  if (!this->_internal_title().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_title().data(), static_cast<int>(this->_internal_title().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.serviceusage.v1.ServiceConfig.title");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_title(), target);
  }

  // repeated .google.protobuf.Api apis = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_apis_size()); i < n; i++) {
    const auto& repfield = this->_internal_apis(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .google.api.Documentation documentation = 6;
  if (this->_internal_has_documentation()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::documentation(this),
        _Internal::documentation(this).GetCachedSize(), target, stream);
  }

  // .google.api.Quota quota = 10;
  if (this->_internal_has_quota()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::quota(this),
        _Internal::quota(this).GetCachedSize(), target, stream);
  }

  // .google.api.Authentication authentication = 11;
  if (this->_internal_has_authentication()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::authentication(this),
        _Internal::authentication(this).GetCachedSize(), target, stream);
  }

  // .google.api.Usage usage = 15;
  if (this->_internal_has_usage()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(15, _Internal::usage(this),
        _Internal::usage(this).GetCachedSize(), target, stream);
  }

  // repeated .google.api.Endpoint endpoints = 18;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_endpoints_size()); i < n; i++) {
    const auto& repfield = this->_internal_endpoints(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(18, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .google.api.MonitoredResourceDescriptor monitored_resources = 25;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_monitored_resources_size()); i < n; i++) {
    const auto& repfield = this->_internal_monitored_resources(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(25, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .google.api.Monitoring monitoring = 28;
  if (this->_internal_has_monitoring()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(28, _Internal::monitoring(this),
        _Internal::monitoring(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.serviceusage.v1.ServiceConfig)
  return target;
}

size_t ServiceConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.serviceusage.v1.ServiceConfig)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.protobuf.Api apis = 3;
  total_size += 1UL * this->_internal_apis_size();
  for (const auto& msg : this->_impl_.apis_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .google.api.Endpoint endpoints = 18;
  total_size += 2UL * this->_internal_endpoints_size();
  for (const auto& msg : this->_impl_.endpoints_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .google.api.MonitoredResourceDescriptor monitored_resources = 25;
  total_size += 2UL * this->_internal_monitored_resources_size();
  for (const auto& msg : this->_impl_.monitored_resources_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string title = 2;
  if (!this->_internal_title().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_title());
  }

  // .google.api.Documentation documentation = 6;
  if (this->_internal_has_documentation()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.documentation_);
  }

  // .google.api.Quota quota = 10;
  if (this->_internal_has_quota()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.quota_);
  }

  // .google.api.Authentication authentication = 11;
  if (this->_internal_has_authentication()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.authentication_);
  }

  // .google.api.Usage usage = 15;
  if (this->_internal_has_usage()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.usage_);
  }

  // .google.api.Monitoring monitoring = 28;
  if (this->_internal_has_monitoring()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.monitoring_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ServiceConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ServiceConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ServiceConfig::GetClassData() const { return &_class_data_; }


void ServiceConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ServiceConfig*>(&to_msg);
  auto& from = static_cast<const ServiceConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.serviceusage.v1.ServiceConfig)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.apis_.MergeFrom(from._impl_.apis_);
  _this->_impl_.endpoints_.MergeFrom(from._impl_.endpoints_);
  _this->_impl_.monitored_resources_.MergeFrom(from._impl_.monitored_resources_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (from._internal_has_documentation()) {
    _this->_internal_mutable_documentation()->::google::api::Documentation::MergeFrom(
        from._internal_documentation());
  }
  if (from._internal_has_quota()) {
    _this->_internal_mutable_quota()->::google::api::Quota::MergeFrom(
        from._internal_quota());
  }
  if (from._internal_has_authentication()) {
    _this->_internal_mutable_authentication()->::google::api::Authentication::MergeFrom(
        from._internal_authentication());
  }
  if (from._internal_has_usage()) {
    _this->_internal_mutable_usage()->::google::api::Usage::MergeFrom(
        from._internal_usage());
  }
  if (from._internal_has_monitoring()) {
    _this->_internal_mutable_monitoring()->::google::api::Monitoring::MergeFrom(
        from._internal_monitoring());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ServiceConfig::CopyFrom(const ServiceConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.serviceusage.v1.ServiceConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceConfig::IsInitialized() const {
  return true;
}

void ServiceConfig::InternalSwap(ServiceConfig* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.apis_.InternalSwap(&other->_impl_.apis_);
  _impl_.endpoints_.InternalSwap(&other->_impl_.endpoints_);
  _impl_.monitored_resources_.InternalSwap(&other->_impl_.monitored_resources_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.title_, lhs_arena,
      &other->_impl_.title_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ServiceConfig, _impl_.monitoring_)
      + sizeof(ServiceConfig::_impl_.monitoring_)
      - PROTOBUF_FIELD_OFFSET(ServiceConfig, _impl_.documentation_)>(
          reinterpret_cast<char*>(&_impl_.documentation_),
          reinterpret_cast<char*>(&other->_impl_.documentation_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ServiceConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fserviceusage_2fv1_2fresources_2eproto_getter, &descriptor_table_google_2fapi_2fserviceusage_2fv1_2fresources_2eproto_once,
      file_level_metadata_google_2fapi_2fserviceusage_2fv1_2fresources_2eproto[1]);
}

// ===================================================================

class OperationMetadata::_Internal {
 public:
};

OperationMetadata::OperationMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.serviceusage.v1.OperationMetadata)
}
OperationMetadata::OperationMetadata(const OperationMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OperationMetadata* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.resource_names_){from._impl_.resource_names_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.api.serviceusage.v1.OperationMetadata)
}

inline void OperationMetadata::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.resource_names_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

OperationMetadata::~OperationMetadata() {
  // @@protoc_insertion_point(destructor:google.api.serviceusage.v1.OperationMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OperationMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.resource_names_.~RepeatedPtrField();
}

void OperationMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OperationMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.serviceusage.v1.OperationMetadata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.resource_names_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OperationMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string resource_names = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_resource_names();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "google.api.serviceusage.v1.OperationMetadata.resource_names"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OperationMetadata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.serviceusage.v1.OperationMetadata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string resource_names = 2;
  for (int i = 0, n = this->_internal_resource_names_size(); i < n; i++) {
    const auto& s = this->_internal_resource_names(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.serviceusage.v1.OperationMetadata.resource_names");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.serviceusage.v1.OperationMetadata)
  return target;
}

size_t OperationMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.serviceusage.v1.OperationMetadata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string resource_names = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.resource_names_.size());
  for (int i = 0, n = _impl_.resource_names_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.resource_names_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OperationMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OperationMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OperationMetadata::GetClassData() const { return &_class_data_; }


void OperationMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OperationMetadata*>(&to_msg);
  auto& from = static_cast<const OperationMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.serviceusage.v1.OperationMetadata)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.resource_names_.MergeFrom(from._impl_.resource_names_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OperationMetadata::CopyFrom(const OperationMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.serviceusage.v1.OperationMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperationMetadata::IsInitialized() const {
  return true;
}

void OperationMetadata::InternalSwap(OperationMetadata* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.resource_names_.InternalSwap(&other->_impl_.resource_names_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OperationMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fserviceusage_2fv1_2fresources_2eproto_getter, &descriptor_table_google_2fapi_2fserviceusage_2fv1_2fresources_2eproto_once,
      file_level_metadata_google_2fapi_2fserviceusage_2fv1_2fresources_2eproto[2]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace serviceusage
}  // namespace api
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::google::api::serviceusage::v1::Service*
Arena::CreateMaybeMessage< ::google::api::serviceusage::v1::Service >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::serviceusage::v1::Service >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::serviceusage::v1::ServiceConfig*
Arena::CreateMaybeMessage< ::google::api::serviceusage::v1::ServiceConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::serviceusage::v1::ServiceConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::serviceusage::v1::OperationMetadata*
Arena::CreateMaybeMessage< ::google::api::serviceusage::v1::OperationMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::serviceusage::v1::OperationMetadata >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

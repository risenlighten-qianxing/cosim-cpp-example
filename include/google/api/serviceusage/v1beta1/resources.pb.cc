// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/serviceusage/v1beta1/resources.proto

#include "google/api/serviceusage/v1beta1/resources.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace google {
namespace api {
namespace serviceusage {
namespace v1beta1 {
PROTOBUF_CONSTEXPR Service::Service(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.parent_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.config_)*/nullptr
  , /*decltype(_impl_.state_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ServiceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServiceDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServiceDefaultTypeInternal() {}
  union {
    Service _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServiceDefaultTypeInternal _Service_default_instance_;
PROTOBUF_CONSTEXPR ServiceConfig::ServiceConfig(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.apis_)*/{}
  , /*decltype(_impl_.endpoints_)*/{}
  , /*decltype(_impl_.monitored_resources_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.title_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.documentation_)*/nullptr
  , /*decltype(_impl_.quota_)*/nullptr
  , /*decltype(_impl_.authentication_)*/nullptr
  , /*decltype(_impl_.usage_)*/nullptr
  , /*decltype(_impl_.monitoring_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ServiceConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServiceConfigDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServiceConfigDefaultTypeInternal() {}
  union {
    ServiceConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServiceConfigDefaultTypeInternal _ServiceConfig_default_instance_;
PROTOBUF_CONSTEXPR OperationMetadata::OperationMetadata(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.resource_names_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OperationMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OperationMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OperationMetadataDefaultTypeInternal() {}
  union {
    OperationMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OperationMetadataDefaultTypeInternal _OperationMetadata_default_instance_;
PROTOBUF_CONSTEXPR ConsumerQuotaMetric::ConsumerQuotaMetric(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.consumer_quota_limits_)*/{}
  , /*decltype(_impl_.descendant_consumer_quota_limits_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.display_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.metric_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.unit_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ConsumerQuotaMetricDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConsumerQuotaMetricDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConsumerQuotaMetricDefaultTypeInternal() {}
  union {
    ConsumerQuotaMetric _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConsumerQuotaMetricDefaultTypeInternal _ConsumerQuotaMetric_default_instance_;
PROTOBUF_CONSTEXPR ConsumerQuotaLimit::ConsumerQuotaLimit(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.quota_buckets_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.unit_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.metric_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.is_precise_)*/false
  , /*decltype(_impl_.allows_admin_overrides_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ConsumerQuotaLimitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConsumerQuotaLimitDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConsumerQuotaLimitDefaultTypeInternal() {}
  union {
    ConsumerQuotaLimit _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConsumerQuotaLimitDefaultTypeInternal _ConsumerQuotaLimit_default_instance_;
PROTOBUF_CONSTEXPR QuotaBucket_DimensionsEntry_DoNotUse::QuotaBucket_DimensionsEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct QuotaBucket_DimensionsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuotaBucket_DimensionsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuotaBucket_DimensionsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    QuotaBucket_DimensionsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuotaBucket_DimensionsEntry_DoNotUseDefaultTypeInternal _QuotaBucket_DimensionsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR QuotaBucket::QuotaBucket(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.dimensions_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.producer_override_)*/nullptr
  , /*decltype(_impl_.consumer_override_)*/nullptr
  , /*decltype(_impl_.admin_override_)*/nullptr
  , /*decltype(_impl_.effective_limit_)*/int64_t{0}
  , /*decltype(_impl_.default_limit_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QuotaBucketDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuotaBucketDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuotaBucketDefaultTypeInternal() {}
  union {
    QuotaBucket _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuotaBucketDefaultTypeInternal _QuotaBucket_default_instance_;
PROTOBUF_CONSTEXPR QuotaOverride_DimensionsEntry_DoNotUse::QuotaOverride_DimensionsEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct QuotaOverride_DimensionsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuotaOverride_DimensionsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuotaOverride_DimensionsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    QuotaOverride_DimensionsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuotaOverride_DimensionsEntry_DoNotUseDefaultTypeInternal _QuotaOverride_DimensionsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR QuotaOverride::QuotaOverride(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.dimensions_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.metric_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.unit_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.admin_override_ancestor_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.override_value_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QuotaOverrideDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuotaOverrideDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuotaOverrideDefaultTypeInternal() {}
  union {
    QuotaOverride _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuotaOverrideDefaultTypeInternal _QuotaOverride_default_instance_;
PROTOBUF_CONSTEXPR OverrideInlineSource::OverrideInlineSource(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.overrides_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OverrideInlineSourceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OverrideInlineSourceDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OverrideInlineSourceDefaultTypeInternal() {}
  union {
    OverrideInlineSource _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OverrideInlineSourceDefaultTypeInternal _OverrideInlineSource_default_instance_;
PROTOBUF_CONSTEXPR AdminQuotaPolicy_DimensionsEntry_DoNotUse::AdminQuotaPolicy_DimensionsEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct AdminQuotaPolicy_DimensionsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AdminQuotaPolicy_DimensionsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AdminQuotaPolicy_DimensionsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    AdminQuotaPolicy_DimensionsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AdminQuotaPolicy_DimensionsEntry_DoNotUseDefaultTypeInternal _AdminQuotaPolicy_DimensionsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR AdminQuotaPolicy::AdminQuotaPolicy(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.dimensions_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.metric_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.unit_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.container_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.policy_value_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AdminQuotaPolicyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AdminQuotaPolicyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AdminQuotaPolicyDefaultTypeInternal() {}
  union {
    AdminQuotaPolicy _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AdminQuotaPolicyDefaultTypeInternal _AdminQuotaPolicy_default_instance_;
PROTOBUF_CONSTEXPR ServiceIdentity::ServiceIdentity(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.email_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.unique_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ServiceIdentityDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServiceIdentityDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServiceIdentityDefaultTypeInternal() {}
  union {
    ServiceIdentity _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServiceIdentityDefaultTypeInternal _ServiceIdentity_default_instance_;
}  // namespace v1beta1
}  // namespace serviceusage
}  // namespace api
}  // namespace google
static ::_pb::Metadata file_level_metadata_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto[13];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto[3];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto = nullptr;

const uint32_t TableStruct_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::Service, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::Service, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::Service, _impl_.parent_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::Service, _impl_.config_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::Service, _impl_.state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::ServiceConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::ServiceConfig, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::ServiceConfig, _impl_.title_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::ServiceConfig, _impl_.apis_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::ServiceConfig, _impl_.documentation_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::ServiceConfig, _impl_.quota_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::ServiceConfig, _impl_.authentication_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::ServiceConfig, _impl_.usage_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::ServiceConfig, _impl_.endpoints_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::ServiceConfig, _impl_.monitored_resources_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::ServiceConfig, _impl_.monitoring_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::OperationMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::OperationMetadata, _impl_.resource_names_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::ConsumerQuotaMetric, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::ConsumerQuotaMetric, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::ConsumerQuotaMetric, _impl_.metric_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::ConsumerQuotaMetric, _impl_.display_name_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::ConsumerQuotaMetric, _impl_.consumer_quota_limits_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::ConsumerQuotaMetric, _impl_.descendant_consumer_quota_limits_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::ConsumerQuotaMetric, _impl_.unit_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::ConsumerQuotaLimit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::ConsumerQuotaLimit, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::ConsumerQuotaLimit, _impl_.metric_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::ConsumerQuotaLimit, _impl_.unit_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::ConsumerQuotaLimit, _impl_.is_precise_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::ConsumerQuotaLimit, _impl_.allows_admin_overrides_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::ConsumerQuotaLimit, _impl_.quota_buckets_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::QuotaBucket_DimensionsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::QuotaBucket_DimensionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::QuotaBucket_DimensionsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::QuotaBucket_DimensionsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::QuotaBucket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::QuotaBucket, _impl_.effective_limit_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::QuotaBucket, _impl_.default_limit_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::QuotaBucket, _impl_.producer_override_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::QuotaBucket, _impl_.consumer_override_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::QuotaBucket, _impl_.admin_override_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::QuotaBucket, _impl_.dimensions_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::QuotaOverride_DimensionsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::QuotaOverride_DimensionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::QuotaOverride_DimensionsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::QuotaOverride_DimensionsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::QuotaOverride, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::QuotaOverride, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::QuotaOverride, _impl_.override_value_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::QuotaOverride, _impl_.dimensions_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::QuotaOverride, _impl_.metric_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::QuotaOverride, _impl_.unit_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::QuotaOverride, _impl_.admin_override_ancestor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::OverrideInlineSource, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::OverrideInlineSource, _impl_.overrides_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::AdminQuotaPolicy_DimensionsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::AdminQuotaPolicy_DimensionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::AdminQuotaPolicy_DimensionsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::AdminQuotaPolicy_DimensionsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::AdminQuotaPolicy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::AdminQuotaPolicy, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::AdminQuotaPolicy, _impl_.policy_value_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::AdminQuotaPolicy, _impl_.dimensions_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::AdminQuotaPolicy, _impl_.metric_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::AdminQuotaPolicy, _impl_.unit_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::AdminQuotaPolicy, _impl_.container_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::ServiceIdentity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::ServiceIdentity, _impl_.email_),
  PROTOBUF_FIELD_OFFSET(::google::api::serviceusage::v1beta1::ServiceIdentity, _impl_.unique_id_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::google::api::serviceusage::v1beta1::Service)},
  { 10, -1, -1, sizeof(::google::api::serviceusage::v1beta1::ServiceConfig)},
  { 26, -1, -1, sizeof(::google::api::serviceusage::v1beta1::OperationMetadata)},
  { 33, -1, -1, sizeof(::google::api::serviceusage::v1beta1::ConsumerQuotaMetric)},
  { 45, -1, -1, sizeof(::google::api::serviceusage::v1beta1::ConsumerQuotaLimit)},
  { 57, 65, -1, sizeof(::google::api::serviceusage::v1beta1::QuotaBucket_DimensionsEntry_DoNotUse)},
  { 67, -1, -1, sizeof(::google::api::serviceusage::v1beta1::QuotaBucket)},
  { 79, 87, -1, sizeof(::google::api::serviceusage::v1beta1::QuotaOverride_DimensionsEntry_DoNotUse)},
  { 89, -1, -1, sizeof(::google::api::serviceusage::v1beta1::QuotaOverride)},
  { 101, -1, -1, sizeof(::google::api::serviceusage::v1beta1::OverrideInlineSource)},
  { 108, 116, -1, sizeof(::google::api::serviceusage::v1beta1::AdminQuotaPolicy_DimensionsEntry_DoNotUse)},
  { 118, -1, -1, sizeof(::google::api::serviceusage::v1beta1::AdminQuotaPolicy)},
  { 130, -1, -1, sizeof(::google::api::serviceusage::v1beta1::ServiceIdentity)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::google::api::serviceusage::v1beta1::_Service_default_instance_._instance,
  &::google::api::serviceusage::v1beta1::_ServiceConfig_default_instance_._instance,
  &::google::api::serviceusage::v1beta1::_OperationMetadata_default_instance_._instance,
  &::google::api::serviceusage::v1beta1::_ConsumerQuotaMetric_default_instance_._instance,
  &::google::api::serviceusage::v1beta1::_ConsumerQuotaLimit_default_instance_._instance,
  &::google::api::serviceusage::v1beta1::_QuotaBucket_DimensionsEntry_DoNotUse_default_instance_._instance,
  &::google::api::serviceusage::v1beta1::_QuotaBucket_default_instance_._instance,
  &::google::api::serviceusage::v1beta1::_QuotaOverride_DimensionsEntry_DoNotUse_default_instance_._instance,
  &::google::api::serviceusage::v1beta1::_QuotaOverride_default_instance_._instance,
  &::google::api::serviceusage::v1beta1::_OverrideInlineSource_default_instance_._instance,
  &::google::api::serviceusage::v1beta1::_AdminQuotaPolicy_DimensionsEntry_DoNotUse_default_instance_._instance,
  &::google::api::serviceusage::v1beta1::_AdminQuotaPolicy_default_instance_._instance,
  &::google::api::serviceusage::v1beta1::_ServiceIdentity_default_instance_._instance,
};

const char descriptor_table_protodef_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n/google/api/serviceusage/v1beta1/resour"
  "ces.proto\022\037google.api.serviceusage.v1bet"
  "a1\032\025google/api/auth.proto\032\036google/api/do"
  "cumentation.proto\032\031google/api/endpoint.p"
  "roto\032#google/api/monitored_resource.prot"
  "o\032\033google/api/monitoring.proto\032\026google/a"
  "pi/quota.proto\032\026google/api/usage.proto\032\031"
  "google/protobuf/api.proto\"\236\001\n\007Service\022\014\n"
  "\004name\030\001 \001(\t\022\016\n\006parent\030\005 \001(\t\022>\n\006config\030\002 "
  "\001(\0132..google.api.serviceusage.v1beta1.Se"
  "rviceConfig\0225\n\005state\030\004 \001(\0162&.google.api."
  "serviceusage.v1beta1.State\"\225\003\n\rServiceCo"
  "nfig\022\014\n\004name\030\001 \001(\t\022\r\n\005title\030\002 \001(\t\022\"\n\004api"
  "s\030\003 \003(\0132\024.google.protobuf.Api\0220\n\rdocumen"
  "tation\030\006 \001(\0132\031.google.api.Documentation\022"
  " \n\005quota\030\n \001(\0132\021.google.api.Quota\0222\n\016aut"
  "hentication\030\013 \001(\0132\032.google.api.Authentic"
  "ation\022 \n\005usage\030\017 \001(\0132\021.google.api.Usage\022"
  "\'\n\tendpoints\030\022 \003(\0132\024.google.api.Endpoint"
  "\022D\n\023monitored_resources\030\031 \003(\0132\'.google.a"
  "pi.MonitoredResourceDescriptor\022*\n\nmonito"
  "ring\030\034 \001(\0132\026.google.api.Monitoring\"+\n\021Op"
  "erationMetadata\022\026\n\016resource_names\030\002 \003(\t\""
  "\212\002\n\023ConsumerQuotaMetric\022\014\n\004name\030\001 \001(\t\022\016\n"
  "\006metric\030\004 \001(\t\022\024\n\014display_name\030\002 \001(\t\022R\n\025c"
  "onsumer_quota_limits\030\003 \003(\01323.google.api."
  "serviceusage.v1beta1.ConsumerQuotaLimit\022"
  "]\n descendant_consumer_quota_limits\030\006 \003("
  "\01323.google.api.serviceusage.v1beta1.Cons"
  "umerQuotaLimit\022\014\n\004unit\030\005 \001(\t\"\271\001\n\022Consume"
  "rQuotaLimit\022\014\n\004name\030\001 \001(\t\022\016\n\006metric\030\010 \001("
  "\t\022\014\n\004unit\030\002 \001(\t\022\022\n\nis_precise\030\003 \001(\010\022\036\n\026a"
  "llows_admin_overrides\030\007 \001(\010\022C\n\rquota_buc"
  "kets\030\t \003(\0132,.google.api.serviceusage.v1b"
  "eta1.QuotaBucket\"\240\003\n\013QuotaBucket\022\027\n\017effe"
  "ctive_limit\030\001 \001(\003\022\025\n\rdefault_limit\030\002 \001(\003"
  "\022I\n\021producer_override\030\003 \001(\0132..google.api"
  ".serviceusage.v1beta1.QuotaOverride\022I\n\021c"
  "onsumer_override\030\004 \001(\0132..google.api.serv"
  "iceusage.v1beta1.QuotaOverride\022F\n\016admin_"
  "override\030\005 \001(\0132..google.api.serviceusage"
  ".v1beta1.QuotaOverride\022P\n\ndimensions\030\006 \003"
  "(\0132<.google.api.serviceusage.v1beta1.Quo"
  "taBucket.DimensionsEntry\0321\n\017DimensionsEn"
  "try\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\373\001\n\r"
  "QuotaOverride\022\014\n\004name\030\001 \001(\t\022\026\n\016override_"
  "value\030\002 \001(\003\022R\n\ndimensions\030\003 \003(\0132>.google"
  ".api.serviceusage.v1beta1.QuotaOverride."
  "DimensionsEntry\022\016\n\006metric\030\004 \001(\t\022\014\n\004unit\030"
  "\005 \001(\t\022\037\n\027admin_override_ancestor\030\006 \001(\t\0321"
  "\n\017DimensionsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030"
  "\002 \001(\t:\0028\001\"Y\n\024OverrideInlineSource\022A\n\tove"
  "rrides\030\001 \003(\0132..google.api.serviceusage.v"
  "1beta1.QuotaOverride\"\361\001\n\020AdminQuotaPolic"
  "y\022\014\n\004name\030\001 \001(\t\022\024\n\014policy_value\030\002 \001(\003\022U\n"
  "\ndimensions\030\003 \003(\0132A.google.api.serviceus"
  "age.v1beta1.AdminQuotaPolicy.DimensionsE"
  "ntry\022\016\n\006metric\030\004 \001(\t\022\014\n\004unit\030\005 \001(\t\022\021\n\tco"
  "ntainer\030\006 \001(\t\0321\n\017DimensionsEntry\022\013\n\003key\030"
  "\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"3\n\017ServiceIdent"
  "ity\022\r\n\005email\030\001 \001(\t\022\021\n\tunique_id\030\002 \001(\t*9\n"
  "\005State\022\025\n\021STATE_UNSPECIFIED\020\000\022\014\n\010DISABLE"
  "D\020\001\022\013\n\007ENABLED\020\002*<\n\tQuotaView\022\032\n\026QUOTA_V"
  "IEW_UNSPECIFIED\020\000\022\t\n\005BASIC\020\001\022\010\n\004FULL\020\002*~"
  "\n\020QuotaSafetyCheck\022\"\n\036QUOTA_SAFETY_CHECK"
  "_UNSPECIFIED\020\000\022\036\n\032LIMIT_DECREASE_BELOW_U"
  "SAGE\020\001\022&\n\"LIMIT_DECREASE_PERCENTAGE_TOO_"
  "HIGH\020\002B\355\001\n#com.google.api.serviceusage.v"
  "1beta1B\016ResourcesProtoP\001ZKgoogle.golang."
  "org/genproto/googleapis/api/serviceusage"
  "/v1beta1;serviceusage\252\002\037Google.Api.Servi"
  "ceUsage.V1Beta1\312\002\037Google\\Api\\ServiceUsag"
  "e\\V1beta1\352\002\"Google::Api::ServiceUsage::V"
  "1beta1b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto_deps[8] = {
  &::descriptor_table_google_2fapi_2fauth_2eproto,
  &::descriptor_table_google_2fapi_2fdocumentation_2eproto,
  &::descriptor_table_google_2fapi_2fendpoint_2eproto,
  &::descriptor_table_google_2fapi_2fmonitored_5fresource_2eproto,
  &::descriptor_table_google_2fapi_2fmonitoring_2eproto,
  &::descriptor_table_google_2fapi_2fquota_2eproto,
  &::descriptor_table_google_2fapi_2fusage_2eproto,
  &::descriptor_table_google_2fprotobuf_2fapi_2eproto,
};
static ::_pbi::once_flag descriptor_table_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto = {
    false, false, 2934, descriptor_table_protodef_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto,
    "google/api/serviceusage/v1beta1/resources.proto",
    &descriptor_table_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto_once, descriptor_table_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto_deps, 8, 13,
    schemas, file_default_instances, TableStruct_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto::offsets,
    file_level_metadata_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto, file_level_enum_descriptors_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto,
    file_level_service_descriptors_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto_getter() {
  return &descriptor_table_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto(&descriptor_table_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto);
namespace google {
namespace api {
namespace serviceusage {
namespace v1beta1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* State_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto);
  return file_level_enum_descriptors_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto[0];
}
bool State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* QuotaView_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto);
  return file_level_enum_descriptors_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto[1];
}
bool QuotaView_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* QuotaSafetyCheck_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto);
  return file_level_enum_descriptors_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto[2];
}
bool QuotaSafetyCheck_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class Service::_Internal {
 public:
  static const ::google::api::serviceusage::v1beta1::ServiceConfig& config(const Service* msg);
};

const ::google::api::serviceusage::v1beta1::ServiceConfig&
Service::_Internal::config(const Service* msg) {
  return *msg->_impl_.config_;
}
Service::Service(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.serviceusage.v1beta1.Service)
}
Service::Service(const Service& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Service* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.parent_){}
    , decltype(_impl_.config_){nullptr}
    , decltype(_impl_.state_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.parent_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    _this->_impl_.parent_.Set(from._internal_parent(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_config()) {
    _this->_impl_.config_ = new ::google::api::serviceusage::v1beta1::ServiceConfig(*from._impl_.config_);
  }
  _this->_impl_.state_ = from._impl_.state_;
  // @@protoc_insertion_point(copy_constructor:google.api.serviceusage.v1beta1.Service)
}

inline void Service::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.parent_){}
    , decltype(_impl_.config_){nullptr}
    , decltype(_impl_.state_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.parent_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Service::~Service() {
  // @@protoc_insertion_point(destructor:google.api.serviceusage.v1beta1.Service)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Service::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.parent_.Destroy();
  if (this != internal_default_instance()) delete _impl_.config_;
}

void Service::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Service::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.serviceusage.v1beta1.Service)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.parent_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.config_ != nullptr) {
    delete _impl_.config_;
  }
  _impl_.config_ = nullptr;
  _impl_.state_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Service::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.serviceusage.v1beta1.Service.name"));
        } else
          goto handle_unusual;
        continue;
      // .google.api.serviceusage.v1beta1.ServiceConfig config = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.serviceusage.v1beta1.State state = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_state(static_cast<::google::api::serviceusage::v1beta1::State>(val));
        } else
          goto handle_unusual;
        continue;
      // string parent = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_parent();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.serviceusage.v1beta1.Service.parent"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Service::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.serviceusage.v1beta1.Service)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.serviceusage.v1beta1.Service.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .google.api.serviceusage.v1beta1.ServiceConfig config = 2;
  if (this->_internal_has_config()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::config(this),
        _Internal::config(this).GetCachedSize(), target, stream);
  }

  // .google.api.serviceusage.v1beta1.State state = 4;
  if (this->_internal_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_state(), target);
  }

  // string parent = 5;
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.serviceusage.v1beta1.Service.parent");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_parent(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.serviceusage.v1beta1.Service)
  return target;
}

size_t Service::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.serviceusage.v1beta1.Service)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string parent = 5;
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // .google.api.serviceusage.v1beta1.ServiceConfig config = 2;
  if (this->_internal_has_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.config_);
  }

  // .google.api.serviceusage.v1beta1.State state = 4;
  if (this->_internal_state() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_state());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Service::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Service::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Service::GetClassData() const { return &_class_data_; }


void Service::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Service*>(&to_msg);
  auto& from = static_cast<const Service&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.serviceusage.v1beta1.Service)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_parent().empty()) {
    _this->_internal_set_parent(from._internal_parent());
  }
  if (from._internal_has_config()) {
    _this->_internal_mutable_config()->::google::api::serviceusage::v1beta1::ServiceConfig::MergeFrom(
        from._internal_config());
  }
  if (from._internal_state() != 0) {
    _this->_internal_set_state(from._internal_state());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Service::CopyFrom(const Service& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.serviceusage.v1beta1.Service)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Service::IsInitialized() const {
  return true;
}

void Service::InternalSwap(Service* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.parent_, lhs_arena,
      &other->_impl_.parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Service, _impl_.state_)
      + sizeof(Service::_impl_.state_)
      - PROTOBUF_FIELD_OFFSET(Service, _impl_.config_)>(
          reinterpret_cast<char*>(&_impl_.config_),
          reinterpret_cast<char*>(&other->_impl_.config_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Service::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto_getter, &descriptor_table_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto_once,
      file_level_metadata_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto[0]);
}

// ===================================================================

class ServiceConfig::_Internal {
 public:
  static const ::google::api::Documentation& documentation(const ServiceConfig* msg);
  static const ::google::api::Quota& quota(const ServiceConfig* msg);
  static const ::google::api::Authentication& authentication(const ServiceConfig* msg);
  static const ::google::api::Usage& usage(const ServiceConfig* msg);
  static const ::google::api::Monitoring& monitoring(const ServiceConfig* msg);
};

const ::google::api::Documentation&
ServiceConfig::_Internal::documentation(const ServiceConfig* msg) {
  return *msg->_impl_.documentation_;
}
const ::google::api::Quota&
ServiceConfig::_Internal::quota(const ServiceConfig* msg) {
  return *msg->_impl_.quota_;
}
const ::google::api::Authentication&
ServiceConfig::_Internal::authentication(const ServiceConfig* msg) {
  return *msg->_impl_.authentication_;
}
const ::google::api::Usage&
ServiceConfig::_Internal::usage(const ServiceConfig* msg) {
  return *msg->_impl_.usage_;
}
const ::google::api::Monitoring&
ServiceConfig::_Internal::monitoring(const ServiceConfig* msg) {
  return *msg->_impl_.monitoring_;
}
void ServiceConfig::clear_apis() {
  _impl_.apis_.Clear();
}
void ServiceConfig::clear_documentation() {
  if (GetArenaForAllocation() == nullptr && _impl_.documentation_ != nullptr) {
    delete _impl_.documentation_;
  }
  _impl_.documentation_ = nullptr;
}
void ServiceConfig::clear_quota() {
  if (GetArenaForAllocation() == nullptr && _impl_.quota_ != nullptr) {
    delete _impl_.quota_;
  }
  _impl_.quota_ = nullptr;
}
void ServiceConfig::clear_authentication() {
  if (GetArenaForAllocation() == nullptr && _impl_.authentication_ != nullptr) {
    delete _impl_.authentication_;
  }
  _impl_.authentication_ = nullptr;
}
void ServiceConfig::clear_usage() {
  if (GetArenaForAllocation() == nullptr && _impl_.usage_ != nullptr) {
    delete _impl_.usage_;
  }
  _impl_.usage_ = nullptr;
}
void ServiceConfig::clear_endpoints() {
  _impl_.endpoints_.Clear();
}
void ServiceConfig::clear_monitored_resources() {
  _impl_.monitored_resources_.Clear();
}
void ServiceConfig::clear_monitoring() {
  if (GetArenaForAllocation() == nullptr && _impl_.monitoring_ != nullptr) {
    delete _impl_.monitoring_;
  }
  _impl_.monitoring_ = nullptr;
}
ServiceConfig::ServiceConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.serviceusage.v1beta1.ServiceConfig)
}
ServiceConfig::ServiceConfig(const ServiceConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ServiceConfig* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.apis_){from._impl_.apis_}
    , decltype(_impl_.endpoints_){from._impl_.endpoints_}
    , decltype(_impl_.monitored_resources_){from._impl_.monitored_resources_}
    , decltype(_impl_.name_){}
    , decltype(_impl_.title_){}
    , decltype(_impl_.documentation_){nullptr}
    , decltype(_impl_.quota_){nullptr}
    , decltype(_impl_.authentication_){nullptr}
    , decltype(_impl_.usage_){nullptr}
    , decltype(_impl_.monitoring_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.title_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_title().empty()) {
    _this->_impl_.title_.Set(from._internal_title(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_documentation()) {
    _this->_impl_.documentation_ = new ::google::api::Documentation(*from._impl_.documentation_);
  }
  if (from._internal_has_quota()) {
    _this->_impl_.quota_ = new ::google::api::Quota(*from._impl_.quota_);
  }
  if (from._internal_has_authentication()) {
    _this->_impl_.authentication_ = new ::google::api::Authentication(*from._impl_.authentication_);
  }
  if (from._internal_has_usage()) {
    _this->_impl_.usage_ = new ::google::api::Usage(*from._impl_.usage_);
  }
  if (from._internal_has_monitoring()) {
    _this->_impl_.monitoring_ = new ::google::api::Monitoring(*from._impl_.monitoring_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.serviceusage.v1beta1.ServiceConfig)
}

inline void ServiceConfig::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.apis_){arena}
    , decltype(_impl_.endpoints_){arena}
    , decltype(_impl_.monitored_resources_){arena}
    , decltype(_impl_.name_){}
    , decltype(_impl_.title_){}
    , decltype(_impl_.documentation_){nullptr}
    , decltype(_impl_.quota_){nullptr}
    , decltype(_impl_.authentication_){nullptr}
    , decltype(_impl_.usage_){nullptr}
    , decltype(_impl_.monitoring_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.title_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ServiceConfig::~ServiceConfig() {
  // @@protoc_insertion_point(destructor:google.api.serviceusage.v1beta1.ServiceConfig)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ServiceConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.apis_.~RepeatedPtrField();
  _impl_.endpoints_.~RepeatedPtrField();
  _impl_.monitored_resources_.~RepeatedPtrField();
  _impl_.name_.Destroy();
  _impl_.title_.Destroy();
  if (this != internal_default_instance()) delete _impl_.documentation_;
  if (this != internal_default_instance()) delete _impl_.quota_;
  if (this != internal_default_instance()) delete _impl_.authentication_;
  if (this != internal_default_instance()) delete _impl_.usage_;
  if (this != internal_default_instance()) delete _impl_.monitoring_;
}

void ServiceConfig::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ServiceConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.serviceusage.v1beta1.ServiceConfig)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.apis_.Clear();
  _impl_.endpoints_.Clear();
  _impl_.monitored_resources_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.title_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.documentation_ != nullptr) {
    delete _impl_.documentation_;
  }
  _impl_.documentation_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.quota_ != nullptr) {
    delete _impl_.quota_;
  }
  _impl_.quota_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.authentication_ != nullptr) {
    delete _impl_.authentication_;
  }
  _impl_.authentication_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.usage_ != nullptr) {
    delete _impl_.usage_;
  }
  _impl_.usage_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.monitoring_ != nullptr) {
    delete _impl_.monitoring_;
  }
  _impl_.monitoring_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServiceConfig::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.serviceusage.v1beta1.ServiceConfig.name"));
        } else
          goto handle_unusual;
        continue;
      // string title = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_title();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.serviceusage.v1beta1.ServiceConfig.title"));
        } else
          goto handle_unusual;
        continue;
      // repeated .google.protobuf.Api apis = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_apis(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .google.api.Documentation documentation = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_documentation(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.Quota quota = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_quota(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.Authentication authentication = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_authentication(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.Usage usage = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_usage(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .google.api.Endpoint endpoints = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 146)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_endpoints(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<146>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .google.api.MonitoredResourceDescriptor monitored_resources = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_monitored_resources(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<202>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .google.api.Monitoring monitoring = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 226)) {
          ptr = ctx->ParseMessage(_internal_mutable_monitoring(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ServiceConfig::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.serviceusage.v1beta1.ServiceConfig)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.serviceusage.v1beta1.ServiceConfig.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string title = 2;
  if (!this->_internal_title().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_title().data(), static_cast<int>(this->_internal_title().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.serviceusage.v1beta1.ServiceConfig.title");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_title(), target);
  }

  // repeated .google.protobuf.Api apis = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_apis_size()); i < n; i++) {
    const auto& repfield = this->_internal_apis(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .google.api.Documentation documentation = 6;
  if (this->_internal_has_documentation()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::documentation(this),
        _Internal::documentation(this).GetCachedSize(), target, stream);
  }

  // .google.api.Quota quota = 10;
  if (this->_internal_has_quota()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::quota(this),
        _Internal::quota(this).GetCachedSize(), target, stream);
  }

  // .google.api.Authentication authentication = 11;
  if (this->_internal_has_authentication()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::authentication(this),
        _Internal::authentication(this).GetCachedSize(), target, stream);
  }

  // .google.api.Usage usage = 15;
  if (this->_internal_has_usage()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(15, _Internal::usage(this),
        _Internal::usage(this).GetCachedSize(), target, stream);
  }

  // repeated .google.api.Endpoint endpoints = 18;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_endpoints_size()); i < n; i++) {
    const auto& repfield = this->_internal_endpoints(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(18, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .google.api.MonitoredResourceDescriptor monitored_resources = 25;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_monitored_resources_size()); i < n; i++) {
    const auto& repfield = this->_internal_monitored_resources(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(25, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .google.api.Monitoring monitoring = 28;
  if (this->_internal_has_monitoring()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(28, _Internal::monitoring(this),
        _Internal::monitoring(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.serviceusage.v1beta1.ServiceConfig)
  return target;
}

size_t ServiceConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.serviceusage.v1beta1.ServiceConfig)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.protobuf.Api apis = 3;
  total_size += 1UL * this->_internal_apis_size();
  for (const auto& msg : this->_impl_.apis_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .google.api.Endpoint endpoints = 18;
  total_size += 2UL * this->_internal_endpoints_size();
  for (const auto& msg : this->_impl_.endpoints_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .google.api.MonitoredResourceDescriptor monitored_resources = 25;
  total_size += 2UL * this->_internal_monitored_resources_size();
  for (const auto& msg : this->_impl_.monitored_resources_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string title = 2;
  if (!this->_internal_title().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_title());
  }

  // .google.api.Documentation documentation = 6;
  if (this->_internal_has_documentation()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.documentation_);
  }

  // .google.api.Quota quota = 10;
  if (this->_internal_has_quota()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.quota_);
  }

  // .google.api.Authentication authentication = 11;
  if (this->_internal_has_authentication()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.authentication_);
  }

  // .google.api.Usage usage = 15;
  if (this->_internal_has_usage()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.usage_);
  }

  // .google.api.Monitoring monitoring = 28;
  if (this->_internal_has_monitoring()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.monitoring_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ServiceConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ServiceConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ServiceConfig::GetClassData() const { return &_class_data_; }


void ServiceConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ServiceConfig*>(&to_msg);
  auto& from = static_cast<const ServiceConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.serviceusage.v1beta1.ServiceConfig)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.apis_.MergeFrom(from._impl_.apis_);
  _this->_impl_.endpoints_.MergeFrom(from._impl_.endpoints_);
  _this->_impl_.monitored_resources_.MergeFrom(from._impl_.monitored_resources_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (from._internal_has_documentation()) {
    _this->_internal_mutable_documentation()->::google::api::Documentation::MergeFrom(
        from._internal_documentation());
  }
  if (from._internal_has_quota()) {
    _this->_internal_mutable_quota()->::google::api::Quota::MergeFrom(
        from._internal_quota());
  }
  if (from._internal_has_authentication()) {
    _this->_internal_mutable_authentication()->::google::api::Authentication::MergeFrom(
        from._internal_authentication());
  }
  if (from._internal_has_usage()) {
    _this->_internal_mutable_usage()->::google::api::Usage::MergeFrom(
        from._internal_usage());
  }
  if (from._internal_has_monitoring()) {
    _this->_internal_mutable_monitoring()->::google::api::Monitoring::MergeFrom(
        from._internal_monitoring());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ServiceConfig::CopyFrom(const ServiceConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.serviceusage.v1beta1.ServiceConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceConfig::IsInitialized() const {
  return true;
}

void ServiceConfig::InternalSwap(ServiceConfig* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.apis_.InternalSwap(&other->_impl_.apis_);
  _impl_.endpoints_.InternalSwap(&other->_impl_.endpoints_);
  _impl_.monitored_resources_.InternalSwap(&other->_impl_.monitored_resources_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.title_, lhs_arena,
      &other->_impl_.title_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ServiceConfig, _impl_.monitoring_)
      + sizeof(ServiceConfig::_impl_.monitoring_)
      - PROTOBUF_FIELD_OFFSET(ServiceConfig, _impl_.documentation_)>(
          reinterpret_cast<char*>(&_impl_.documentation_),
          reinterpret_cast<char*>(&other->_impl_.documentation_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ServiceConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto_getter, &descriptor_table_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto_once,
      file_level_metadata_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto[1]);
}

// ===================================================================

class OperationMetadata::_Internal {
 public:
};

OperationMetadata::OperationMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.serviceusage.v1beta1.OperationMetadata)
}
OperationMetadata::OperationMetadata(const OperationMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OperationMetadata* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.resource_names_){from._impl_.resource_names_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.api.serviceusage.v1beta1.OperationMetadata)
}

inline void OperationMetadata::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.resource_names_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

OperationMetadata::~OperationMetadata() {
  // @@protoc_insertion_point(destructor:google.api.serviceusage.v1beta1.OperationMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OperationMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.resource_names_.~RepeatedPtrField();
}

void OperationMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OperationMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.serviceusage.v1beta1.OperationMetadata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.resource_names_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OperationMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string resource_names = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_resource_names();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "google.api.serviceusage.v1beta1.OperationMetadata.resource_names"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OperationMetadata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.serviceusage.v1beta1.OperationMetadata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string resource_names = 2;
  for (int i = 0, n = this->_internal_resource_names_size(); i < n; i++) {
    const auto& s = this->_internal_resource_names(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.serviceusage.v1beta1.OperationMetadata.resource_names");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.serviceusage.v1beta1.OperationMetadata)
  return target;
}

size_t OperationMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.serviceusage.v1beta1.OperationMetadata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string resource_names = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.resource_names_.size());
  for (int i = 0, n = _impl_.resource_names_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.resource_names_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OperationMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OperationMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OperationMetadata::GetClassData() const { return &_class_data_; }


void OperationMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OperationMetadata*>(&to_msg);
  auto& from = static_cast<const OperationMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.serviceusage.v1beta1.OperationMetadata)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.resource_names_.MergeFrom(from._impl_.resource_names_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OperationMetadata::CopyFrom(const OperationMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.serviceusage.v1beta1.OperationMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperationMetadata::IsInitialized() const {
  return true;
}

void OperationMetadata::InternalSwap(OperationMetadata* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.resource_names_.InternalSwap(&other->_impl_.resource_names_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OperationMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto_getter, &descriptor_table_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto_once,
      file_level_metadata_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto[2]);
}

// ===================================================================

class ConsumerQuotaMetric::_Internal {
 public:
};

ConsumerQuotaMetric::ConsumerQuotaMetric(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.serviceusage.v1beta1.ConsumerQuotaMetric)
}
ConsumerQuotaMetric::ConsumerQuotaMetric(const ConsumerQuotaMetric& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ConsumerQuotaMetric* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.consumer_quota_limits_){from._impl_.consumer_quota_limits_}
    , decltype(_impl_.descendant_consumer_quota_limits_){from._impl_.descendant_consumer_quota_limits_}
    , decltype(_impl_.name_){}
    , decltype(_impl_.display_name_){}
    , decltype(_impl_.metric_){}
    , decltype(_impl_.unit_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.display_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.display_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_display_name().empty()) {
    _this->_impl_.display_name_.Set(from._internal_display_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.metric_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.metric_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_metric().empty()) {
    _this->_impl_.metric_.Set(from._internal_metric(), 
      _this->GetArenaForAllocation());
  }
  _impl_.unit_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.unit_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_unit().empty()) {
    _this->_impl_.unit_.Set(from._internal_unit(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.serviceusage.v1beta1.ConsumerQuotaMetric)
}

inline void ConsumerQuotaMetric::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.consumer_quota_limits_){arena}
    , decltype(_impl_.descendant_consumer_quota_limits_){arena}
    , decltype(_impl_.name_){}
    , decltype(_impl_.display_name_){}
    , decltype(_impl_.metric_){}
    , decltype(_impl_.unit_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.display_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.display_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.metric_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.metric_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.unit_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.unit_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ConsumerQuotaMetric::~ConsumerQuotaMetric() {
  // @@protoc_insertion_point(destructor:google.api.serviceusage.v1beta1.ConsumerQuotaMetric)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ConsumerQuotaMetric::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.consumer_quota_limits_.~RepeatedPtrField();
  _impl_.descendant_consumer_quota_limits_.~RepeatedPtrField();
  _impl_.name_.Destroy();
  _impl_.display_name_.Destroy();
  _impl_.metric_.Destroy();
  _impl_.unit_.Destroy();
}

void ConsumerQuotaMetric::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ConsumerQuotaMetric::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.serviceusage.v1beta1.ConsumerQuotaMetric)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.consumer_quota_limits_.Clear();
  _impl_.descendant_consumer_quota_limits_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.display_name_.ClearToEmpty();
  _impl_.metric_.ClearToEmpty();
  _impl_.unit_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ConsumerQuotaMetric::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.serviceusage.v1beta1.ConsumerQuotaMetric.name"));
        } else
          goto handle_unusual;
        continue;
      // string display_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_display_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.serviceusage.v1beta1.ConsumerQuotaMetric.display_name"));
        } else
          goto handle_unusual;
        continue;
      // repeated .google.api.serviceusage.v1beta1.ConsumerQuotaLimit consumer_quota_limits = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_consumer_quota_limits(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string metric = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_metric();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.serviceusage.v1beta1.ConsumerQuotaMetric.metric"));
        } else
          goto handle_unusual;
        continue;
      // string unit = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_unit();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.serviceusage.v1beta1.ConsumerQuotaMetric.unit"));
        } else
          goto handle_unusual;
        continue;
      // repeated .google.api.serviceusage.v1beta1.ConsumerQuotaLimit descendant_consumer_quota_limits = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_descendant_consumer_quota_limits(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ConsumerQuotaMetric::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.serviceusage.v1beta1.ConsumerQuotaMetric)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.serviceusage.v1beta1.ConsumerQuotaMetric.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string display_name = 2;
  if (!this->_internal_display_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_display_name().data(), static_cast<int>(this->_internal_display_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.serviceusage.v1beta1.ConsumerQuotaMetric.display_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_display_name(), target);
  }

  // repeated .google.api.serviceusage.v1beta1.ConsumerQuotaLimit consumer_quota_limits = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_consumer_quota_limits_size()); i < n; i++) {
    const auto& repfield = this->_internal_consumer_quota_limits(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string metric = 4;
  if (!this->_internal_metric().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_metric().data(), static_cast<int>(this->_internal_metric().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.serviceusage.v1beta1.ConsumerQuotaMetric.metric");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_metric(), target);
  }

  // string unit = 5;
  if (!this->_internal_unit().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_unit().data(), static_cast<int>(this->_internal_unit().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.serviceusage.v1beta1.ConsumerQuotaMetric.unit");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_unit(), target);
  }

  // repeated .google.api.serviceusage.v1beta1.ConsumerQuotaLimit descendant_consumer_quota_limits = 6;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_descendant_consumer_quota_limits_size()); i < n; i++) {
    const auto& repfield = this->_internal_descendant_consumer_quota_limits(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.serviceusage.v1beta1.ConsumerQuotaMetric)
  return target;
}

size_t ConsumerQuotaMetric::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.serviceusage.v1beta1.ConsumerQuotaMetric)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.serviceusage.v1beta1.ConsumerQuotaLimit consumer_quota_limits = 3;
  total_size += 1UL * this->_internal_consumer_quota_limits_size();
  for (const auto& msg : this->_impl_.consumer_quota_limits_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .google.api.serviceusage.v1beta1.ConsumerQuotaLimit descendant_consumer_quota_limits = 6;
  total_size += 1UL * this->_internal_descendant_consumer_quota_limits_size();
  for (const auto& msg : this->_impl_.descendant_consumer_quota_limits_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string display_name = 2;
  if (!this->_internal_display_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_display_name());
  }

  // string metric = 4;
  if (!this->_internal_metric().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_metric());
  }

  // string unit = 5;
  if (!this->_internal_unit().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_unit());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ConsumerQuotaMetric::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ConsumerQuotaMetric::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ConsumerQuotaMetric::GetClassData() const { return &_class_data_; }


void ConsumerQuotaMetric::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ConsumerQuotaMetric*>(&to_msg);
  auto& from = static_cast<const ConsumerQuotaMetric&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.serviceusage.v1beta1.ConsumerQuotaMetric)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.consumer_quota_limits_.MergeFrom(from._impl_.consumer_quota_limits_);
  _this->_impl_.descendant_consumer_quota_limits_.MergeFrom(from._impl_.descendant_consumer_quota_limits_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_display_name().empty()) {
    _this->_internal_set_display_name(from._internal_display_name());
  }
  if (!from._internal_metric().empty()) {
    _this->_internal_set_metric(from._internal_metric());
  }
  if (!from._internal_unit().empty()) {
    _this->_internal_set_unit(from._internal_unit());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ConsumerQuotaMetric::CopyFrom(const ConsumerQuotaMetric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.serviceusage.v1beta1.ConsumerQuotaMetric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConsumerQuotaMetric::IsInitialized() const {
  return true;
}

void ConsumerQuotaMetric::InternalSwap(ConsumerQuotaMetric* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.consumer_quota_limits_.InternalSwap(&other->_impl_.consumer_quota_limits_);
  _impl_.descendant_consumer_quota_limits_.InternalSwap(&other->_impl_.descendant_consumer_quota_limits_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.display_name_, lhs_arena,
      &other->_impl_.display_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.metric_, lhs_arena,
      &other->_impl_.metric_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.unit_, lhs_arena,
      &other->_impl_.unit_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ConsumerQuotaMetric::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto_getter, &descriptor_table_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto_once,
      file_level_metadata_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto[3]);
}

// ===================================================================

class ConsumerQuotaLimit::_Internal {
 public:
};

ConsumerQuotaLimit::ConsumerQuotaLimit(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.serviceusage.v1beta1.ConsumerQuotaLimit)
}
ConsumerQuotaLimit::ConsumerQuotaLimit(const ConsumerQuotaLimit& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ConsumerQuotaLimit* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.quota_buckets_){from._impl_.quota_buckets_}
    , decltype(_impl_.name_){}
    , decltype(_impl_.unit_){}
    , decltype(_impl_.metric_){}
    , decltype(_impl_.is_precise_){}
    , decltype(_impl_.allows_admin_overrides_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.unit_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.unit_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_unit().empty()) {
    _this->_impl_.unit_.Set(from._internal_unit(), 
      _this->GetArenaForAllocation());
  }
  _impl_.metric_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.metric_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_metric().empty()) {
    _this->_impl_.metric_.Set(from._internal_metric(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.is_precise_, &from._impl_.is_precise_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.allows_admin_overrides_) -
    reinterpret_cast<char*>(&_impl_.is_precise_)) + sizeof(_impl_.allows_admin_overrides_));
  // @@protoc_insertion_point(copy_constructor:google.api.serviceusage.v1beta1.ConsumerQuotaLimit)
}

inline void ConsumerQuotaLimit::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.quota_buckets_){arena}
    , decltype(_impl_.name_){}
    , decltype(_impl_.unit_){}
    , decltype(_impl_.metric_){}
    , decltype(_impl_.is_precise_){false}
    , decltype(_impl_.allows_admin_overrides_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.unit_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.unit_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.metric_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.metric_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ConsumerQuotaLimit::~ConsumerQuotaLimit() {
  // @@protoc_insertion_point(destructor:google.api.serviceusage.v1beta1.ConsumerQuotaLimit)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ConsumerQuotaLimit::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.quota_buckets_.~RepeatedPtrField();
  _impl_.name_.Destroy();
  _impl_.unit_.Destroy();
  _impl_.metric_.Destroy();
}

void ConsumerQuotaLimit::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ConsumerQuotaLimit::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.serviceusage.v1beta1.ConsumerQuotaLimit)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.quota_buckets_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.unit_.ClearToEmpty();
  _impl_.metric_.ClearToEmpty();
  ::memset(&_impl_.is_precise_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.allows_admin_overrides_) -
      reinterpret_cast<char*>(&_impl_.is_precise_)) + sizeof(_impl_.allows_admin_overrides_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ConsumerQuotaLimit::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.serviceusage.v1beta1.ConsumerQuotaLimit.name"));
        } else
          goto handle_unusual;
        continue;
      // string unit = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_unit();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.serviceusage.v1beta1.ConsumerQuotaLimit.unit"));
        } else
          goto handle_unusual;
        continue;
      // bool is_precise = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.is_precise_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool allows_admin_overrides = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.allows_admin_overrides_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string metric = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_metric();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.serviceusage.v1beta1.ConsumerQuotaLimit.metric"));
        } else
          goto handle_unusual;
        continue;
      // repeated .google.api.serviceusage.v1beta1.QuotaBucket quota_buckets = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_quota_buckets(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ConsumerQuotaLimit::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.serviceusage.v1beta1.ConsumerQuotaLimit)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.serviceusage.v1beta1.ConsumerQuotaLimit.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string unit = 2;
  if (!this->_internal_unit().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_unit().data(), static_cast<int>(this->_internal_unit().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.serviceusage.v1beta1.ConsumerQuotaLimit.unit");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_unit(), target);
  }

  // bool is_precise = 3;
  if (this->_internal_is_precise() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_is_precise(), target);
  }

  // bool allows_admin_overrides = 7;
  if (this->_internal_allows_admin_overrides() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(7, this->_internal_allows_admin_overrides(), target);
  }

  // string metric = 8;
  if (!this->_internal_metric().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_metric().data(), static_cast<int>(this->_internal_metric().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.serviceusage.v1beta1.ConsumerQuotaLimit.metric");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_metric(), target);
  }

  // repeated .google.api.serviceusage.v1beta1.QuotaBucket quota_buckets = 9;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_quota_buckets_size()); i < n; i++) {
    const auto& repfield = this->_internal_quota_buckets(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(9, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.serviceusage.v1beta1.ConsumerQuotaLimit)
  return target;
}

size_t ConsumerQuotaLimit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.serviceusage.v1beta1.ConsumerQuotaLimit)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.serviceusage.v1beta1.QuotaBucket quota_buckets = 9;
  total_size += 1UL * this->_internal_quota_buckets_size();
  for (const auto& msg : this->_impl_.quota_buckets_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string unit = 2;
  if (!this->_internal_unit().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_unit());
  }

  // string metric = 8;
  if (!this->_internal_metric().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_metric());
  }

  // bool is_precise = 3;
  if (this->_internal_is_precise() != 0) {
    total_size += 1 + 1;
  }

  // bool allows_admin_overrides = 7;
  if (this->_internal_allows_admin_overrides() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ConsumerQuotaLimit::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ConsumerQuotaLimit::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ConsumerQuotaLimit::GetClassData() const { return &_class_data_; }


void ConsumerQuotaLimit::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ConsumerQuotaLimit*>(&to_msg);
  auto& from = static_cast<const ConsumerQuotaLimit&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.serviceusage.v1beta1.ConsumerQuotaLimit)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.quota_buckets_.MergeFrom(from._impl_.quota_buckets_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_unit().empty()) {
    _this->_internal_set_unit(from._internal_unit());
  }
  if (!from._internal_metric().empty()) {
    _this->_internal_set_metric(from._internal_metric());
  }
  if (from._internal_is_precise() != 0) {
    _this->_internal_set_is_precise(from._internal_is_precise());
  }
  if (from._internal_allows_admin_overrides() != 0) {
    _this->_internal_set_allows_admin_overrides(from._internal_allows_admin_overrides());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ConsumerQuotaLimit::CopyFrom(const ConsumerQuotaLimit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.serviceusage.v1beta1.ConsumerQuotaLimit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConsumerQuotaLimit::IsInitialized() const {
  return true;
}

void ConsumerQuotaLimit::InternalSwap(ConsumerQuotaLimit* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.quota_buckets_.InternalSwap(&other->_impl_.quota_buckets_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.unit_, lhs_arena,
      &other->_impl_.unit_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.metric_, lhs_arena,
      &other->_impl_.metric_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ConsumerQuotaLimit, _impl_.allows_admin_overrides_)
      + sizeof(ConsumerQuotaLimit::_impl_.allows_admin_overrides_)
      - PROTOBUF_FIELD_OFFSET(ConsumerQuotaLimit, _impl_.is_precise_)>(
          reinterpret_cast<char*>(&_impl_.is_precise_),
          reinterpret_cast<char*>(&other->_impl_.is_precise_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ConsumerQuotaLimit::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto_getter, &descriptor_table_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto_once,
      file_level_metadata_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto[4]);
}

// ===================================================================

QuotaBucket_DimensionsEntry_DoNotUse::QuotaBucket_DimensionsEntry_DoNotUse() {}
QuotaBucket_DimensionsEntry_DoNotUse::QuotaBucket_DimensionsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void QuotaBucket_DimensionsEntry_DoNotUse::MergeFrom(const QuotaBucket_DimensionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata QuotaBucket_DimensionsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto_getter, &descriptor_table_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto_once,
      file_level_metadata_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto[5]);
}

// ===================================================================

class QuotaBucket::_Internal {
 public:
  static const ::google::api::serviceusage::v1beta1::QuotaOverride& producer_override(const QuotaBucket* msg);
  static const ::google::api::serviceusage::v1beta1::QuotaOverride& consumer_override(const QuotaBucket* msg);
  static const ::google::api::serviceusage::v1beta1::QuotaOverride& admin_override(const QuotaBucket* msg);
};

const ::google::api::serviceusage::v1beta1::QuotaOverride&
QuotaBucket::_Internal::producer_override(const QuotaBucket* msg) {
  return *msg->_impl_.producer_override_;
}
const ::google::api::serviceusage::v1beta1::QuotaOverride&
QuotaBucket::_Internal::consumer_override(const QuotaBucket* msg) {
  return *msg->_impl_.consumer_override_;
}
const ::google::api::serviceusage::v1beta1::QuotaOverride&
QuotaBucket::_Internal::admin_override(const QuotaBucket* msg) {
  return *msg->_impl_.admin_override_;
}
QuotaBucket::QuotaBucket(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &QuotaBucket::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:google.api.serviceusage.v1beta1.QuotaBucket)
}
QuotaBucket::QuotaBucket(const QuotaBucket& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QuotaBucket* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.dimensions_)*/{}
    , decltype(_impl_.producer_override_){nullptr}
    , decltype(_impl_.consumer_override_){nullptr}
    , decltype(_impl_.admin_override_){nullptr}
    , decltype(_impl_.effective_limit_){}
    , decltype(_impl_.default_limit_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.dimensions_.MergeFrom(from._impl_.dimensions_);
  if (from._internal_has_producer_override()) {
    _this->_impl_.producer_override_ = new ::google::api::serviceusage::v1beta1::QuotaOverride(*from._impl_.producer_override_);
  }
  if (from._internal_has_consumer_override()) {
    _this->_impl_.consumer_override_ = new ::google::api::serviceusage::v1beta1::QuotaOverride(*from._impl_.consumer_override_);
  }
  if (from._internal_has_admin_override()) {
    _this->_impl_.admin_override_ = new ::google::api::serviceusage::v1beta1::QuotaOverride(*from._impl_.admin_override_);
  }
  ::memcpy(&_impl_.effective_limit_, &from._impl_.effective_limit_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.default_limit_) -
    reinterpret_cast<char*>(&_impl_.effective_limit_)) + sizeof(_impl_.default_limit_));
  // @@protoc_insertion_point(copy_constructor:google.api.serviceusage.v1beta1.QuotaBucket)
}

inline void QuotaBucket::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.dimensions_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.producer_override_){nullptr}
    , decltype(_impl_.consumer_override_){nullptr}
    , decltype(_impl_.admin_override_){nullptr}
    , decltype(_impl_.effective_limit_){int64_t{0}}
    , decltype(_impl_.default_limit_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QuotaBucket::~QuotaBucket() {
  // @@protoc_insertion_point(destructor:google.api.serviceusage.v1beta1.QuotaBucket)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void QuotaBucket::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.dimensions_.Destruct();
  _impl_.dimensions_.~MapField();
  if (this != internal_default_instance()) delete _impl_.producer_override_;
  if (this != internal_default_instance()) delete _impl_.consumer_override_;
  if (this != internal_default_instance()) delete _impl_.admin_override_;
}

void QuotaBucket::ArenaDtor(void* object) {
  QuotaBucket* _this = reinterpret_cast< QuotaBucket* >(object);
  _this->_impl_.dimensions_.Destruct();
}
void QuotaBucket::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QuotaBucket::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.serviceusage.v1beta1.QuotaBucket)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dimensions_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.producer_override_ != nullptr) {
    delete _impl_.producer_override_;
  }
  _impl_.producer_override_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.consumer_override_ != nullptr) {
    delete _impl_.consumer_override_;
  }
  _impl_.consumer_override_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.admin_override_ != nullptr) {
    delete _impl_.admin_override_;
  }
  _impl_.admin_override_ = nullptr;
  ::memset(&_impl_.effective_limit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.default_limit_) -
      reinterpret_cast<char*>(&_impl_.effective_limit_)) + sizeof(_impl_.default_limit_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QuotaBucket::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 effective_limit = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.effective_limit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 default_limit = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.default_limit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.serviceusage.v1beta1.QuotaOverride producer_override = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_producer_override(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.serviceusage.v1beta1.QuotaOverride consumer_override = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_consumer_override(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.serviceusage.v1beta1.QuotaOverride admin_override = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_admin_override(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, string> dimensions = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.dimensions_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* QuotaBucket::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.serviceusage.v1beta1.QuotaBucket)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 effective_limit = 1;
  if (this->_internal_effective_limit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_effective_limit(), target);
  }

  // int64 default_limit = 2;
  if (this->_internal_default_limit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_default_limit(), target);
  }

  // .google.api.serviceusage.v1beta1.QuotaOverride producer_override = 3;
  if (this->_internal_has_producer_override()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::producer_override(this),
        _Internal::producer_override(this).GetCachedSize(), target, stream);
  }

  // .google.api.serviceusage.v1beta1.QuotaOverride consumer_override = 4;
  if (this->_internal_has_consumer_override()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::consumer_override(this),
        _Internal::consumer_override(this).GetCachedSize(), target, stream);
  }

  // .google.api.serviceusage.v1beta1.QuotaOverride admin_override = 5;
  if (this->_internal_has_admin_override()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::admin_override(this),
        _Internal::admin_override(this).GetCachedSize(), target, stream);
  }

  // map<string, string> dimensions = 6;
  if (!this->_internal_dimensions().empty()) {
    using MapType = ::_pb::Map<std::string, std::string>;
    using WireHelper = QuotaBucket_DimensionsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_dimensions();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "google.api.serviceusage.v1beta1.QuotaBucket.DimensionsEntry.key");
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.second.data(), static_cast<int>(entry.second.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "google.api.serviceusage.v1beta1.QuotaBucket.DimensionsEntry.value");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(6, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(6, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.serviceusage.v1beta1.QuotaBucket)
  return target;
}

size_t QuotaBucket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.serviceusage.v1beta1.QuotaBucket)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> dimensions = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_dimensions_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_dimensions().begin();
      it != this->_internal_dimensions().end(); ++it) {
    total_size += QuotaBucket_DimensionsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // .google.api.serviceusage.v1beta1.QuotaOverride producer_override = 3;
  if (this->_internal_has_producer_override()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.producer_override_);
  }

  // .google.api.serviceusage.v1beta1.QuotaOverride consumer_override = 4;
  if (this->_internal_has_consumer_override()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.consumer_override_);
  }

  // .google.api.serviceusage.v1beta1.QuotaOverride admin_override = 5;
  if (this->_internal_has_admin_override()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.admin_override_);
  }

  // int64 effective_limit = 1;
  if (this->_internal_effective_limit() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_effective_limit());
  }

  // int64 default_limit = 2;
  if (this->_internal_default_limit() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_default_limit());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QuotaBucket::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QuotaBucket::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QuotaBucket::GetClassData() const { return &_class_data_; }


void QuotaBucket::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QuotaBucket*>(&to_msg);
  auto& from = static_cast<const QuotaBucket&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.serviceusage.v1beta1.QuotaBucket)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.dimensions_.MergeFrom(from._impl_.dimensions_);
  if (from._internal_has_producer_override()) {
    _this->_internal_mutable_producer_override()->::google::api::serviceusage::v1beta1::QuotaOverride::MergeFrom(
        from._internal_producer_override());
  }
  if (from._internal_has_consumer_override()) {
    _this->_internal_mutable_consumer_override()->::google::api::serviceusage::v1beta1::QuotaOverride::MergeFrom(
        from._internal_consumer_override());
  }
  if (from._internal_has_admin_override()) {
    _this->_internal_mutable_admin_override()->::google::api::serviceusage::v1beta1::QuotaOverride::MergeFrom(
        from._internal_admin_override());
  }
  if (from._internal_effective_limit() != 0) {
    _this->_internal_set_effective_limit(from._internal_effective_limit());
  }
  if (from._internal_default_limit() != 0) {
    _this->_internal_set_default_limit(from._internal_default_limit());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QuotaBucket::CopyFrom(const QuotaBucket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.serviceusage.v1beta1.QuotaBucket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuotaBucket::IsInitialized() const {
  return true;
}

void QuotaBucket::InternalSwap(QuotaBucket* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.dimensions_.InternalSwap(&other->_impl_.dimensions_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QuotaBucket, _impl_.default_limit_)
      + sizeof(QuotaBucket::_impl_.default_limit_)
      - PROTOBUF_FIELD_OFFSET(QuotaBucket, _impl_.producer_override_)>(
          reinterpret_cast<char*>(&_impl_.producer_override_),
          reinterpret_cast<char*>(&other->_impl_.producer_override_));
}

::PROTOBUF_NAMESPACE_ID::Metadata QuotaBucket::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto_getter, &descriptor_table_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto_once,
      file_level_metadata_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto[6]);
}

// ===================================================================

QuotaOverride_DimensionsEntry_DoNotUse::QuotaOverride_DimensionsEntry_DoNotUse() {}
QuotaOverride_DimensionsEntry_DoNotUse::QuotaOverride_DimensionsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void QuotaOverride_DimensionsEntry_DoNotUse::MergeFrom(const QuotaOverride_DimensionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata QuotaOverride_DimensionsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto_getter, &descriptor_table_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto_once,
      file_level_metadata_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto[7]);
}

// ===================================================================

class QuotaOverride::_Internal {
 public:
};

QuotaOverride::QuotaOverride(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &QuotaOverride::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:google.api.serviceusage.v1beta1.QuotaOverride)
}
QuotaOverride::QuotaOverride(const QuotaOverride& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QuotaOverride* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.dimensions_)*/{}
    , decltype(_impl_.name_){}
    , decltype(_impl_.metric_){}
    , decltype(_impl_.unit_){}
    , decltype(_impl_.admin_override_ancestor_){}
    , decltype(_impl_.override_value_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.dimensions_.MergeFrom(from._impl_.dimensions_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.metric_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.metric_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_metric().empty()) {
    _this->_impl_.metric_.Set(from._internal_metric(), 
      _this->GetArenaForAllocation());
  }
  _impl_.unit_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.unit_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_unit().empty()) {
    _this->_impl_.unit_.Set(from._internal_unit(), 
      _this->GetArenaForAllocation());
  }
  _impl_.admin_override_ancestor_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.admin_override_ancestor_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_admin_override_ancestor().empty()) {
    _this->_impl_.admin_override_ancestor_.Set(from._internal_admin_override_ancestor(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.override_value_ = from._impl_.override_value_;
  // @@protoc_insertion_point(copy_constructor:google.api.serviceusage.v1beta1.QuotaOverride)
}

inline void QuotaOverride::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.dimensions_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.name_){}
    , decltype(_impl_.metric_){}
    , decltype(_impl_.unit_){}
    , decltype(_impl_.admin_override_ancestor_){}
    , decltype(_impl_.override_value_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.metric_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.metric_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.unit_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.unit_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.admin_override_ancestor_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.admin_override_ancestor_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QuotaOverride::~QuotaOverride() {
  // @@protoc_insertion_point(destructor:google.api.serviceusage.v1beta1.QuotaOverride)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void QuotaOverride::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.dimensions_.Destruct();
  _impl_.dimensions_.~MapField();
  _impl_.name_.Destroy();
  _impl_.metric_.Destroy();
  _impl_.unit_.Destroy();
  _impl_.admin_override_ancestor_.Destroy();
}

void QuotaOverride::ArenaDtor(void* object) {
  QuotaOverride* _this = reinterpret_cast< QuotaOverride* >(object);
  _this->_impl_.dimensions_.Destruct();
}
void QuotaOverride::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QuotaOverride::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.serviceusage.v1beta1.QuotaOverride)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dimensions_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.metric_.ClearToEmpty();
  _impl_.unit_.ClearToEmpty();
  _impl_.admin_override_ancestor_.ClearToEmpty();
  _impl_.override_value_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QuotaOverride::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.serviceusage.v1beta1.QuotaOverride.name"));
        } else
          goto handle_unusual;
        continue;
      // int64 override_value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.override_value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, string> dimensions = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.dimensions_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string metric = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_metric();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.serviceusage.v1beta1.QuotaOverride.metric"));
        } else
          goto handle_unusual;
        continue;
      // string unit = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_unit();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.serviceusage.v1beta1.QuotaOverride.unit"));
        } else
          goto handle_unusual;
        continue;
      // string admin_override_ancestor = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_admin_override_ancestor();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.serviceusage.v1beta1.QuotaOverride.admin_override_ancestor"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* QuotaOverride::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.serviceusage.v1beta1.QuotaOverride)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.serviceusage.v1beta1.QuotaOverride.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // int64 override_value = 2;
  if (this->_internal_override_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_override_value(), target);
  }

  // map<string, string> dimensions = 3;
  if (!this->_internal_dimensions().empty()) {
    using MapType = ::_pb::Map<std::string, std::string>;
    using WireHelper = QuotaOverride_DimensionsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_dimensions();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "google.api.serviceusage.v1beta1.QuotaOverride.DimensionsEntry.key");
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.second.data(), static_cast<int>(entry.second.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "google.api.serviceusage.v1beta1.QuotaOverride.DimensionsEntry.value");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(3, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(3, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // string metric = 4;
  if (!this->_internal_metric().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_metric().data(), static_cast<int>(this->_internal_metric().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.serviceusage.v1beta1.QuotaOverride.metric");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_metric(), target);
  }

  // string unit = 5;
  if (!this->_internal_unit().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_unit().data(), static_cast<int>(this->_internal_unit().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.serviceusage.v1beta1.QuotaOverride.unit");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_unit(), target);
  }

  // string admin_override_ancestor = 6;
  if (!this->_internal_admin_override_ancestor().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_admin_override_ancestor().data(), static_cast<int>(this->_internal_admin_override_ancestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.serviceusage.v1beta1.QuotaOverride.admin_override_ancestor");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_admin_override_ancestor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.serviceusage.v1beta1.QuotaOverride)
  return target;
}

size_t QuotaOverride::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.serviceusage.v1beta1.QuotaOverride)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> dimensions = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_dimensions_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_dimensions().begin();
      it != this->_internal_dimensions().end(); ++it) {
    total_size += QuotaOverride_DimensionsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string metric = 4;
  if (!this->_internal_metric().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_metric());
  }

  // string unit = 5;
  if (!this->_internal_unit().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_unit());
  }

  // string admin_override_ancestor = 6;
  if (!this->_internal_admin_override_ancestor().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_admin_override_ancestor());
  }

  // int64 override_value = 2;
  if (this->_internal_override_value() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_override_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QuotaOverride::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QuotaOverride::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QuotaOverride::GetClassData() const { return &_class_data_; }


void QuotaOverride::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QuotaOverride*>(&to_msg);
  auto& from = static_cast<const QuotaOverride&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.serviceusage.v1beta1.QuotaOverride)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.dimensions_.MergeFrom(from._impl_.dimensions_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_metric().empty()) {
    _this->_internal_set_metric(from._internal_metric());
  }
  if (!from._internal_unit().empty()) {
    _this->_internal_set_unit(from._internal_unit());
  }
  if (!from._internal_admin_override_ancestor().empty()) {
    _this->_internal_set_admin_override_ancestor(from._internal_admin_override_ancestor());
  }
  if (from._internal_override_value() != 0) {
    _this->_internal_set_override_value(from._internal_override_value());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QuotaOverride::CopyFrom(const QuotaOverride& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.serviceusage.v1beta1.QuotaOverride)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuotaOverride::IsInitialized() const {
  return true;
}

void QuotaOverride::InternalSwap(QuotaOverride* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.dimensions_.InternalSwap(&other->_impl_.dimensions_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.metric_, lhs_arena,
      &other->_impl_.metric_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.unit_, lhs_arena,
      &other->_impl_.unit_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.admin_override_ancestor_, lhs_arena,
      &other->_impl_.admin_override_ancestor_, rhs_arena
  );
  swap(_impl_.override_value_, other->_impl_.override_value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QuotaOverride::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto_getter, &descriptor_table_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto_once,
      file_level_metadata_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto[8]);
}

// ===================================================================

class OverrideInlineSource::_Internal {
 public:
};

OverrideInlineSource::OverrideInlineSource(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.serviceusage.v1beta1.OverrideInlineSource)
}
OverrideInlineSource::OverrideInlineSource(const OverrideInlineSource& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OverrideInlineSource* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.overrides_){from._impl_.overrides_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.api.serviceusage.v1beta1.OverrideInlineSource)
}

inline void OverrideInlineSource::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.overrides_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

OverrideInlineSource::~OverrideInlineSource() {
  // @@protoc_insertion_point(destructor:google.api.serviceusage.v1beta1.OverrideInlineSource)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OverrideInlineSource::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.overrides_.~RepeatedPtrField();
}

void OverrideInlineSource::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OverrideInlineSource::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.serviceusage.v1beta1.OverrideInlineSource)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.overrides_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OverrideInlineSource::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .google.api.serviceusage.v1beta1.QuotaOverride overrides = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_overrides(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OverrideInlineSource::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.serviceusage.v1beta1.OverrideInlineSource)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.serviceusage.v1beta1.QuotaOverride overrides = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_overrides_size()); i < n; i++) {
    const auto& repfield = this->_internal_overrides(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.serviceusage.v1beta1.OverrideInlineSource)
  return target;
}

size_t OverrideInlineSource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.serviceusage.v1beta1.OverrideInlineSource)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.serviceusage.v1beta1.QuotaOverride overrides = 1;
  total_size += 1UL * this->_internal_overrides_size();
  for (const auto& msg : this->_impl_.overrides_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OverrideInlineSource::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OverrideInlineSource::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OverrideInlineSource::GetClassData() const { return &_class_data_; }


void OverrideInlineSource::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OverrideInlineSource*>(&to_msg);
  auto& from = static_cast<const OverrideInlineSource&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.serviceusage.v1beta1.OverrideInlineSource)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.overrides_.MergeFrom(from._impl_.overrides_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OverrideInlineSource::CopyFrom(const OverrideInlineSource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.serviceusage.v1beta1.OverrideInlineSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OverrideInlineSource::IsInitialized() const {
  return true;
}

void OverrideInlineSource::InternalSwap(OverrideInlineSource* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.overrides_.InternalSwap(&other->_impl_.overrides_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OverrideInlineSource::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto_getter, &descriptor_table_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto_once,
      file_level_metadata_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto[9]);
}

// ===================================================================

AdminQuotaPolicy_DimensionsEntry_DoNotUse::AdminQuotaPolicy_DimensionsEntry_DoNotUse() {}
AdminQuotaPolicy_DimensionsEntry_DoNotUse::AdminQuotaPolicy_DimensionsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void AdminQuotaPolicy_DimensionsEntry_DoNotUse::MergeFrom(const AdminQuotaPolicy_DimensionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata AdminQuotaPolicy_DimensionsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto_getter, &descriptor_table_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto_once,
      file_level_metadata_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto[10]);
}

// ===================================================================

class AdminQuotaPolicy::_Internal {
 public:
};

AdminQuotaPolicy::AdminQuotaPolicy(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &AdminQuotaPolicy::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:google.api.serviceusage.v1beta1.AdminQuotaPolicy)
}
AdminQuotaPolicy::AdminQuotaPolicy(const AdminQuotaPolicy& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AdminQuotaPolicy* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.dimensions_)*/{}
    , decltype(_impl_.name_){}
    , decltype(_impl_.metric_){}
    , decltype(_impl_.unit_){}
    , decltype(_impl_.container_){}
    , decltype(_impl_.policy_value_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.dimensions_.MergeFrom(from._impl_.dimensions_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.metric_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.metric_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_metric().empty()) {
    _this->_impl_.metric_.Set(from._internal_metric(), 
      _this->GetArenaForAllocation());
  }
  _impl_.unit_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.unit_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_unit().empty()) {
    _this->_impl_.unit_.Set(from._internal_unit(), 
      _this->GetArenaForAllocation());
  }
  _impl_.container_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.container_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_container().empty()) {
    _this->_impl_.container_.Set(from._internal_container(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.policy_value_ = from._impl_.policy_value_;
  // @@protoc_insertion_point(copy_constructor:google.api.serviceusage.v1beta1.AdminQuotaPolicy)
}

inline void AdminQuotaPolicy::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.dimensions_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.name_){}
    , decltype(_impl_.metric_){}
    , decltype(_impl_.unit_){}
    , decltype(_impl_.container_){}
    , decltype(_impl_.policy_value_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.metric_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.metric_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.unit_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.unit_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.container_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.container_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AdminQuotaPolicy::~AdminQuotaPolicy() {
  // @@protoc_insertion_point(destructor:google.api.serviceusage.v1beta1.AdminQuotaPolicy)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void AdminQuotaPolicy::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.dimensions_.Destruct();
  _impl_.dimensions_.~MapField();
  _impl_.name_.Destroy();
  _impl_.metric_.Destroy();
  _impl_.unit_.Destroy();
  _impl_.container_.Destroy();
}

void AdminQuotaPolicy::ArenaDtor(void* object) {
  AdminQuotaPolicy* _this = reinterpret_cast< AdminQuotaPolicy* >(object);
  _this->_impl_.dimensions_.Destruct();
}
void AdminQuotaPolicy::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AdminQuotaPolicy::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.serviceusage.v1beta1.AdminQuotaPolicy)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dimensions_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.metric_.ClearToEmpty();
  _impl_.unit_.ClearToEmpty();
  _impl_.container_.ClearToEmpty();
  _impl_.policy_value_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AdminQuotaPolicy::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.serviceusage.v1beta1.AdminQuotaPolicy.name"));
        } else
          goto handle_unusual;
        continue;
      // int64 policy_value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.policy_value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, string> dimensions = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.dimensions_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string metric = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_metric();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.serviceusage.v1beta1.AdminQuotaPolicy.metric"));
        } else
          goto handle_unusual;
        continue;
      // string unit = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_unit();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.serviceusage.v1beta1.AdminQuotaPolicy.unit"));
        } else
          goto handle_unusual;
        continue;
      // string container = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_container();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.serviceusage.v1beta1.AdminQuotaPolicy.container"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AdminQuotaPolicy::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.serviceusage.v1beta1.AdminQuotaPolicy)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.serviceusage.v1beta1.AdminQuotaPolicy.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // int64 policy_value = 2;
  if (this->_internal_policy_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_policy_value(), target);
  }

  // map<string, string> dimensions = 3;
  if (!this->_internal_dimensions().empty()) {
    using MapType = ::_pb::Map<std::string, std::string>;
    using WireHelper = AdminQuotaPolicy_DimensionsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_dimensions();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "google.api.serviceusage.v1beta1.AdminQuotaPolicy.DimensionsEntry.key");
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.second.data(), static_cast<int>(entry.second.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "google.api.serviceusage.v1beta1.AdminQuotaPolicy.DimensionsEntry.value");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(3, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(3, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // string metric = 4;
  if (!this->_internal_metric().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_metric().data(), static_cast<int>(this->_internal_metric().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.serviceusage.v1beta1.AdminQuotaPolicy.metric");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_metric(), target);
  }

  // string unit = 5;
  if (!this->_internal_unit().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_unit().data(), static_cast<int>(this->_internal_unit().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.serviceusage.v1beta1.AdminQuotaPolicy.unit");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_unit(), target);
  }

  // string container = 6;
  if (!this->_internal_container().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_container().data(), static_cast<int>(this->_internal_container().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.serviceusage.v1beta1.AdminQuotaPolicy.container");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_container(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.serviceusage.v1beta1.AdminQuotaPolicy)
  return target;
}

size_t AdminQuotaPolicy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.serviceusage.v1beta1.AdminQuotaPolicy)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> dimensions = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_dimensions_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_dimensions().begin();
      it != this->_internal_dimensions().end(); ++it) {
    total_size += AdminQuotaPolicy_DimensionsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string metric = 4;
  if (!this->_internal_metric().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_metric());
  }

  // string unit = 5;
  if (!this->_internal_unit().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_unit());
  }

  // string container = 6;
  if (!this->_internal_container().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_container());
  }

  // int64 policy_value = 2;
  if (this->_internal_policy_value() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_policy_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AdminQuotaPolicy::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AdminQuotaPolicy::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AdminQuotaPolicy::GetClassData() const { return &_class_data_; }


void AdminQuotaPolicy::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AdminQuotaPolicy*>(&to_msg);
  auto& from = static_cast<const AdminQuotaPolicy&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.serviceusage.v1beta1.AdminQuotaPolicy)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.dimensions_.MergeFrom(from._impl_.dimensions_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_metric().empty()) {
    _this->_internal_set_metric(from._internal_metric());
  }
  if (!from._internal_unit().empty()) {
    _this->_internal_set_unit(from._internal_unit());
  }
  if (!from._internal_container().empty()) {
    _this->_internal_set_container(from._internal_container());
  }
  if (from._internal_policy_value() != 0) {
    _this->_internal_set_policy_value(from._internal_policy_value());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AdminQuotaPolicy::CopyFrom(const AdminQuotaPolicy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.serviceusage.v1beta1.AdminQuotaPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdminQuotaPolicy::IsInitialized() const {
  return true;
}

void AdminQuotaPolicy::InternalSwap(AdminQuotaPolicy* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.dimensions_.InternalSwap(&other->_impl_.dimensions_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.metric_, lhs_arena,
      &other->_impl_.metric_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.unit_, lhs_arena,
      &other->_impl_.unit_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.container_, lhs_arena,
      &other->_impl_.container_, rhs_arena
  );
  swap(_impl_.policy_value_, other->_impl_.policy_value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AdminQuotaPolicy::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto_getter, &descriptor_table_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto_once,
      file_level_metadata_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto[11]);
}

// ===================================================================

class ServiceIdentity::_Internal {
 public:
};

ServiceIdentity::ServiceIdentity(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.serviceusage.v1beta1.ServiceIdentity)
}
ServiceIdentity::ServiceIdentity(const ServiceIdentity& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ServiceIdentity* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.email_){}
    , decltype(_impl_.unique_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_email().empty()) {
    _this->_impl_.email_.Set(from._internal_email(), 
      _this->GetArenaForAllocation());
  }
  _impl_.unique_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.unique_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_unique_id().empty()) {
    _this->_impl_.unique_id_.Set(from._internal_unique_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.serviceusage.v1beta1.ServiceIdentity)
}

inline void ServiceIdentity::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.email_){}
    , decltype(_impl_.unique_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.unique_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.unique_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ServiceIdentity::~ServiceIdentity() {
  // @@protoc_insertion_point(destructor:google.api.serviceusage.v1beta1.ServiceIdentity)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ServiceIdentity::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.email_.Destroy();
  _impl_.unique_id_.Destroy();
}

void ServiceIdentity::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ServiceIdentity::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.serviceusage.v1beta1.ServiceIdentity)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.email_.ClearToEmpty();
  _impl_.unique_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServiceIdentity::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string email = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_email();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.serviceusage.v1beta1.ServiceIdentity.email"));
        } else
          goto handle_unusual;
        continue;
      // string unique_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_unique_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.serviceusage.v1beta1.ServiceIdentity.unique_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ServiceIdentity::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.serviceusage.v1beta1.ServiceIdentity)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string email = 1;
  if (!this->_internal_email().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.serviceusage.v1beta1.ServiceIdentity.email");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_email(), target);
  }

  // string unique_id = 2;
  if (!this->_internal_unique_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_unique_id().data(), static_cast<int>(this->_internal_unique_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.serviceusage.v1beta1.ServiceIdentity.unique_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_unique_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.serviceusage.v1beta1.ServiceIdentity)
  return target;
}

size_t ServiceIdentity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.serviceusage.v1beta1.ServiceIdentity)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string email = 1;
  if (!this->_internal_email().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  // string unique_id = 2;
  if (!this->_internal_unique_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_unique_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ServiceIdentity::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ServiceIdentity::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ServiceIdentity::GetClassData() const { return &_class_data_; }


void ServiceIdentity::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ServiceIdentity*>(&to_msg);
  auto& from = static_cast<const ServiceIdentity&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.serviceusage.v1beta1.ServiceIdentity)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_email().empty()) {
    _this->_internal_set_email(from._internal_email());
  }
  if (!from._internal_unique_id().empty()) {
    _this->_internal_set_unique_id(from._internal_unique_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ServiceIdentity::CopyFrom(const ServiceIdentity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.serviceusage.v1beta1.ServiceIdentity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceIdentity::IsInitialized() const {
  return true;
}

void ServiceIdentity::InternalSwap(ServiceIdentity* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.email_, lhs_arena,
      &other->_impl_.email_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.unique_id_, lhs_arena,
      &other->_impl_.unique_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ServiceIdentity::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto_getter, &descriptor_table_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto_once,
      file_level_metadata_google_2fapi_2fserviceusage_2fv1beta1_2fresources_2eproto[12]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace serviceusage
}  // namespace api
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::google::api::serviceusage::v1beta1::Service*
Arena::CreateMaybeMessage< ::google::api::serviceusage::v1beta1::Service >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::serviceusage::v1beta1::Service >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::serviceusage::v1beta1::ServiceConfig*
Arena::CreateMaybeMessage< ::google::api::serviceusage::v1beta1::ServiceConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::serviceusage::v1beta1::ServiceConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::serviceusage::v1beta1::OperationMetadata*
Arena::CreateMaybeMessage< ::google::api::serviceusage::v1beta1::OperationMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::serviceusage::v1beta1::OperationMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::serviceusage::v1beta1::ConsumerQuotaMetric*
Arena::CreateMaybeMessage< ::google::api::serviceusage::v1beta1::ConsumerQuotaMetric >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::serviceusage::v1beta1::ConsumerQuotaMetric >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::serviceusage::v1beta1::ConsumerQuotaLimit*
Arena::CreateMaybeMessage< ::google::api::serviceusage::v1beta1::ConsumerQuotaLimit >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::serviceusage::v1beta1::ConsumerQuotaLimit >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::serviceusage::v1beta1::QuotaBucket_DimensionsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::google::api::serviceusage::v1beta1::QuotaBucket_DimensionsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::serviceusage::v1beta1::QuotaBucket_DimensionsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::serviceusage::v1beta1::QuotaBucket*
Arena::CreateMaybeMessage< ::google::api::serviceusage::v1beta1::QuotaBucket >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::serviceusage::v1beta1::QuotaBucket >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::serviceusage::v1beta1::QuotaOverride_DimensionsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::google::api::serviceusage::v1beta1::QuotaOverride_DimensionsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::serviceusage::v1beta1::QuotaOverride_DimensionsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::serviceusage::v1beta1::QuotaOverride*
Arena::CreateMaybeMessage< ::google::api::serviceusage::v1beta1::QuotaOverride >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::serviceusage::v1beta1::QuotaOverride >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::serviceusage::v1beta1::OverrideInlineSource*
Arena::CreateMaybeMessage< ::google::api::serviceusage::v1beta1::OverrideInlineSource >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::serviceusage::v1beta1::OverrideInlineSource >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::serviceusage::v1beta1::AdminQuotaPolicy_DimensionsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::google::api::serviceusage::v1beta1::AdminQuotaPolicy_DimensionsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::serviceusage::v1beta1::AdminQuotaPolicy_DimensionsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::serviceusage::v1beta1::AdminQuotaPolicy*
Arena::CreateMaybeMessage< ::google::api::serviceusage::v1beta1::AdminQuotaPolicy >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::serviceusage::v1beta1::AdminQuotaPolicy >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::serviceusage::v1beta1::ServiceIdentity*
Arena::CreateMaybeMessage< ::google::api::serviceusage::v1beta1::ServiceIdentity >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::serviceusage::v1beta1::ServiceIdentity >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/monitored_resource.proto

#include "google/api/monitored_resource.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace google {
namespace api {
PROTOBUF_CONSTEXPR MonitoredResourceDescriptor::MonitoredResourceDescriptor(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.labels_)*/{}
  , /*decltype(_impl_.type_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.display_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.launch_stage_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MonitoredResourceDescriptorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MonitoredResourceDescriptorDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MonitoredResourceDescriptorDefaultTypeInternal() {}
  union {
    MonitoredResourceDescriptor _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MonitoredResourceDescriptorDefaultTypeInternal _MonitoredResourceDescriptor_default_instance_;
PROTOBUF_CONSTEXPR MonitoredResource_LabelsEntry_DoNotUse::MonitoredResource_LabelsEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct MonitoredResource_LabelsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MonitoredResource_LabelsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MonitoredResource_LabelsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    MonitoredResource_LabelsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MonitoredResource_LabelsEntry_DoNotUseDefaultTypeInternal _MonitoredResource_LabelsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR MonitoredResource::MonitoredResource(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.labels_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.type_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MonitoredResourceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MonitoredResourceDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MonitoredResourceDefaultTypeInternal() {}
  union {
    MonitoredResource _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MonitoredResourceDefaultTypeInternal _MonitoredResource_default_instance_;
PROTOBUF_CONSTEXPR MonitoredResourceMetadata_UserLabelsEntry_DoNotUse::MonitoredResourceMetadata_UserLabelsEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct MonitoredResourceMetadata_UserLabelsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MonitoredResourceMetadata_UserLabelsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MonitoredResourceMetadata_UserLabelsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    MonitoredResourceMetadata_UserLabelsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MonitoredResourceMetadata_UserLabelsEntry_DoNotUseDefaultTypeInternal _MonitoredResourceMetadata_UserLabelsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR MonitoredResourceMetadata::MonitoredResourceMetadata(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.user_labels_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.system_labels_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MonitoredResourceMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MonitoredResourceMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MonitoredResourceMetadataDefaultTypeInternal() {}
  union {
    MonitoredResourceMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MonitoredResourceMetadataDefaultTypeInternal _MonitoredResourceMetadata_default_instance_;
}  // namespace api
}  // namespace google
static ::_pb::Metadata file_level_metadata_google_2fapi_2fmonitored_5fresource_2eproto[5];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_google_2fapi_2fmonitored_5fresource_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_google_2fapi_2fmonitored_5fresource_2eproto = nullptr;

const uint32_t TableStruct_google_2fapi_2fmonitored_5fresource_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::MonitoredResourceDescriptor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::MonitoredResourceDescriptor, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::google::api::MonitoredResourceDescriptor, _impl_.type_),
  PROTOBUF_FIELD_OFFSET(::google::api::MonitoredResourceDescriptor, _impl_.display_name_),
  PROTOBUF_FIELD_OFFSET(::google::api::MonitoredResourceDescriptor, _impl_.description_),
  PROTOBUF_FIELD_OFFSET(::google::api::MonitoredResourceDescriptor, _impl_.labels_),
  PROTOBUF_FIELD_OFFSET(::google::api::MonitoredResourceDescriptor, _impl_.launch_stage_),
  PROTOBUF_FIELD_OFFSET(::google::api::MonitoredResource_LabelsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::api::MonitoredResource_LabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::MonitoredResource_LabelsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::api::MonitoredResource_LabelsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::MonitoredResource, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::MonitoredResource, _impl_.type_),
  PROTOBUF_FIELD_OFFSET(::google::api::MonitoredResource, _impl_.labels_),
  PROTOBUF_FIELD_OFFSET(::google::api::MonitoredResourceMetadata_UserLabelsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::api::MonitoredResourceMetadata_UserLabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::MonitoredResourceMetadata_UserLabelsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::api::MonitoredResourceMetadata_UserLabelsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::MonitoredResourceMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::MonitoredResourceMetadata, _impl_.system_labels_),
  PROTOBUF_FIELD_OFFSET(::google::api::MonitoredResourceMetadata, _impl_.user_labels_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::google::api::MonitoredResourceDescriptor)},
  { 12, 20, -1, sizeof(::google::api::MonitoredResource_LabelsEntry_DoNotUse)},
  { 22, -1, -1, sizeof(::google::api::MonitoredResource)},
  { 30, 38, -1, sizeof(::google::api::MonitoredResourceMetadata_UserLabelsEntry_DoNotUse)},
  { 40, -1, -1, sizeof(::google::api::MonitoredResourceMetadata)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::google::api::_MonitoredResourceDescriptor_default_instance_._instance,
  &::google::api::_MonitoredResource_LabelsEntry_DoNotUse_default_instance_._instance,
  &::google::api::_MonitoredResource_default_instance_._instance,
  &::google::api::_MonitoredResourceMetadata_UserLabelsEntry_DoNotUse_default_instance_._instance,
  &::google::api::_MonitoredResourceMetadata_default_instance_._instance,
};

const char descriptor_table_protodef_google_2fapi_2fmonitored_5fresource_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n#google/api/monitored_resource.proto\022\ng"
  "oogle.api\032\026google/api/label.proto\032\035googl"
  "e/api/launch_stage.proto\032\034google/protobu"
  "f/struct.proto\"\300\001\n\033MonitoredResourceDesc"
  "riptor\022\014\n\004name\030\005 \001(\t\022\014\n\004type\030\001 \001(\t\022\024\n\014di"
  "splay_name\030\002 \001(\t\022\023\n\013description\030\003 \001(\t\022+\n"
  "\006labels\030\004 \003(\0132\033.google.api.LabelDescript"
  "or\022-\n\014launch_stage\030\007 \001(\0162\027.google.api.La"
  "unchStage\"\213\001\n\021MonitoredResource\022\014\n\004type\030"
  "\001 \001(\t\0229\n\006labels\030\002 \003(\0132).google.api.Monit"
  "oredResource.LabelsEntry\032-\n\013LabelsEntry\022"
  "\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\312\001\n\031Moni"
  "toredResourceMetadata\022.\n\rsystem_labels\030\001"
  " \001(\0132\027.google.protobuf.Struct\022J\n\013user_la"
  "bels\030\002 \003(\01325.google.api.MonitoredResourc"
  "eMetadata.UserLabelsEntry\0321\n\017UserLabelsE"
  "ntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001By\n\016"
  "com.google.apiB\026MonitoredResourceProtoP\001"
  "ZCgoogle.golang.org/genproto/googleapis/"
  "api/monitoredres;monitoredres\370\001\001\242\002\004GAPIb"
  "\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_google_2fapi_2fmonitored_5fresource_2eproto_deps[3] = {
  &::descriptor_table_google_2fapi_2flabel_2eproto,
  &::descriptor_table_google_2fapi_2flaunch_5fstage_2eproto,
  &::descriptor_table_google_2fprotobuf_2fstruct_2eproto,
};
static ::_pbi::once_flag descriptor_table_google_2fapi_2fmonitored_5fresource_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_google_2fapi_2fmonitored_5fresource_2eproto = {
    false, false, 807, descriptor_table_protodef_google_2fapi_2fmonitored_5fresource_2eproto,
    "google/api/monitored_resource.proto",
    &descriptor_table_google_2fapi_2fmonitored_5fresource_2eproto_once, descriptor_table_google_2fapi_2fmonitored_5fresource_2eproto_deps, 3, 5,
    schemas, file_default_instances, TableStruct_google_2fapi_2fmonitored_5fresource_2eproto::offsets,
    file_level_metadata_google_2fapi_2fmonitored_5fresource_2eproto, file_level_enum_descriptors_google_2fapi_2fmonitored_5fresource_2eproto,
    file_level_service_descriptors_google_2fapi_2fmonitored_5fresource_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_google_2fapi_2fmonitored_5fresource_2eproto_getter() {
  return &descriptor_table_google_2fapi_2fmonitored_5fresource_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_google_2fapi_2fmonitored_5fresource_2eproto(&descriptor_table_google_2fapi_2fmonitored_5fresource_2eproto);
namespace google {
namespace api {

// ===================================================================

class MonitoredResourceDescriptor::_Internal {
 public:
};

void MonitoredResourceDescriptor::clear_labels() {
  _impl_.labels_.Clear();
}
MonitoredResourceDescriptor::MonitoredResourceDescriptor(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.MonitoredResourceDescriptor)
}
MonitoredResourceDescriptor::MonitoredResourceDescriptor(const MonitoredResourceDescriptor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MonitoredResourceDescriptor* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.labels_){from._impl_.labels_}
    , decltype(_impl_.type_){}
    , decltype(_impl_.display_name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.launch_stage_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_type().empty()) {
    _this->_impl_.type_.Set(from._internal_type(), 
      _this->GetArenaForAllocation());
  }
  _impl_.display_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.display_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_display_name().empty()) {
    _this->_impl_.display_name_.Set(from._internal_display_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), 
      _this->GetArenaForAllocation());
  }
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.launch_stage_ = from._impl_.launch_stage_;
  // @@protoc_insertion_point(copy_constructor:google.api.MonitoredResourceDescriptor)
}

inline void MonitoredResourceDescriptor::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.labels_){arena}
    , decltype(_impl_.type_){}
    , decltype(_impl_.display_name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.launch_stage_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.display_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.display_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MonitoredResourceDescriptor::~MonitoredResourceDescriptor() {
  // @@protoc_insertion_point(destructor:google.api.MonitoredResourceDescriptor)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MonitoredResourceDescriptor::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.labels_.~RepeatedPtrField();
  _impl_.type_.Destroy();
  _impl_.display_name_.Destroy();
  _impl_.description_.Destroy();
  _impl_.name_.Destroy();
}

void MonitoredResourceDescriptor::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MonitoredResourceDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.MonitoredResourceDescriptor)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.labels_.Clear();
  _impl_.type_.ClearToEmpty();
  _impl_.display_name_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.launch_stage_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MonitoredResourceDescriptor::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.MonitoredResourceDescriptor.type"));
        } else
          goto handle_unusual;
        continue;
      // string display_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_display_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.MonitoredResourceDescriptor.display_name"));
        } else
          goto handle_unusual;
        continue;
      // string description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.MonitoredResourceDescriptor.description"));
        } else
          goto handle_unusual;
        continue;
      // repeated .google.api.LabelDescriptor labels = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_labels(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string name = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.MonitoredResourceDescriptor.name"));
        } else
          goto handle_unusual;
        continue;
      // .google.api.LaunchStage launch_stage = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_launch_stage(static_cast<::google::api::LaunchStage>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MonitoredResourceDescriptor::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.MonitoredResourceDescriptor)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (!this->_internal_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.MonitoredResourceDescriptor.type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_type(), target);
  }

  // string display_name = 2;
  if (!this->_internal_display_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_display_name().data(), static_cast<int>(this->_internal_display_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.MonitoredResourceDescriptor.display_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_display_name(), target);
  }

  // string description = 3;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.MonitoredResourceDescriptor.description");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_description(), target);
  }

  // repeated .google.api.LabelDescriptor labels = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_labels_size()); i < n; i++) {
    const auto& repfield = this->_internal_labels(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string name = 5;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.MonitoredResourceDescriptor.name");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_name(), target);
  }

  // .google.api.LaunchStage launch_stage = 7;
  if (this->_internal_launch_stage() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      7, this->_internal_launch_stage(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.MonitoredResourceDescriptor)
  return target;
}

size_t MonitoredResourceDescriptor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.MonitoredResourceDescriptor)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.LabelDescriptor labels = 4;
  total_size += 1UL * this->_internal_labels_size();
  for (const auto& msg : this->_impl_.labels_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string type = 1;
  if (!this->_internal_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // string display_name = 2;
  if (!this->_internal_display_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_display_name());
  }

  // string description = 3;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string name = 5;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .google.api.LaunchStage launch_stage = 7;
  if (this->_internal_launch_stage() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_launch_stage());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MonitoredResourceDescriptor::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MonitoredResourceDescriptor::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MonitoredResourceDescriptor::GetClassData() const { return &_class_data_; }


void MonitoredResourceDescriptor::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MonitoredResourceDescriptor*>(&to_msg);
  auto& from = static_cast<const MonitoredResourceDescriptor&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.MonitoredResourceDescriptor)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.labels_.MergeFrom(from._impl_.labels_);
  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  if (!from._internal_display_name().empty()) {
    _this->_internal_set_display_name(from._internal_display_name());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_launch_stage() != 0) {
    _this->_internal_set_launch_stage(from._internal_launch_stage());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MonitoredResourceDescriptor::CopyFrom(const MonitoredResourceDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.MonitoredResourceDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MonitoredResourceDescriptor::IsInitialized() const {
  return true;
}

void MonitoredResourceDescriptor::InternalSwap(MonitoredResourceDescriptor* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.labels_.InternalSwap(&other->_impl_.labels_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.type_, lhs_arena,
      &other->_impl_.type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.display_name_, lhs_arena,
      &other->_impl_.display_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_, lhs_arena,
      &other->_impl_.description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  swap(_impl_.launch_stage_, other->_impl_.launch_stage_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MonitoredResourceDescriptor::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fmonitored_5fresource_2eproto_getter, &descriptor_table_google_2fapi_2fmonitored_5fresource_2eproto_once,
      file_level_metadata_google_2fapi_2fmonitored_5fresource_2eproto[0]);
}

// ===================================================================

MonitoredResource_LabelsEntry_DoNotUse::MonitoredResource_LabelsEntry_DoNotUse() {}
MonitoredResource_LabelsEntry_DoNotUse::MonitoredResource_LabelsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void MonitoredResource_LabelsEntry_DoNotUse::MergeFrom(const MonitoredResource_LabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata MonitoredResource_LabelsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fmonitored_5fresource_2eproto_getter, &descriptor_table_google_2fapi_2fmonitored_5fresource_2eproto_once,
      file_level_metadata_google_2fapi_2fmonitored_5fresource_2eproto[1]);
}

// ===================================================================

class MonitoredResource::_Internal {
 public:
};

MonitoredResource::MonitoredResource(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &MonitoredResource::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:google.api.MonitoredResource)
}
MonitoredResource::MonitoredResource(const MonitoredResource& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MonitoredResource* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.labels_)*/{}
    , decltype(_impl_.type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.labels_.MergeFrom(from._impl_.labels_);
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_type().empty()) {
    _this->_impl_.type_.Set(from._internal_type(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.MonitoredResource)
}

inline void MonitoredResource::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.labels_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.type_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MonitoredResource::~MonitoredResource() {
  // @@protoc_insertion_point(destructor:google.api.MonitoredResource)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void MonitoredResource::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.labels_.Destruct();
  _impl_.labels_.~MapField();
  _impl_.type_.Destroy();
}

void MonitoredResource::ArenaDtor(void* object) {
  MonitoredResource* _this = reinterpret_cast< MonitoredResource* >(object);
  _this->_impl_.labels_.Destruct();
}
void MonitoredResource::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MonitoredResource::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.MonitoredResource)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.labels_.Clear();
  _impl_.type_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MonitoredResource::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.MonitoredResource.type"));
        } else
          goto handle_unusual;
        continue;
      // map<string, string> labels = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.labels_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MonitoredResource::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.MonitoredResource)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (!this->_internal_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.MonitoredResource.type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_type(), target);
  }

  // map<string, string> labels = 2;
  if (!this->_internal_labels().empty()) {
    using MapType = ::_pb::Map<std::string, std::string>;
    using WireHelper = MonitoredResource_LabelsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_labels();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "google.api.MonitoredResource.LabelsEntry.key");
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.second.data(), static_cast<int>(entry.second.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "google.api.MonitoredResource.LabelsEntry.value");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.MonitoredResource)
  return target;
}

size_t MonitoredResource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.MonitoredResource)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> labels = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_labels_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_labels().begin();
      it != this->_internal_labels().end(); ++it) {
    total_size += MonitoredResource_LabelsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string type = 1;
  if (!this->_internal_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MonitoredResource::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MonitoredResource::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MonitoredResource::GetClassData() const { return &_class_data_; }


void MonitoredResource::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MonitoredResource*>(&to_msg);
  auto& from = static_cast<const MonitoredResource&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.MonitoredResource)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.labels_.MergeFrom(from._impl_.labels_);
  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MonitoredResource::CopyFrom(const MonitoredResource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.MonitoredResource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MonitoredResource::IsInitialized() const {
  return true;
}

void MonitoredResource::InternalSwap(MonitoredResource* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.labels_.InternalSwap(&other->_impl_.labels_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.type_, lhs_arena,
      &other->_impl_.type_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata MonitoredResource::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fmonitored_5fresource_2eproto_getter, &descriptor_table_google_2fapi_2fmonitored_5fresource_2eproto_once,
      file_level_metadata_google_2fapi_2fmonitored_5fresource_2eproto[2]);
}

// ===================================================================

MonitoredResourceMetadata_UserLabelsEntry_DoNotUse::MonitoredResourceMetadata_UserLabelsEntry_DoNotUse() {}
MonitoredResourceMetadata_UserLabelsEntry_DoNotUse::MonitoredResourceMetadata_UserLabelsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void MonitoredResourceMetadata_UserLabelsEntry_DoNotUse::MergeFrom(const MonitoredResourceMetadata_UserLabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata MonitoredResourceMetadata_UserLabelsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fmonitored_5fresource_2eproto_getter, &descriptor_table_google_2fapi_2fmonitored_5fresource_2eproto_once,
      file_level_metadata_google_2fapi_2fmonitored_5fresource_2eproto[3]);
}

// ===================================================================

class MonitoredResourceMetadata::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& system_labels(const MonitoredResourceMetadata* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
MonitoredResourceMetadata::_Internal::system_labels(const MonitoredResourceMetadata* msg) {
  return *msg->_impl_.system_labels_;
}
void MonitoredResourceMetadata::clear_system_labels() {
  if (GetArenaForAllocation() == nullptr && _impl_.system_labels_ != nullptr) {
    delete _impl_.system_labels_;
  }
  _impl_.system_labels_ = nullptr;
}
MonitoredResourceMetadata::MonitoredResourceMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &MonitoredResourceMetadata::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:google.api.MonitoredResourceMetadata)
}
MonitoredResourceMetadata::MonitoredResourceMetadata(const MonitoredResourceMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MonitoredResourceMetadata* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.user_labels_)*/{}
    , decltype(_impl_.system_labels_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.user_labels_.MergeFrom(from._impl_.user_labels_);
  if (from._internal_has_system_labels()) {
    _this->_impl_.system_labels_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from._impl_.system_labels_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.MonitoredResourceMetadata)
}

inline void MonitoredResourceMetadata::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.user_labels_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.system_labels_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MonitoredResourceMetadata::~MonitoredResourceMetadata() {
  // @@protoc_insertion_point(destructor:google.api.MonitoredResourceMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void MonitoredResourceMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.user_labels_.Destruct();
  _impl_.user_labels_.~MapField();
  if (this != internal_default_instance()) delete _impl_.system_labels_;
}

void MonitoredResourceMetadata::ArenaDtor(void* object) {
  MonitoredResourceMetadata* _this = reinterpret_cast< MonitoredResourceMetadata* >(object);
  _this->_impl_.user_labels_.Destruct();
}
void MonitoredResourceMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MonitoredResourceMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.MonitoredResourceMetadata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_labels_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.system_labels_ != nullptr) {
    delete _impl_.system_labels_;
  }
  _impl_.system_labels_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MonitoredResourceMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.Struct system_labels = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_system_labels(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, string> user_labels = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.user_labels_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MonitoredResourceMetadata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.MonitoredResourceMetadata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Struct system_labels = 1;
  if (this->_internal_has_system_labels()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::system_labels(this),
        _Internal::system_labels(this).GetCachedSize(), target, stream);
  }

  // map<string, string> user_labels = 2;
  if (!this->_internal_user_labels().empty()) {
    using MapType = ::_pb::Map<std::string, std::string>;
    using WireHelper = MonitoredResourceMetadata_UserLabelsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_user_labels();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "google.api.MonitoredResourceMetadata.UserLabelsEntry.key");
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.second.data(), static_cast<int>(entry.second.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "google.api.MonitoredResourceMetadata.UserLabelsEntry.value");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.MonitoredResourceMetadata)
  return target;
}

size_t MonitoredResourceMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.MonitoredResourceMetadata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> user_labels = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_user_labels_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_user_labels().begin();
      it != this->_internal_user_labels().end(); ++it) {
    total_size += MonitoredResourceMetadata_UserLabelsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // .google.protobuf.Struct system_labels = 1;
  if (this->_internal_has_system_labels()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.system_labels_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MonitoredResourceMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MonitoredResourceMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MonitoredResourceMetadata::GetClassData() const { return &_class_data_; }


void MonitoredResourceMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MonitoredResourceMetadata*>(&to_msg);
  auto& from = static_cast<const MonitoredResourceMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.MonitoredResourceMetadata)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.user_labels_.MergeFrom(from._impl_.user_labels_);
  if (from._internal_has_system_labels()) {
    _this->_internal_mutable_system_labels()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(
        from._internal_system_labels());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MonitoredResourceMetadata::CopyFrom(const MonitoredResourceMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.MonitoredResourceMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MonitoredResourceMetadata::IsInitialized() const {
  return true;
}

void MonitoredResourceMetadata::InternalSwap(MonitoredResourceMetadata* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.user_labels_.InternalSwap(&other->_impl_.user_labels_);
  swap(_impl_.system_labels_, other->_impl_.system_labels_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MonitoredResourceMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fmonitored_5fresource_2eproto_getter, &descriptor_table_google_2fapi_2fmonitored_5fresource_2eproto_once,
      file_level_metadata_google_2fapi_2fmonitored_5fresource_2eproto[4]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace api
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::google::api::MonitoredResourceDescriptor*
Arena::CreateMaybeMessage< ::google::api::MonitoredResourceDescriptor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::MonitoredResourceDescriptor >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::MonitoredResource_LabelsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::google::api::MonitoredResource_LabelsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::MonitoredResource_LabelsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::MonitoredResource*
Arena::CreateMaybeMessage< ::google::api::MonitoredResource >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::MonitoredResource >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::MonitoredResourceMetadata_UserLabelsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::google::api::MonitoredResourceMetadata_UserLabelsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::MonitoredResourceMetadata_UserLabelsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::MonitoredResourceMetadata*
Arena::CreateMaybeMessage< ::google::api::MonitoredResourceMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::MonitoredResourceMetadata >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

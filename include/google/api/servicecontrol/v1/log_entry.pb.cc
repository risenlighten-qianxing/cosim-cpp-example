// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/servicecontrol/v1/log_entry.proto

#include "google/api/servicecontrol/v1/log_entry.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace google {
namespace api {
namespace servicecontrol {
namespace v1 {
PROTOBUF_CONSTEXPR LogEntry_LabelsEntry_DoNotUse::LogEntry_LabelsEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct LogEntry_LabelsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LogEntry_LabelsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LogEntry_LabelsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    LogEntry_LabelsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LogEntry_LabelsEntry_DoNotUseDefaultTypeInternal _LogEntry_LabelsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR LogEntry::LogEntry(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.labels_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.insert_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.trace_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.timestamp_)*/nullptr
  , /*decltype(_impl_.http_request_)*/nullptr
  , /*decltype(_impl_.operation_)*/nullptr
  , /*decltype(_impl_.source_location_)*/nullptr
  , /*decltype(_impl_.severity_)*/0
  , /*decltype(_impl_.payload_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct LogEntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LogEntryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LogEntryDefaultTypeInternal() {}
  union {
    LogEntry _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LogEntryDefaultTypeInternal _LogEntry_default_instance_;
PROTOBUF_CONSTEXPR LogEntryOperation::LogEntryOperation(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.producer_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.first_)*/false
  , /*decltype(_impl_.last_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LogEntryOperationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LogEntryOperationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LogEntryOperationDefaultTypeInternal() {}
  union {
    LogEntryOperation _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LogEntryOperationDefaultTypeInternal _LogEntryOperation_default_instance_;
PROTOBUF_CONSTEXPR LogEntrySourceLocation::LogEntrySourceLocation(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.file_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.function_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.line_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LogEntrySourceLocationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LogEntrySourceLocationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LogEntrySourceLocationDefaultTypeInternal() {}
  union {
    LogEntrySourceLocation _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LogEntrySourceLocationDefaultTypeInternal _LogEntrySourceLocation_default_instance_;
}  // namespace v1
}  // namespace servicecontrol
}  // namespace api
}  // namespace google
static ::_pb::Metadata file_level_metadata_google_2fapi_2fservicecontrol_2fv1_2flog_5fentry_2eproto[4];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_google_2fapi_2fservicecontrol_2fv1_2flog_5fentry_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_google_2fapi_2fservicecontrol_2fv1_2flog_5fentry_2eproto = nullptr;

const uint32_t TableStruct_google_2fapi_2fservicecontrol_2fv1_2flog_5fentry_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::LogEntry_LabelsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::LogEntry_LabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::LogEntry_LabelsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::LogEntry_LabelsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::LogEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::LogEntry, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::LogEntry, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::LogEntry, _impl_.timestamp_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::LogEntry, _impl_.severity_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::LogEntry, _impl_.http_request_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::LogEntry, _impl_.trace_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::LogEntry, _impl_.insert_id_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::LogEntry, _impl_.labels_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::LogEntry, _impl_.operation_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::LogEntry, _impl_.source_location_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::LogEntry, _impl_.payload_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::LogEntryOperation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::LogEntryOperation, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::LogEntryOperation, _impl_.producer_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::LogEntryOperation, _impl_.first_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::LogEntryOperation, _impl_.last_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::LogEntrySourceLocation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::LogEntrySourceLocation, _impl_.file_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::LogEntrySourceLocation, _impl_.line_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::LogEntrySourceLocation, _impl_.function_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, -1, sizeof(::google::api::servicecontrol::v1::LogEntry_LabelsEntry_DoNotUse)},
  { 10, -1, -1, sizeof(::google::api::servicecontrol::v1::LogEntry)},
  { 29, -1, -1, sizeof(::google::api::servicecontrol::v1::LogEntryOperation)},
  { 39, -1, -1, sizeof(::google::api::servicecontrol::v1::LogEntrySourceLocation)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::google::api::servicecontrol::v1::_LogEntry_LabelsEntry_DoNotUse_default_instance_._instance,
  &::google::api::servicecontrol::v1::_LogEntry_default_instance_._instance,
  &::google::api::servicecontrol::v1::_LogEntryOperation_default_instance_._instance,
  &::google::api::servicecontrol::v1::_LogEntrySourceLocation_default_instance_._instance,
};

const char descriptor_table_protodef_google_2fapi_2fservicecontrol_2fv1_2flog_5fentry_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n,google/api/servicecontrol/v1/log_entry"
  ".proto\022\034google.api.servicecontrol.v1\032/go"
  "ogle/api/servicecontrol/v1/http_request."
  "proto\032&google/logging/type/log_severity."
  "proto\032\031google/protobuf/any.proto\032\034google"
  "/protobuf/struct.proto\032\037google/protobuf/"
  "timestamp.proto\"\351\004\n\010LogEntry\022\014\n\004name\030\n \001"
  "(\t\022-\n\ttimestamp\030\013 \001(\0132\032.google.protobuf."
  "Timestamp\0222\n\010severity\030\014 \001(\0162 .google.log"
  "ging.type.LogSeverity\022\?\n\014http_request\030\016 "
  "\001(\0132).google.api.servicecontrol.v1.HttpR"
  "equest\022\r\n\005trace\030\017 \001(\t\022\021\n\tinsert_id\030\004 \001(\t"
  "\022B\n\006labels\030\r \003(\01322.google.api.servicecon"
  "trol.v1.LogEntry.LabelsEntry\022-\n\rproto_pa"
  "yload\030\002 \001(\0132\024.google.protobuf.AnyH\000\022\026\n\014t"
  "ext_payload\030\003 \001(\tH\000\0221\n\016struct_payload\030\006 "
  "\001(\0132\027.google.protobuf.StructH\000\022B\n\toperat"
  "ion\030\020 \001(\0132/.google.api.servicecontrol.v1"
  ".LogEntryOperation\022M\n\017source_location\030\021 "
  "\001(\01324.google.api.servicecontrol.v1.LogEn"
  "trySourceLocation\032-\n\013LabelsEntry\022\013\n\003key\030"
  "\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001B\t\n\007payload\"N\n\021L"
  "ogEntryOperation\022\n\n\002id\030\001 \001(\t\022\020\n\010producer"
  "\030\002 \001(\t\022\r\n\005first\030\003 \001(\010\022\014\n\004last\030\004 \001(\010\"F\n\026L"
  "ogEntrySourceLocation\022\014\n\004file\030\001 \001(\t\022\014\n\004l"
  "ine\030\002 \001(\003\022\020\n\010function\030\003 \001(\tB\345\001\n com.goog"
  "le.api.servicecontrol.v1B\rLogEntryProtoP"
  "\001ZJgoogle.golang.org/genproto/googleapis"
  "/api/servicecontrol/v1;servicecontrol\252\002\036"
  "Google.Cloud.ServiceControl.V1\312\002\036Google\\"
  "Cloud\\ServiceControl\\V1\352\002!Google::Cloud:"
  ":ServiceControl::V1b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_google_2fapi_2fservicecontrol_2fv1_2flog_5fentry_2eproto_deps[5] = {
  &::descriptor_table_google_2fapi_2fservicecontrol_2fv1_2fhttp_5frequest_2eproto,
  &::descriptor_table_google_2flogging_2ftype_2flog_5fseverity_2eproto,
  &::descriptor_table_google_2fprotobuf_2fany_2eproto,
  &::descriptor_table_google_2fprotobuf_2fstruct_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::_pbi::once_flag descriptor_table_google_2fapi_2fservicecontrol_2fv1_2flog_5fentry_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_google_2fapi_2fservicecontrol_2fv1_2flog_5fentry_2eproto = {
    false, false, 1267, descriptor_table_protodef_google_2fapi_2fservicecontrol_2fv1_2flog_5fentry_2eproto,
    "google/api/servicecontrol/v1/log_entry.proto",
    &descriptor_table_google_2fapi_2fservicecontrol_2fv1_2flog_5fentry_2eproto_once, descriptor_table_google_2fapi_2fservicecontrol_2fv1_2flog_5fentry_2eproto_deps, 5, 4,
    schemas, file_default_instances, TableStruct_google_2fapi_2fservicecontrol_2fv1_2flog_5fentry_2eproto::offsets,
    file_level_metadata_google_2fapi_2fservicecontrol_2fv1_2flog_5fentry_2eproto, file_level_enum_descriptors_google_2fapi_2fservicecontrol_2fv1_2flog_5fentry_2eproto,
    file_level_service_descriptors_google_2fapi_2fservicecontrol_2fv1_2flog_5fentry_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_google_2fapi_2fservicecontrol_2fv1_2flog_5fentry_2eproto_getter() {
  return &descriptor_table_google_2fapi_2fservicecontrol_2fv1_2flog_5fentry_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_google_2fapi_2fservicecontrol_2fv1_2flog_5fentry_2eproto(&descriptor_table_google_2fapi_2fservicecontrol_2fv1_2flog_5fentry_2eproto);
namespace google {
namespace api {
namespace servicecontrol {
namespace v1 {

// ===================================================================

LogEntry_LabelsEntry_DoNotUse::LogEntry_LabelsEntry_DoNotUse() {}
LogEntry_LabelsEntry_DoNotUse::LogEntry_LabelsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void LogEntry_LabelsEntry_DoNotUse::MergeFrom(const LogEntry_LabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata LogEntry_LabelsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicecontrol_2fv1_2flog_5fentry_2eproto_getter, &descriptor_table_google_2fapi_2fservicecontrol_2fv1_2flog_5fentry_2eproto_once,
      file_level_metadata_google_2fapi_2fservicecontrol_2fv1_2flog_5fentry_2eproto[0]);
}

// ===================================================================

class LogEntry::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& timestamp(const LogEntry* msg);
  static const ::google::api::servicecontrol::v1::HttpRequest& http_request(const LogEntry* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Any& proto_payload(const LogEntry* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Struct& struct_payload(const LogEntry* msg);
  static const ::google::api::servicecontrol::v1::LogEntryOperation& operation(const LogEntry* msg);
  static const ::google::api::servicecontrol::v1::LogEntrySourceLocation& source_location(const LogEntry* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
LogEntry::_Internal::timestamp(const LogEntry* msg) {
  return *msg->_impl_.timestamp_;
}
const ::google::api::servicecontrol::v1::HttpRequest&
LogEntry::_Internal::http_request(const LogEntry* msg) {
  return *msg->_impl_.http_request_;
}
const ::PROTOBUF_NAMESPACE_ID::Any&
LogEntry::_Internal::proto_payload(const LogEntry* msg) {
  return *msg->_impl_.payload_.proto_payload_;
}
const ::PROTOBUF_NAMESPACE_ID::Struct&
LogEntry::_Internal::struct_payload(const LogEntry* msg) {
  return *msg->_impl_.payload_.struct_payload_;
}
const ::google::api::servicecontrol::v1::LogEntryOperation&
LogEntry::_Internal::operation(const LogEntry* msg) {
  return *msg->_impl_.operation_;
}
const ::google::api::servicecontrol::v1::LogEntrySourceLocation&
LogEntry::_Internal::source_location(const LogEntry* msg) {
  return *msg->_impl_.source_location_;
}
void LogEntry::clear_timestamp() {
  if (GetArenaForAllocation() == nullptr && _impl_.timestamp_ != nullptr) {
    delete _impl_.timestamp_;
  }
  _impl_.timestamp_ = nullptr;
}
void LogEntry::clear_http_request() {
  if (GetArenaForAllocation() == nullptr && _impl_.http_request_ != nullptr) {
    delete _impl_.http_request_;
  }
  _impl_.http_request_ = nullptr;
}
void LogEntry::set_allocated_proto_payload(::PROTOBUF_NAMESPACE_ID::Any* proto_payload) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (proto_payload) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(proto_payload));
    if (message_arena != submessage_arena) {
      proto_payload = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, proto_payload, submessage_arena);
    }
    set_has_proto_payload();
    _impl_.payload_.proto_payload_ = proto_payload;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.servicecontrol.v1.LogEntry.proto_payload)
}
void LogEntry::clear_proto_payload() {
  if (_internal_has_proto_payload()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.payload_.proto_payload_;
    }
    clear_has_payload();
  }
}
void LogEntry::set_allocated_struct_payload(::PROTOBUF_NAMESPACE_ID::Struct* struct_payload) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (struct_payload) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(struct_payload));
    if (message_arena != submessage_arena) {
      struct_payload = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, struct_payload, submessage_arena);
    }
    set_has_struct_payload();
    _impl_.payload_.struct_payload_ = struct_payload;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.servicecontrol.v1.LogEntry.struct_payload)
}
void LogEntry::clear_struct_payload() {
  if (_internal_has_struct_payload()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.payload_.struct_payload_;
    }
    clear_has_payload();
  }
}
LogEntry::LogEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &LogEntry::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v1.LogEntry)
}
LogEntry::LogEntry(const LogEntry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LogEntry* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.labels_)*/{}
    , decltype(_impl_.insert_id_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.trace_){}
    , decltype(_impl_.timestamp_){nullptr}
    , decltype(_impl_.http_request_){nullptr}
    , decltype(_impl_.operation_){nullptr}
    , decltype(_impl_.source_location_){nullptr}
    , decltype(_impl_.severity_){}
    , decltype(_impl_.payload_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.labels_.MergeFrom(from._impl_.labels_);
  _impl_.insert_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.insert_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_insert_id().empty()) {
    _this->_impl_.insert_id_.Set(from._internal_insert_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.trace_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.trace_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_trace().empty()) {
    _this->_impl_.trace_.Set(from._internal_trace(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_timestamp()) {
    _this->_impl_.timestamp_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.timestamp_);
  }
  if (from._internal_has_http_request()) {
    _this->_impl_.http_request_ = new ::google::api::servicecontrol::v1::HttpRequest(*from._impl_.http_request_);
  }
  if (from._internal_has_operation()) {
    _this->_impl_.operation_ = new ::google::api::servicecontrol::v1::LogEntryOperation(*from._impl_.operation_);
  }
  if (from._internal_has_source_location()) {
    _this->_impl_.source_location_ = new ::google::api::servicecontrol::v1::LogEntrySourceLocation(*from._impl_.source_location_);
  }
  _this->_impl_.severity_ = from._impl_.severity_;
  clear_has_payload();
  switch (from.payload_case()) {
    case kProtoPayload: {
      _this->_internal_mutable_proto_payload()->::PROTOBUF_NAMESPACE_ID::Any::MergeFrom(
          from._internal_proto_payload());
      break;
    }
    case kTextPayload: {
      _this->_internal_set_text_payload(from._internal_text_payload());
      break;
    }
    case kStructPayload: {
      _this->_internal_mutable_struct_payload()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(
          from._internal_struct_payload());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v1.LogEntry)
}

inline void LogEntry::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.labels_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.insert_id_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.trace_){}
    , decltype(_impl_.timestamp_){nullptr}
    , decltype(_impl_.http_request_){nullptr}
    , decltype(_impl_.operation_){nullptr}
    , decltype(_impl_.source_location_){nullptr}
    , decltype(_impl_.severity_){0}
    , decltype(_impl_.payload_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  _impl_.insert_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.insert_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.trace_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.trace_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  clear_has_payload();
}

LogEntry::~LogEntry() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v1.LogEntry)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void LogEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.labels_.Destruct();
  _impl_.labels_.~MapField();
  _impl_.insert_id_.Destroy();
  _impl_.name_.Destroy();
  _impl_.trace_.Destroy();
  if (this != internal_default_instance()) delete _impl_.timestamp_;
  if (this != internal_default_instance()) delete _impl_.http_request_;
  if (this != internal_default_instance()) delete _impl_.operation_;
  if (this != internal_default_instance()) delete _impl_.source_location_;
  if (has_payload()) {
    clear_payload();
  }
}

void LogEntry::ArenaDtor(void* object) {
  LogEntry* _this = reinterpret_cast< LogEntry* >(object);
  _this->_impl_.labels_.Destruct();
}
void LogEntry::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LogEntry::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:google.api.servicecontrol.v1.LogEntry)
  switch (payload_case()) {
    case kProtoPayload: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.payload_.proto_payload_;
      }
      break;
    }
    case kTextPayload: {
      _impl_.payload_.text_payload_.Destroy();
      break;
    }
    case kStructPayload: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.payload_.struct_payload_;
      }
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}


void LogEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v1.LogEntry)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.labels_.Clear();
  _impl_.insert_id_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.trace_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.timestamp_ != nullptr) {
    delete _impl_.timestamp_;
  }
  _impl_.timestamp_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.http_request_ != nullptr) {
    delete _impl_.http_request_;
  }
  _impl_.http_request_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.operation_ != nullptr) {
    delete _impl_.operation_;
  }
  _impl_.operation_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.source_location_ != nullptr) {
    delete _impl_.source_location_;
  }
  _impl_.source_location_ = nullptr;
  _impl_.severity_ = 0;
  clear_payload();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LogEntry::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.Any proto_payload = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_proto_payload(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string text_payload = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_text_payload();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicecontrol.v1.LogEntry.text_payload"));
        } else
          goto handle_unusual;
        continue;
      // string insert_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_insert_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicecontrol.v1.LogEntry.insert_id"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct struct_payload = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_struct_payload(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string name = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicecontrol.v1.LogEntry.name"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp timestamp = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_timestamp(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.logging.type.LogSeverity severity = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_severity(static_cast<::google::logging::type::LogSeverity>(val));
        } else
          goto handle_unusual;
        continue;
      // map<string, string> labels = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.labels_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<106>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .google.api.servicecontrol.v1.HttpRequest http_request = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_http_request(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string trace = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          auto str = _internal_mutable_trace();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicecontrol.v1.LogEntry.trace"));
        } else
          goto handle_unusual;
        continue;
      // .google.api.servicecontrol.v1.LogEntryOperation operation = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_operation(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.servicecontrol.v1.LogEntrySourceLocation source_location = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_source_location(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LogEntry::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v1.LogEntry)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any proto_payload = 2;
  if (_internal_has_proto_payload()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::proto_payload(this),
        _Internal::proto_payload(this).GetCachedSize(), target, stream);
  }

  // string text_payload = 3;
  if (_internal_has_text_payload()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text_payload().data(), static_cast<int>(this->_internal_text_payload().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.LogEntry.text_payload");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_text_payload(), target);
  }

  // string insert_id = 4;
  if (!this->_internal_insert_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_insert_id().data(), static_cast<int>(this->_internal_insert_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.LogEntry.insert_id");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_insert_id(), target);
  }

  // .google.protobuf.Struct struct_payload = 6;
  if (_internal_has_struct_payload()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::struct_payload(this),
        _Internal::struct_payload(this).GetCachedSize(), target, stream);
  }

  // string name = 10;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.LogEntry.name");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_name(), target);
  }

  // .google.protobuf.Timestamp timestamp = 11;
  if (this->_internal_has_timestamp()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::timestamp(this),
        _Internal::timestamp(this).GetCachedSize(), target, stream);
  }

  // .google.logging.type.LogSeverity severity = 12;
  if (this->_internal_severity() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      12, this->_internal_severity(), target);
  }

  // map<string, string> labels = 13;
  if (!this->_internal_labels().empty()) {
    using MapType = ::_pb::Map<std::string, std::string>;
    using WireHelper = LogEntry_LabelsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_labels();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "google.api.servicecontrol.v1.LogEntry.LabelsEntry.key");
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.second.data(), static_cast<int>(entry.second.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "google.api.servicecontrol.v1.LogEntry.LabelsEntry.value");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(13, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(13, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // .google.api.servicecontrol.v1.HttpRequest http_request = 14;
  if (this->_internal_has_http_request()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(14, _Internal::http_request(this),
        _Internal::http_request(this).GetCachedSize(), target, stream);
  }

  // string trace = 15;
  if (!this->_internal_trace().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_trace().data(), static_cast<int>(this->_internal_trace().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.LogEntry.trace");
    target = stream->WriteStringMaybeAliased(
        15, this->_internal_trace(), target);
  }

  // .google.api.servicecontrol.v1.LogEntryOperation operation = 16;
  if (this->_internal_has_operation()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(16, _Internal::operation(this),
        _Internal::operation(this).GetCachedSize(), target, stream);
  }

  // .google.api.servicecontrol.v1.LogEntrySourceLocation source_location = 17;
  if (this->_internal_has_source_location()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(17, _Internal::source_location(this),
        _Internal::source_location(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v1.LogEntry)
  return target;
}

size_t LogEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v1.LogEntry)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> labels = 13;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_labels_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_labels().begin();
      it != this->_internal_labels().end(); ++it) {
    total_size += LogEntry_LabelsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string insert_id = 4;
  if (!this->_internal_insert_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_insert_id());
  }

  // string name = 10;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string trace = 15;
  if (!this->_internal_trace().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_trace());
  }

  // .google.protobuf.Timestamp timestamp = 11;
  if (this->_internal_has_timestamp()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.timestamp_);
  }

  // .google.api.servicecontrol.v1.HttpRequest http_request = 14;
  if (this->_internal_has_http_request()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.http_request_);
  }

  // .google.api.servicecontrol.v1.LogEntryOperation operation = 16;
  if (this->_internal_has_operation()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.operation_);
  }

  // .google.api.servicecontrol.v1.LogEntrySourceLocation source_location = 17;
  if (this->_internal_has_source_location()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.source_location_);
  }

  // .google.logging.type.LogSeverity severity = 12;
  if (this->_internal_severity() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_severity());
  }

  switch (payload_case()) {
    // .google.protobuf.Any proto_payload = 2;
    case kProtoPayload: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.payload_.proto_payload_);
      break;
    }
    // string text_payload = 3;
    case kTextPayload: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_text_payload());
      break;
    }
    // .google.protobuf.Struct struct_payload = 6;
    case kStructPayload: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.payload_.struct_payload_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LogEntry::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LogEntry::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LogEntry::GetClassData() const { return &_class_data_; }


void LogEntry::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LogEntry*>(&to_msg);
  auto& from = static_cast<const LogEntry&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v1.LogEntry)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.labels_.MergeFrom(from._impl_.labels_);
  if (!from._internal_insert_id().empty()) {
    _this->_internal_set_insert_id(from._internal_insert_id());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_trace().empty()) {
    _this->_internal_set_trace(from._internal_trace());
  }
  if (from._internal_has_timestamp()) {
    _this->_internal_mutable_timestamp()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_timestamp());
  }
  if (from._internal_has_http_request()) {
    _this->_internal_mutable_http_request()->::google::api::servicecontrol::v1::HttpRequest::MergeFrom(
        from._internal_http_request());
  }
  if (from._internal_has_operation()) {
    _this->_internal_mutable_operation()->::google::api::servicecontrol::v1::LogEntryOperation::MergeFrom(
        from._internal_operation());
  }
  if (from._internal_has_source_location()) {
    _this->_internal_mutable_source_location()->::google::api::servicecontrol::v1::LogEntrySourceLocation::MergeFrom(
        from._internal_source_location());
  }
  if (from._internal_severity() != 0) {
    _this->_internal_set_severity(from._internal_severity());
  }
  switch (from.payload_case()) {
    case kProtoPayload: {
      _this->_internal_mutable_proto_payload()->::PROTOBUF_NAMESPACE_ID::Any::MergeFrom(
          from._internal_proto_payload());
      break;
    }
    case kTextPayload: {
      _this->_internal_set_text_payload(from._internal_text_payload());
      break;
    }
    case kStructPayload: {
      _this->_internal_mutable_struct_payload()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(
          from._internal_struct_payload());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LogEntry::CopyFrom(const LogEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v1.LogEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogEntry::IsInitialized() const {
  return true;
}

void LogEntry::InternalSwap(LogEntry* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.labels_.InternalSwap(&other->_impl_.labels_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.insert_id_, lhs_arena,
      &other->_impl_.insert_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.trace_, lhs_arena,
      &other->_impl_.trace_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LogEntry, _impl_.severity_)
      + sizeof(LogEntry::_impl_.severity_)
      - PROTOBUF_FIELD_OFFSET(LogEntry, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
  swap(_impl_.payload_, other->_impl_.payload_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata LogEntry::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicecontrol_2fv1_2flog_5fentry_2eproto_getter, &descriptor_table_google_2fapi_2fservicecontrol_2fv1_2flog_5fentry_2eproto_once,
      file_level_metadata_google_2fapi_2fservicecontrol_2fv1_2flog_5fentry_2eproto[1]);
}

// ===================================================================

class LogEntryOperation::_Internal {
 public:
};

LogEntryOperation::LogEntryOperation(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v1.LogEntryOperation)
}
LogEntryOperation::LogEntryOperation(const LogEntryOperation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LogEntryOperation* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.producer_){}
    , decltype(_impl_.first_){}
    , decltype(_impl_.last_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.producer_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.producer_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_producer().empty()) {
    _this->_impl_.producer_.Set(from._internal_producer(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.first_, &from._impl_.first_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.last_) -
    reinterpret_cast<char*>(&_impl_.first_)) + sizeof(_impl_.last_));
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v1.LogEntryOperation)
}

inline void LogEntryOperation::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.producer_){}
    , decltype(_impl_.first_){false}
    , decltype(_impl_.last_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.producer_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.producer_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LogEntryOperation::~LogEntryOperation() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v1.LogEntryOperation)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LogEntryOperation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
  _impl_.producer_.Destroy();
}

void LogEntryOperation::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LogEntryOperation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v1.LogEntryOperation)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.producer_.ClearToEmpty();
  ::memset(&_impl_.first_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.last_) -
      reinterpret_cast<char*>(&_impl_.first_)) + sizeof(_impl_.last_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LogEntryOperation::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicecontrol.v1.LogEntryOperation.id"));
        } else
          goto handle_unusual;
        continue;
      // string producer = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_producer();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicecontrol.v1.LogEntryOperation.producer"));
        } else
          goto handle_unusual;
        continue;
      // bool first = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.first_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool last = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.last_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LogEntryOperation::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v1.LogEntryOperation)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.LogEntryOperation.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string producer = 2;
  if (!this->_internal_producer().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_producer().data(), static_cast<int>(this->_internal_producer().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.LogEntryOperation.producer");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_producer(), target);
  }

  // bool first = 3;
  if (this->_internal_first() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_first(), target);
  }

  // bool last = 4;
  if (this->_internal_last() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_last(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v1.LogEntryOperation)
  return target;
}

size_t LogEntryOperation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v1.LogEntryOperation)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string producer = 2;
  if (!this->_internal_producer().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_producer());
  }

  // bool first = 3;
  if (this->_internal_first() != 0) {
    total_size += 1 + 1;
  }

  // bool last = 4;
  if (this->_internal_last() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LogEntryOperation::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LogEntryOperation::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LogEntryOperation::GetClassData() const { return &_class_data_; }


void LogEntryOperation::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LogEntryOperation*>(&to_msg);
  auto& from = static_cast<const LogEntryOperation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v1.LogEntryOperation)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_producer().empty()) {
    _this->_internal_set_producer(from._internal_producer());
  }
  if (from._internal_first() != 0) {
    _this->_internal_set_first(from._internal_first());
  }
  if (from._internal_last() != 0) {
    _this->_internal_set_last(from._internal_last());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LogEntryOperation::CopyFrom(const LogEntryOperation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v1.LogEntryOperation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogEntryOperation::IsInitialized() const {
  return true;
}

void LogEntryOperation::InternalSwap(LogEntryOperation* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.producer_, lhs_arena,
      &other->_impl_.producer_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LogEntryOperation, _impl_.last_)
      + sizeof(LogEntryOperation::_impl_.last_)
      - PROTOBUF_FIELD_OFFSET(LogEntryOperation, _impl_.first_)>(
          reinterpret_cast<char*>(&_impl_.first_),
          reinterpret_cast<char*>(&other->_impl_.first_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LogEntryOperation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicecontrol_2fv1_2flog_5fentry_2eproto_getter, &descriptor_table_google_2fapi_2fservicecontrol_2fv1_2flog_5fentry_2eproto_once,
      file_level_metadata_google_2fapi_2fservicecontrol_2fv1_2flog_5fentry_2eproto[2]);
}

// ===================================================================

class LogEntrySourceLocation::_Internal {
 public:
};

LogEntrySourceLocation::LogEntrySourceLocation(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v1.LogEntrySourceLocation)
}
LogEntrySourceLocation::LogEntrySourceLocation(const LogEntrySourceLocation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LogEntrySourceLocation* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.file_){}
    , decltype(_impl_.function_){}
    , decltype(_impl_.line_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.file_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_file().empty()) {
    _this->_impl_.file_.Set(from._internal_file(), 
      _this->GetArenaForAllocation());
  }
  _impl_.function_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.function_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_function().empty()) {
    _this->_impl_.function_.Set(from._internal_function(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.line_ = from._impl_.line_;
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v1.LogEntrySourceLocation)
}

inline void LogEntrySourceLocation::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.file_){}
    , decltype(_impl_.function_){}
    , decltype(_impl_.line_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.file_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.function_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.function_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LogEntrySourceLocation::~LogEntrySourceLocation() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v1.LogEntrySourceLocation)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LogEntrySourceLocation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.file_.Destroy();
  _impl_.function_.Destroy();
}

void LogEntrySourceLocation::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LogEntrySourceLocation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v1.LogEntrySourceLocation)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.file_.ClearToEmpty();
  _impl_.function_.ClearToEmpty();
  _impl_.line_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LogEntrySourceLocation::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string file = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_file();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicecontrol.v1.LogEntrySourceLocation.file"));
        } else
          goto handle_unusual;
        continue;
      // int64 line = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.line_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string function = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_function();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicecontrol.v1.LogEntrySourceLocation.function"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LogEntrySourceLocation::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v1.LogEntrySourceLocation)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string file = 1;
  if (!this->_internal_file().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file().data(), static_cast<int>(this->_internal_file().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.LogEntrySourceLocation.file");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_file(), target);
  }

  // int64 line = 2;
  if (this->_internal_line() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_line(), target);
  }

  // string function = 3;
  if (!this->_internal_function().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_function().data(), static_cast<int>(this->_internal_function().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.LogEntrySourceLocation.function");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_function(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v1.LogEntrySourceLocation)
  return target;
}

size_t LogEntrySourceLocation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v1.LogEntrySourceLocation)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file = 1;
  if (!this->_internal_file().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file());
  }

  // string function = 3;
  if (!this->_internal_function().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_function());
  }

  // int64 line = 2;
  if (this->_internal_line() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_line());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LogEntrySourceLocation::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LogEntrySourceLocation::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LogEntrySourceLocation::GetClassData() const { return &_class_data_; }


void LogEntrySourceLocation::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LogEntrySourceLocation*>(&to_msg);
  auto& from = static_cast<const LogEntrySourceLocation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v1.LogEntrySourceLocation)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_file().empty()) {
    _this->_internal_set_file(from._internal_file());
  }
  if (!from._internal_function().empty()) {
    _this->_internal_set_function(from._internal_function());
  }
  if (from._internal_line() != 0) {
    _this->_internal_set_line(from._internal_line());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LogEntrySourceLocation::CopyFrom(const LogEntrySourceLocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v1.LogEntrySourceLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogEntrySourceLocation::IsInitialized() const {
  return true;
}

void LogEntrySourceLocation::InternalSwap(LogEntrySourceLocation* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.file_, lhs_arena,
      &other->_impl_.file_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.function_, lhs_arena,
      &other->_impl_.function_, rhs_arena
  );
  swap(_impl_.line_, other->_impl_.line_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LogEntrySourceLocation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicecontrol_2fv1_2flog_5fentry_2eproto_getter, &descriptor_table_google_2fapi_2fservicecontrol_2fv1_2flog_5fentry_2eproto_once,
      file_level_metadata_google_2fapi_2fservicecontrol_2fv1_2flog_5fentry_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace servicecontrol
}  // namespace api
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::google::api::servicecontrol::v1::LogEntry_LabelsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::google::api::servicecontrol::v1::LogEntry_LabelsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicecontrol::v1::LogEntry_LabelsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicecontrol::v1::LogEntry*
Arena::CreateMaybeMessage< ::google::api::servicecontrol::v1::LogEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicecontrol::v1::LogEntry >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicecontrol::v1::LogEntryOperation*
Arena::CreateMaybeMessage< ::google::api::servicecontrol::v1::LogEntryOperation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicecontrol::v1::LogEntryOperation >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicecontrol::v1::LogEntrySourceLocation*
Arena::CreateMaybeMessage< ::google::api::servicecontrol::v1::LogEntrySourceLocation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicecontrol::v1::LogEntrySourceLocation >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

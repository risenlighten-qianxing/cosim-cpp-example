// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/servicemanagement/v1/servicemanager.proto

#include "google/api/servicemanagement/v1/servicemanager.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace google {
namespace api {
namespace servicemanagement {
namespace v1 {
PROTOBUF_CONSTEXPR ListServicesRequest::ListServicesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.producer_project_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.page_token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.consumer_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.page_size_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListServicesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListServicesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListServicesRequestDefaultTypeInternal() {}
  union {
    ListServicesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListServicesRequestDefaultTypeInternal _ListServicesRequest_default_instance_;
PROTOBUF_CONSTEXPR ListServicesResponse::ListServicesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.services_)*/{}
  , /*decltype(_impl_.next_page_token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListServicesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListServicesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListServicesResponseDefaultTypeInternal() {}
  union {
    ListServicesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListServicesResponseDefaultTypeInternal _ListServicesResponse_default_instance_;
PROTOBUF_CONSTEXPR GetServiceRequest::GetServiceRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.service_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetServiceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetServiceRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetServiceRequestDefaultTypeInternal() {}
  union {
    GetServiceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetServiceRequestDefaultTypeInternal _GetServiceRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateServiceRequest::CreateServiceRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.service_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateServiceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateServiceRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateServiceRequestDefaultTypeInternal() {}
  union {
    CreateServiceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateServiceRequestDefaultTypeInternal _CreateServiceRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteServiceRequest::DeleteServiceRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.service_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteServiceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteServiceRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteServiceRequestDefaultTypeInternal() {}
  union {
    DeleteServiceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteServiceRequestDefaultTypeInternal _DeleteServiceRequest_default_instance_;
PROTOBUF_CONSTEXPR UndeleteServiceRequest::UndeleteServiceRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.service_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UndeleteServiceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UndeleteServiceRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UndeleteServiceRequestDefaultTypeInternal() {}
  union {
    UndeleteServiceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UndeleteServiceRequestDefaultTypeInternal _UndeleteServiceRequest_default_instance_;
PROTOBUF_CONSTEXPR UndeleteServiceResponse::UndeleteServiceResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.service_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UndeleteServiceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UndeleteServiceResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UndeleteServiceResponseDefaultTypeInternal() {}
  union {
    UndeleteServiceResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UndeleteServiceResponseDefaultTypeInternal _UndeleteServiceResponse_default_instance_;
PROTOBUF_CONSTEXPR GetServiceConfigRequest::GetServiceConfigRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.service_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.config_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.view_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetServiceConfigRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetServiceConfigRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetServiceConfigRequestDefaultTypeInternal() {}
  union {
    GetServiceConfigRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetServiceConfigRequestDefaultTypeInternal _GetServiceConfigRequest_default_instance_;
PROTOBUF_CONSTEXPR ListServiceConfigsRequest::ListServiceConfigsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.service_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.page_token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.page_size_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListServiceConfigsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListServiceConfigsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListServiceConfigsRequestDefaultTypeInternal() {}
  union {
    ListServiceConfigsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListServiceConfigsRequestDefaultTypeInternal _ListServiceConfigsRequest_default_instance_;
PROTOBUF_CONSTEXPR ListServiceConfigsResponse::ListServiceConfigsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.service_configs_)*/{}
  , /*decltype(_impl_.next_page_token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListServiceConfigsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListServiceConfigsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListServiceConfigsResponseDefaultTypeInternal() {}
  union {
    ListServiceConfigsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListServiceConfigsResponseDefaultTypeInternal _ListServiceConfigsResponse_default_instance_;
PROTOBUF_CONSTEXPR CreateServiceConfigRequest::CreateServiceConfigRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.service_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.service_config_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateServiceConfigRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateServiceConfigRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateServiceConfigRequestDefaultTypeInternal() {}
  union {
    CreateServiceConfigRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateServiceConfigRequestDefaultTypeInternal _CreateServiceConfigRequest_default_instance_;
PROTOBUF_CONSTEXPR SubmitConfigSourceRequest::SubmitConfigSourceRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.service_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.config_source_)*/nullptr
  , /*decltype(_impl_.validate_only_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SubmitConfigSourceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubmitConfigSourceRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubmitConfigSourceRequestDefaultTypeInternal() {}
  union {
    SubmitConfigSourceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubmitConfigSourceRequestDefaultTypeInternal _SubmitConfigSourceRequest_default_instance_;
PROTOBUF_CONSTEXPR SubmitConfigSourceResponse::SubmitConfigSourceResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.service_config_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SubmitConfigSourceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubmitConfigSourceResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubmitConfigSourceResponseDefaultTypeInternal() {}
  union {
    SubmitConfigSourceResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubmitConfigSourceResponseDefaultTypeInternal _SubmitConfigSourceResponse_default_instance_;
PROTOBUF_CONSTEXPR CreateServiceRolloutRequest::CreateServiceRolloutRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.service_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.rollout_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateServiceRolloutRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateServiceRolloutRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateServiceRolloutRequestDefaultTypeInternal() {}
  union {
    CreateServiceRolloutRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateServiceRolloutRequestDefaultTypeInternal _CreateServiceRolloutRequest_default_instance_;
PROTOBUF_CONSTEXPR ListServiceRolloutsRequest::ListServiceRolloutsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.service_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.page_token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.filter_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.page_size_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListServiceRolloutsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListServiceRolloutsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListServiceRolloutsRequestDefaultTypeInternal() {}
  union {
    ListServiceRolloutsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListServiceRolloutsRequestDefaultTypeInternal _ListServiceRolloutsRequest_default_instance_;
PROTOBUF_CONSTEXPR ListServiceRolloutsResponse::ListServiceRolloutsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.rollouts_)*/{}
  , /*decltype(_impl_.next_page_token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListServiceRolloutsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListServiceRolloutsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListServiceRolloutsResponseDefaultTypeInternal() {}
  union {
    ListServiceRolloutsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListServiceRolloutsResponseDefaultTypeInternal _ListServiceRolloutsResponse_default_instance_;
PROTOBUF_CONSTEXPR GetServiceRolloutRequest::GetServiceRolloutRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.service_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.rollout_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetServiceRolloutRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetServiceRolloutRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetServiceRolloutRequestDefaultTypeInternal() {}
  union {
    GetServiceRolloutRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetServiceRolloutRequestDefaultTypeInternal _GetServiceRolloutRequest_default_instance_;
PROTOBUF_CONSTEXPR GenerateConfigReportRequest::GenerateConfigReportRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.new_config_)*/nullptr
  , /*decltype(_impl_.old_config_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GenerateConfigReportRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GenerateConfigReportRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GenerateConfigReportRequestDefaultTypeInternal() {}
  union {
    GenerateConfigReportRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GenerateConfigReportRequestDefaultTypeInternal _GenerateConfigReportRequest_default_instance_;
PROTOBUF_CONSTEXPR GenerateConfigReportResponse::GenerateConfigReportResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.change_reports_)*/{}
  , /*decltype(_impl_.diagnostics_)*/{}
  , /*decltype(_impl_.service_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GenerateConfigReportResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GenerateConfigReportResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GenerateConfigReportResponseDefaultTypeInternal() {}
  union {
    GenerateConfigReportResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GenerateConfigReportResponseDefaultTypeInternal _GenerateConfigReportResponse_default_instance_;
}  // namespace v1
}  // namespace servicemanagement
}  // namespace api
}  // namespace google
static ::_pb::Metadata file_level_metadata_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto[19];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto = nullptr;

const uint32_t TableStruct_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServicesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServicesRequest, _impl_.producer_project_id_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServicesRequest, _impl_.page_size_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServicesRequest, _impl_.page_token_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServicesRequest, _impl_.consumer_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServicesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServicesResponse, _impl_.services_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServicesResponse, _impl_.next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::GetServiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::GetServiceRequest, _impl_.service_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::CreateServiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::CreateServiceRequest, _impl_.service_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::DeleteServiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::DeleteServiceRequest, _impl_.service_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::UndeleteServiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::UndeleteServiceRequest, _impl_.service_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::UndeleteServiceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::UndeleteServiceResponse, _impl_.service_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::GetServiceConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::GetServiceConfigRequest, _impl_.service_name_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::GetServiceConfigRequest, _impl_.config_id_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::GetServiceConfigRequest, _impl_.view_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceConfigsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceConfigsRequest, _impl_.service_name_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceConfigsRequest, _impl_.page_token_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceConfigsRequest, _impl_.page_size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceConfigsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceConfigsResponse, _impl_.service_configs_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceConfigsResponse, _impl_.next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::CreateServiceConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::CreateServiceConfigRequest, _impl_.service_name_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::CreateServiceConfigRequest, _impl_.service_config_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::SubmitConfigSourceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::SubmitConfigSourceRequest, _impl_.service_name_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::SubmitConfigSourceRequest, _impl_.config_source_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::SubmitConfigSourceRequest, _impl_.validate_only_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::SubmitConfigSourceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::SubmitConfigSourceResponse, _impl_.service_config_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::CreateServiceRolloutRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::CreateServiceRolloutRequest, _impl_.service_name_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::CreateServiceRolloutRequest, _impl_.rollout_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceRolloutsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceRolloutsRequest, _impl_.service_name_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceRolloutsRequest, _impl_.page_token_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceRolloutsRequest, _impl_.page_size_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceRolloutsRequest, _impl_.filter_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceRolloutsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceRolloutsResponse, _impl_.rollouts_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceRolloutsResponse, _impl_.next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::GetServiceRolloutRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::GetServiceRolloutRequest, _impl_.service_name_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::GetServiceRolloutRequest, _impl_.rollout_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::GenerateConfigReportRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::GenerateConfigReportRequest, _impl_.new_config_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::GenerateConfigReportRequest, _impl_.old_config_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::GenerateConfigReportResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::GenerateConfigReportResponse, _impl_.service_name_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::GenerateConfigReportResponse, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::GenerateConfigReportResponse, _impl_.change_reports_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::GenerateConfigReportResponse, _impl_.diagnostics_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::google::api::servicemanagement::v1::ListServicesRequest)},
  { 10, -1, -1, sizeof(::google::api::servicemanagement::v1::ListServicesResponse)},
  { 18, -1, -1, sizeof(::google::api::servicemanagement::v1::GetServiceRequest)},
  { 25, -1, -1, sizeof(::google::api::servicemanagement::v1::CreateServiceRequest)},
  { 32, -1, -1, sizeof(::google::api::servicemanagement::v1::DeleteServiceRequest)},
  { 39, -1, -1, sizeof(::google::api::servicemanagement::v1::UndeleteServiceRequest)},
  { 46, -1, -1, sizeof(::google::api::servicemanagement::v1::UndeleteServiceResponse)},
  { 53, -1, -1, sizeof(::google::api::servicemanagement::v1::GetServiceConfigRequest)},
  { 62, -1, -1, sizeof(::google::api::servicemanagement::v1::ListServiceConfigsRequest)},
  { 71, -1, -1, sizeof(::google::api::servicemanagement::v1::ListServiceConfigsResponse)},
  { 79, -1, -1, sizeof(::google::api::servicemanagement::v1::CreateServiceConfigRequest)},
  { 87, -1, -1, sizeof(::google::api::servicemanagement::v1::SubmitConfigSourceRequest)},
  { 96, -1, -1, sizeof(::google::api::servicemanagement::v1::SubmitConfigSourceResponse)},
  { 103, -1, -1, sizeof(::google::api::servicemanagement::v1::CreateServiceRolloutRequest)},
  { 111, -1, -1, sizeof(::google::api::servicemanagement::v1::ListServiceRolloutsRequest)},
  { 121, -1, -1, sizeof(::google::api::servicemanagement::v1::ListServiceRolloutsResponse)},
  { 129, -1, -1, sizeof(::google::api::servicemanagement::v1::GetServiceRolloutRequest)},
  { 137, -1, -1, sizeof(::google::api::servicemanagement::v1::GenerateConfigReportRequest)},
  { 145, -1, -1, sizeof(::google::api::servicemanagement::v1::GenerateConfigReportResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::google::api::servicemanagement::v1::_ListServicesRequest_default_instance_._instance,
  &::google::api::servicemanagement::v1::_ListServicesResponse_default_instance_._instance,
  &::google::api::servicemanagement::v1::_GetServiceRequest_default_instance_._instance,
  &::google::api::servicemanagement::v1::_CreateServiceRequest_default_instance_._instance,
  &::google::api::servicemanagement::v1::_DeleteServiceRequest_default_instance_._instance,
  &::google::api::servicemanagement::v1::_UndeleteServiceRequest_default_instance_._instance,
  &::google::api::servicemanagement::v1::_UndeleteServiceResponse_default_instance_._instance,
  &::google::api::servicemanagement::v1::_GetServiceConfigRequest_default_instance_._instance,
  &::google::api::servicemanagement::v1::_ListServiceConfigsRequest_default_instance_._instance,
  &::google::api::servicemanagement::v1::_ListServiceConfigsResponse_default_instance_._instance,
  &::google::api::servicemanagement::v1::_CreateServiceConfigRequest_default_instance_._instance,
  &::google::api::servicemanagement::v1::_SubmitConfigSourceRequest_default_instance_._instance,
  &::google::api::servicemanagement::v1::_SubmitConfigSourceResponse_default_instance_._instance,
  &::google::api::servicemanagement::v1::_CreateServiceRolloutRequest_default_instance_._instance,
  &::google::api::servicemanagement::v1::_ListServiceRolloutsRequest_default_instance_._instance,
  &::google::api::servicemanagement::v1::_ListServiceRolloutsResponse_default_instance_._instance,
  &::google::api::servicemanagement::v1::_GetServiceRolloutRequest_default_instance_._instance,
  &::google::api::servicemanagement::v1::_GenerateConfigReportRequest_default_instance_._instance,
  &::google::api::servicemanagement::v1::_GenerateConfigReportResponse_default_instance_._instance,
};

const char descriptor_table_protodef_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n4google/api/servicemanagement/v1/servic"
  "emanager.proto\022\037google.api.servicemanage"
  "ment.v1\032\034google/api/annotations.proto\032\027g"
  "oogle/api/client.proto\032\037google/api/field"
  "_behavior.proto\032\030google/api/service.prot"
  "o\032/google/api/servicemanagement/v1/resou"
  "rces.proto\032#google/longrunning/operation"
  "s.proto\032\031google/protobuf/any.proto\"r\n\023Li"
  "stServicesRequest\022\033\n\023producer_project_id"
  "\030\001 \001(\t\022\021\n\tpage_size\030\005 \001(\005\022\022\n\npage_token\030"
  "\006 \001(\t\022\027\n\013consumer_id\030\007 \001(\tB\002\030\001\"r\n\024ListSe"
  "rvicesResponse\022A\n\010services\030\001 \003(\0132/.googl"
  "e.api.servicemanagement.v1.ManagedServic"
  "e\022\027\n\017next_page_token\030\002 \001(\t\".\n\021GetService"
  "Request\022\031\n\014service_name\030\001 \001(\tB\003\340A\002\"]\n\024Cr"
  "eateServiceRequest\022E\n\007service\030\001 \001(\0132/.go"
  "ogle.api.servicemanagement.v1.ManagedSer"
  "viceB\003\340A\002\"1\n\024DeleteServiceRequest\022\031\n\014ser"
  "vice_name\030\001 \001(\tB\003\340A\002\"3\n\026UndeleteServiceR"
  "equest\022\031\n\014service_name\030\001 \001(\tB\003\340A\002\"[\n\027Und"
  "eleteServiceResponse\022@\n\007service\030\001 \001(\0132/."
  "google.api.servicemanagement.v1.ManagedS"
  "ervice\"\302\001\n\027GetServiceConfigRequest\022\031\n\014se"
  "rvice_name\030\001 \001(\tB\003\340A\002\022\026\n\tconfig_id\030\002 \001(\t"
  "B\003\340A\002\022Q\n\004view\030\003 \001(\0162C.google.api.service"
  "management.v1.GetServiceConfigRequest.Co"
  "nfigView\"!\n\nConfigView\022\t\n\005BASIC\020\000\022\010\n\004FUL"
  "L\020\001\"]\n\031ListServiceConfigsRequest\022\031\n\014serv"
  "ice_name\030\001 \001(\tB\003\340A\002\022\022\n\npage_token\030\002 \001(\t\022"
  "\021\n\tpage_size\030\003 \001(\005\"c\n\032ListServiceConfigs"
  "Response\022,\n\017service_configs\030\001 \003(\0132\023.goog"
  "le.api.Service\022\027\n\017next_page_token\030\002 \001(\t\""
  "i\n\032CreateServiceConfigRequest\022\031\n\014service"
  "_name\030\001 \001(\tB\003\340A\002\0220\n\016service_config\030\002 \001(\013"
  "2\023.google.api.ServiceB\003\340A\002\"\235\001\n\031SubmitCon"
  "figSourceRequest\022\031\n\014service_name\030\001 \001(\tB\003"
  "\340A\002\022I\n\rconfig_source\030\002 \001(\0132-.google.api."
  "servicemanagement.v1.ConfigSourceB\003\340A\002\022\032"
  "\n\rvalidate_only\030\003 \001(\010B\003\340A\001\"I\n\032SubmitConf"
  "igSourceResponse\022+\n\016service_config\030\001 \001(\013"
  "2\023.google.api.Service\"x\n\033CreateServiceRo"
  "lloutRequest\022\031\n\014service_name\030\001 \001(\tB\003\340A\002\022"
  ">\n\007rollout\030\002 \001(\0132(.google.api.serviceman"
  "agement.v1.RolloutB\003\340A\002\"s\n\032ListServiceRo"
  "lloutsRequest\022\031\n\014service_name\030\001 \001(\tB\003\340A\002"
  "\022\022\n\npage_token\030\002 \001(\t\022\021\n\tpage_size\030\003 \001(\005\022"
  "\023\n\006filter\030\004 \001(\tB\003\340A\002\"r\n\033ListServiceRollo"
  "utsResponse\022:\n\010rollouts\030\001 \003(\0132(.google.a"
  "pi.servicemanagement.v1.Rollout\022\027\n\017next_"
  "page_token\030\002 \001(\t\"N\n\030GetServiceRolloutReq"
  "uest\022\031\n\014service_name\030\001 \001(\tB\003\340A\002\022\027\n\nrollo"
  "ut_id\030\002 \001(\tB\003\340A\002\"{\n\033GenerateConfigReport"
  "Request\022-\n\nnew_config\030\001 \001(\0132\024.google.pro"
  "tobuf.AnyB\003\340A\002\022-\n\nold_config\030\002 \001(\0132\024.goo"
  "gle.protobuf.AnyB\003\340A\001\"\311\001\n\034GenerateConfig"
  "ReportResponse\022\024\n\014service_name\030\001 \001(\t\022\n\n\002"
  "id\030\002 \001(\t\022E\n\016change_reports\030\003 \003(\0132-.googl"
  "e.api.servicemanagement.v1.ChangeReport\022"
  "@\n\013diagnostics\030\004 \003(\0132+.google.api.servic"
  "emanagement.v1.Diagnostic2\310\031\n\016ServiceMan"
  "ager\022\263\001\n\014ListServices\0224.google.api.servi"
  "cemanagement.v1.ListServicesRequest\0325.go"
  "ogle.api.servicemanagement.v1.ListServic"
  "esResponse\"6\202\323\344\223\002\016\022\014/v1/services\332A\037produ"
  "cer_project_id,consumer_id\022\245\001\n\nGetServic"
  "e\0222.google.api.servicemanagement.v1.GetS"
  "erviceRequest\032/.google.api.servicemanage"
  "ment.v1.ManagedService\"2\202\323\344\223\002\035\022\033/v1/serv"
  "ices/{service_name}\332A\014service_name\022\365\001\n\rC"
  "reateService\0225.google.api.servicemanagem"
  "ent.v1.CreateServiceRequest\032\035.google.lon"
  "grunning.Operation\"\215\001\202\323\344\223\002\027\"\014/v1/service"
  "s:\007service\332A\007service\312Ac\n.google.api.serv"
  "icemanagement.v1.ManagedService\0221google."
  "api.servicemanagement.v1.OperationMetada"
  "ta\022\346\001\n\rDeleteService\0225.google.api.servic"
  "emanagement.v1.DeleteServiceRequest\032\035.go"
  "ogle.longrunning.Operation\"\177\202\323\344\223\002\035*\033/v1/"
  "services/{service_name}\332A\014service_name\312A"
  "J\n\025google.protobuf.Empty\0221google.api.ser"
  "vicemanagement.v1.OperationMetadata\022\226\002\n\017"
  "UndeleteService\0227.google.api.servicemana"
  "gement.v1.UndeleteServiceRequest\032\035.googl"
  "e.longrunning.Operation\"\252\001\202\323\344\223\002&\"$/v1/se"
  "rvices/{service_name}:undelete\332A\014service"
  "_name\312Al\n7google.api.servicemanagement.v"
  "1.UndeleteServiceResponse\0221google.api.se"
  "rvicemanagement.v1.OperationMetadata\022\311\001\n"
  "\022ListServiceConfigs\022:.google.api.service"
  "management.v1.ListServiceConfigsRequest\032"
  ";.google.api.servicemanagement.v1.ListSe"
  "rviceConfigsResponse\":\202\323\344\223\002%\022#/v1/servic"
  "es/{service_name}/configs\332A\014service_name"
  "\022\336\001\n\020GetServiceConfig\0228.google.api.servi"
  "cemanagement.v1.GetServiceConfigRequest\032"
  "\023.google.api.Service\"{\202\323\344\223\002W\022//v1/servic"
  "es/{service_name}/configs/{config_id}Z$\022"
  "\"/v1/services/{service_name}/config\332A\033se"
  "rvice_name,config_id,view\022\302\001\n\023CreateServ"
  "iceConfig\022;.google.api.servicemanagement"
  ".v1.CreateServiceConfigRequest\032\023.google."
  "api.Service\"Y\202\323\344\223\0025\"#/v1/services/{servi"
  "ce_name}/configs:\016service_config\332A\033servi"
  "ce_name,service_config\022\304\002\n\022SubmitConfigS"
  "ource\022:.google.api.servicemanagement.v1."
  "SubmitConfigSourceRequest\032\035.google.longr"
  "unning.Operation\"\322\001\202\323\344\223\002/\"*/v1/services/"
  "{service_name}/configs:submit:\001*\332A(servi"
  "ce_name,config_source,validate_only\312Ao\n:"
  "google.api.servicemanagement.v1.SubmitCo"
  "nfigSourceResponse\0221google.api.servicema"
  "nagement.v1.OperationMetadata\022\324\001\n\023ListSe"
  "rviceRollouts\022;.google.api.servicemanage"
  "ment.v1.ListServiceRolloutsRequest\032<.goo"
  "gle.api.servicemanagement.v1.ListService"
  "RolloutsResponse\"B\202\323\344\223\002&\022$/v1/services/{"
  "service_name}/rollouts\332A\023service_name,fi"
  "lter\022\315\001\n\021GetServiceRollout\0229.google.api."
  "servicemanagement.v1.GetServiceRolloutRe"
  "quest\032(.google.api.servicemanagement.v1."
  "Rollout\"S\202\323\344\223\0023\0221/v1/services/{service_n"
  "ame}/rollouts/{rollout_id}\332A\027service_nam"
  "e,rollout_id\022\241\002\n\024CreateServiceRollout\022<."
  "google.api.servicemanagement.v1.CreateSe"
  "rviceRolloutRequest\032\035.google.longrunning"
  ".Operation\"\253\001\202\323\344\223\002/\"$/v1/services/{servi"
  "ce_name}/rollouts:\007rollout\332A\024service_nam"
  "e,rollout\312A\\\n\'google.api.servicemanageme"
  "nt.v1.Rollout\0221google.api.servicemanagem"
  "ent.v1.OperationMetadata\022\331\001\n\024GenerateCon"
  "figReport\022<.google.api.servicemanagement"
  ".v1.GenerateConfigReportRequest\032=.google"
  ".api.servicemanagement.v1.GenerateConfig"
  "ReportResponse\"D\202\323\344\223\002&\"!/v1/services:gen"
  "erateConfigReport:\001*\332A\025new_config,old_co"
  "nfig\032\375\001\312A servicemanagement.googleapis.c"
  "om\322A\326\001https://www.googleapis.com/auth/cl"
  "oud-platform,https://www.googleapis.com/"
  "auth/cloud-platform.read-only,https://ww"
  "w.googleapis.com/auth/service.management"
  ",https://www.googleapis.com/auth/service"
  ".management.readonlyB\204\002\n#com.google.api."
  "servicemanagement.v1B\023ServiceManagerProt"
  "oP\001ZPgoogle.golang.org/genproto/googleap"
  "is/api/servicemanagement/v1;servicemanag"
  "ement\242\002\004GASM\252\002!Google.Cloud.ServiceManag"
  "ement.V1\312\002!Google\\Cloud\\ServiceManagemen"
  "t\\V1\352\002$Google::Cloud::ServiceManagement:"
  ":V1b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_deps[7] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_google_2fapi_2fclient_2eproto,
  &::descriptor_table_google_2fapi_2ffield_5fbehavior_2eproto,
  &::descriptor_table_google_2fapi_2fservice_2eproto,
  &::descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto,
  &::descriptor_table_google_2flongrunning_2foperations_2eproto,
  &::descriptor_table_google_2fprotobuf_2fany_2eproto,
};
static ::_pbi::once_flag descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto = {
    false, false, 5931, descriptor_table_protodef_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto,
    "google/api/servicemanagement/v1/servicemanager.proto",
    &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_once, descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_deps, 7, 19,
    schemas, file_default_instances, TableStruct_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::offsets,
    file_level_metadata_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto, file_level_enum_descriptors_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto,
    file_level_service_descriptors_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_getter() {
  return &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto(&descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto);
namespace google {
namespace api {
namespace servicemanagement {
namespace v1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GetServiceConfigRequest_ConfigView_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto);
  return file_level_enum_descriptors_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto[0];
}
bool GetServiceConfigRequest_ConfigView_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr GetServiceConfigRequest_ConfigView GetServiceConfigRequest::BASIC;
constexpr GetServiceConfigRequest_ConfigView GetServiceConfigRequest::FULL;
constexpr GetServiceConfigRequest_ConfigView GetServiceConfigRequest::ConfigView_MIN;
constexpr GetServiceConfigRequest_ConfigView GetServiceConfigRequest::ConfigView_MAX;
constexpr int GetServiceConfigRequest::ConfigView_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class ListServicesRequest::_Internal {
 public:
};

ListServicesRequest::ListServicesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.servicemanagement.v1.ListServicesRequest)
}
ListServicesRequest::ListServicesRequest(const ListServicesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListServicesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.producer_project_id_){}
    , decltype(_impl_.page_token_){}
    , decltype(_impl_.consumer_id_){}
    , decltype(_impl_.page_size_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.producer_project_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.producer_project_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_producer_project_id().empty()) {
    _this->_impl_.producer_project_id_.Set(from._internal_producer_project_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_page_token().empty()) {
    _this->_impl_.page_token_.Set(from._internal_page_token(), 
      _this->GetArenaForAllocation());
  }
  _impl_.consumer_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.consumer_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_consumer_id().empty()) {
    _this->_impl_.consumer_id_.Set(from._internal_consumer_id(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.page_size_ = from._impl_.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.ListServicesRequest)
}

inline void ListServicesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.producer_project_id_){}
    , decltype(_impl_.page_token_){}
    , decltype(_impl_.consumer_id_){}
    , decltype(_impl_.page_size_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.producer_project_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.producer_project_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.consumer_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.consumer_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListServicesRequest::~ListServicesRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.ListServicesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListServicesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.producer_project_id_.Destroy();
  _impl_.page_token_.Destroy();
  _impl_.consumer_id_.Destroy();
}

void ListServicesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListServicesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.ListServicesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.producer_project_id_.ClearToEmpty();
  _impl_.page_token_.ClearToEmpty();
  _impl_.consumer_id_.ClearToEmpty();
  _impl_.page_size_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListServicesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string producer_project_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_producer_project_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicemanagement.v1.ListServicesRequest.producer_project_id"));
        } else
          goto handle_unusual;
        continue;
      // int32 page_size = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string page_token = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_page_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicemanagement.v1.ListServicesRequest.page_token"));
        } else
          goto handle_unusual;
        continue;
      // string consumer_id = 7 [deprecated = true];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_consumer_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicemanagement.v1.ListServicesRequest.consumer_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListServicesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.ListServicesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string producer_project_id = 1;
  if (!this->_internal_producer_project_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_producer_project_id().data(), static_cast<int>(this->_internal_producer_project_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServicesRequest.producer_project_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_producer_project_id(), target);
  }

  // int32 page_size = 5;
  if (this->_internal_page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_page_size(), target);
  }

  // string page_token = 6;
  if (!this->_internal_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServicesRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_page_token(), target);
  }

  // string consumer_id = 7 [deprecated = true];
  if (!this->_internal_consumer_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_consumer_id().data(), static_cast<int>(this->_internal_consumer_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServicesRequest.consumer_id");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_consumer_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.ListServicesRequest)
  return target;
}

size_t ListServicesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.ListServicesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string producer_project_id = 1;
  if (!this->_internal_producer_project_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_producer_project_id());
  }

  // string page_token = 6;
  if (!this->_internal_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // string consumer_id = 7 [deprecated = true];
  if (!this->_internal_consumer_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_consumer_id());
  }

  // int32 page_size = 5;
  if (this->_internal_page_size() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_page_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListServicesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListServicesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListServicesRequest::GetClassData() const { return &_class_data_; }


void ListServicesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListServicesRequest*>(&to_msg);
  auto& from = static_cast<const ListServicesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.ListServicesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_producer_project_id().empty()) {
    _this->_internal_set_producer_project_id(from._internal_producer_project_id());
  }
  if (!from._internal_page_token().empty()) {
    _this->_internal_set_page_token(from._internal_page_token());
  }
  if (!from._internal_consumer_id().empty()) {
    _this->_internal_set_consumer_id(from._internal_consumer_id());
  }
  if (from._internal_page_size() != 0) {
    _this->_internal_set_page_size(from._internal_page_size());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListServicesRequest::CopyFrom(const ListServicesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.ListServicesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListServicesRequest::IsInitialized() const {
  return true;
}

void ListServicesRequest::InternalSwap(ListServicesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.producer_project_id_, lhs_arena,
      &other->_impl_.producer_project_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.page_token_, lhs_arena,
      &other->_impl_.page_token_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.consumer_id_, lhs_arena,
      &other->_impl_.consumer_id_, rhs_arena
  );
  swap(_impl_.page_size_, other->_impl_.page_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListServicesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_getter, &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_once,
      file_level_metadata_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto[0]);
}

// ===================================================================

class ListServicesResponse::_Internal {
 public:
};

void ListServicesResponse::clear_services() {
  _impl_.services_.Clear();
}
ListServicesResponse::ListServicesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.servicemanagement.v1.ListServicesResponse)
}
ListServicesResponse::ListServicesResponse(const ListServicesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListServicesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.services_){from._impl_.services_}
    , decltype(_impl_.next_page_token_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.next_page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_next_page_token().empty()) {
    _this->_impl_.next_page_token_.Set(from._internal_next_page_token(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.ListServicesResponse)
}

inline void ListServicesResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.services_){arena}
    , decltype(_impl_.next_page_token_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.next_page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListServicesResponse::~ListServicesResponse() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.ListServicesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListServicesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.services_.~RepeatedPtrField();
  _impl_.next_page_token_.Destroy();
}

void ListServicesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListServicesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.ListServicesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.services_.Clear();
  _impl_.next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListServicesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .google.api.servicemanagement.v1.ManagedService services = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_services(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicemanagement.v1.ListServicesResponse.next_page_token"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListServicesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.ListServicesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.servicemanagement.v1.ManagedService services = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_services_size()); i < n; i++) {
    const auto& repfield = this->_internal_services(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServicesResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.ListServicesResponse)
  return target;
}

size_t ListServicesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.ListServicesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.servicemanagement.v1.ManagedService services = 1;
  total_size += 1UL * this->_internal_services_size();
  for (const auto& msg : this->_impl_.services_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListServicesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListServicesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListServicesResponse::GetClassData() const { return &_class_data_; }


void ListServicesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListServicesResponse*>(&to_msg);
  auto& from = static_cast<const ListServicesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.ListServicesResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.services_.MergeFrom(from._impl_.services_);
  if (!from._internal_next_page_token().empty()) {
    _this->_internal_set_next_page_token(from._internal_next_page_token());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListServicesResponse::CopyFrom(const ListServicesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.ListServicesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListServicesResponse::IsInitialized() const {
  return true;
}

void ListServicesResponse::InternalSwap(ListServicesResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.services_.InternalSwap(&other->_impl_.services_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.next_page_token_, lhs_arena,
      &other->_impl_.next_page_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListServicesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_getter, &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_once,
      file_level_metadata_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto[1]);
}

// ===================================================================

class GetServiceRequest::_Internal {
 public:
};

GetServiceRequest::GetServiceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.servicemanagement.v1.GetServiceRequest)
}
GetServiceRequest::GetServiceRequest(const GetServiceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetServiceRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.service_name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_service_name().empty()) {
    _this->_impl_.service_name_.Set(from._internal_service_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.GetServiceRequest)
}

inline void GetServiceRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.service_name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetServiceRequest::~GetServiceRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.GetServiceRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetServiceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.service_name_.Destroy();
}

void GetServiceRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.GetServiceRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.service_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetServiceRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string service_name = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_service_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicemanagement.v1.GetServiceRequest.service_name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetServiceRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.GetServiceRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_service_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_name().data(), static_cast<int>(this->_internal_service_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.GetServiceRequest.service_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_service_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.GetServiceRequest)
  return target;
}

size_t GetServiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.GetServiceRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string service_name = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_service_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetServiceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetServiceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetServiceRequest::GetClassData() const { return &_class_data_; }


void GetServiceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetServiceRequest*>(&to_msg);
  auto& from = static_cast<const GetServiceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.GetServiceRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_service_name().empty()) {
    _this->_internal_set_service_name(from._internal_service_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetServiceRequest::CopyFrom(const GetServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.GetServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetServiceRequest::IsInitialized() const {
  return true;
}

void GetServiceRequest::InternalSwap(GetServiceRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.service_name_, lhs_arena,
      &other->_impl_.service_name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetServiceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_getter, &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_once,
      file_level_metadata_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto[2]);
}

// ===================================================================

class CreateServiceRequest::_Internal {
 public:
  static const ::google::api::servicemanagement::v1::ManagedService& service(const CreateServiceRequest* msg);
};

const ::google::api::servicemanagement::v1::ManagedService&
CreateServiceRequest::_Internal::service(const CreateServiceRequest* msg) {
  return *msg->_impl_.service_;
}
void CreateServiceRequest::clear_service() {
  if (GetArenaForAllocation() == nullptr && _impl_.service_ != nullptr) {
    delete _impl_.service_;
  }
  _impl_.service_ = nullptr;
}
CreateServiceRequest::CreateServiceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.servicemanagement.v1.CreateServiceRequest)
}
CreateServiceRequest::CreateServiceRequest(const CreateServiceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateServiceRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.service_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_service()) {
    _this->_impl_.service_ = new ::google::api::servicemanagement::v1::ManagedService(*from._impl_.service_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.CreateServiceRequest)
}

inline void CreateServiceRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.service_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CreateServiceRequest::~CreateServiceRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.CreateServiceRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateServiceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.service_;
}

void CreateServiceRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.CreateServiceRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.service_ != nullptr) {
    delete _impl_.service_;
  }
  _impl_.service_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateServiceRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.api.servicemanagement.v1.ManagedService service = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_service(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateServiceRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.CreateServiceRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.servicemanagement.v1.ManagedService service = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_service()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::service(this),
        _Internal::service(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.CreateServiceRequest)
  return target;
}

size_t CreateServiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.CreateServiceRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.api.servicemanagement.v1.ManagedService service = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_service()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.service_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateServiceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateServiceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateServiceRequest::GetClassData() const { return &_class_data_; }


void CreateServiceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateServiceRequest*>(&to_msg);
  auto& from = static_cast<const CreateServiceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.CreateServiceRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_service()) {
    _this->_internal_mutable_service()->::google::api::servicemanagement::v1::ManagedService::MergeFrom(
        from._internal_service());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateServiceRequest::CopyFrom(const CreateServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.CreateServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateServiceRequest::IsInitialized() const {
  return true;
}

void CreateServiceRequest::InternalSwap(CreateServiceRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.service_, other->_impl_.service_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateServiceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_getter, &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_once,
      file_level_metadata_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto[3]);
}

// ===================================================================

class DeleteServiceRequest::_Internal {
 public:
};

DeleteServiceRequest::DeleteServiceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.servicemanagement.v1.DeleteServiceRequest)
}
DeleteServiceRequest::DeleteServiceRequest(const DeleteServiceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteServiceRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.service_name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_service_name().empty()) {
    _this->_impl_.service_name_.Set(from._internal_service_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.DeleteServiceRequest)
}

inline void DeleteServiceRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.service_name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteServiceRequest::~DeleteServiceRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.DeleteServiceRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteServiceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.service_name_.Destroy();
}

void DeleteServiceRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.DeleteServiceRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.service_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteServiceRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string service_name = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_service_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicemanagement.v1.DeleteServiceRequest.service_name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteServiceRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.DeleteServiceRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_service_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_name().data(), static_cast<int>(this->_internal_service_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.DeleteServiceRequest.service_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_service_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.DeleteServiceRequest)
  return target;
}

size_t DeleteServiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.DeleteServiceRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string service_name = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_service_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteServiceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteServiceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteServiceRequest::GetClassData() const { return &_class_data_; }


void DeleteServiceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteServiceRequest*>(&to_msg);
  auto& from = static_cast<const DeleteServiceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.DeleteServiceRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_service_name().empty()) {
    _this->_internal_set_service_name(from._internal_service_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteServiceRequest::CopyFrom(const DeleteServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.DeleteServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteServiceRequest::IsInitialized() const {
  return true;
}

void DeleteServiceRequest::InternalSwap(DeleteServiceRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.service_name_, lhs_arena,
      &other->_impl_.service_name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteServiceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_getter, &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_once,
      file_level_metadata_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto[4]);
}

// ===================================================================

class UndeleteServiceRequest::_Internal {
 public:
};

UndeleteServiceRequest::UndeleteServiceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.servicemanagement.v1.UndeleteServiceRequest)
}
UndeleteServiceRequest::UndeleteServiceRequest(const UndeleteServiceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UndeleteServiceRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.service_name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_service_name().empty()) {
    _this->_impl_.service_name_.Set(from._internal_service_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.UndeleteServiceRequest)
}

inline void UndeleteServiceRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.service_name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UndeleteServiceRequest::~UndeleteServiceRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.UndeleteServiceRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UndeleteServiceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.service_name_.Destroy();
}

void UndeleteServiceRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UndeleteServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.UndeleteServiceRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.service_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UndeleteServiceRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string service_name = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_service_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicemanagement.v1.UndeleteServiceRequest.service_name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UndeleteServiceRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.UndeleteServiceRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_service_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_name().data(), static_cast<int>(this->_internal_service_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.UndeleteServiceRequest.service_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_service_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.UndeleteServiceRequest)
  return target;
}

size_t UndeleteServiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.UndeleteServiceRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string service_name = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_service_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UndeleteServiceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UndeleteServiceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UndeleteServiceRequest::GetClassData() const { return &_class_data_; }


void UndeleteServiceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UndeleteServiceRequest*>(&to_msg);
  auto& from = static_cast<const UndeleteServiceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.UndeleteServiceRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_service_name().empty()) {
    _this->_internal_set_service_name(from._internal_service_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UndeleteServiceRequest::CopyFrom(const UndeleteServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.UndeleteServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UndeleteServiceRequest::IsInitialized() const {
  return true;
}

void UndeleteServiceRequest::InternalSwap(UndeleteServiceRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.service_name_, lhs_arena,
      &other->_impl_.service_name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UndeleteServiceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_getter, &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_once,
      file_level_metadata_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto[5]);
}

// ===================================================================

class UndeleteServiceResponse::_Internal {
 public:
  static const ::google::api::servicemanagement::v1::ManagedService& service(const UndeleteServiceResponse* msg);
};

const ::google::api::servicemanagement::v1::ManagedService&
UndeleteServiceResponse::_Internal::service(const UndeleteServiceResponse* msg) {
  return *msg->_impl_.service_;
}
void UndeleteServiceResponse::clear_service() {
  if (GetArenaForAllocation() == nullptr && _impl_.service_ != nullptr) {
    delete _impl_.service_;
  }
  _impl_.service_ = nullptr;
}
UndeleteServiceResponse::UndeleteServiceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.servicemanagement.v1.UndeleteServiceResponse)
}
UndeleteServiceResponse::UndeleteServiceResponse(const UndeleteServiceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UndeleteServiceResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.service_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_service()) {
    _this->_impl_.service_ = new ::google::api::servicemanagement::v1::ManagedService(*from._impl_.service_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.UndeleteServiceResponse)
}

inline void UndeleteServiceResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.service_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UndeleteServiceResponse::~UndeleteServiceResponse() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.UndeleteServiceResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UndeleteServiceResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.service_;
}

void UndeleteServiceResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UndeleteServiceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.UndeleteServiceResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.service_ != nullptr) {
    delete _impl_.service_;
  }
  _impl_.service_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UndeleteServiceResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.api.servicemanagement.v1.ManagedService service = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_service(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UndeleteServiceResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.UndeleteServiceResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.servicemanagement.v1.ManagedService service = 1;
  if (this->_internal_has_service()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::service(this),
        _Internal::service(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.UndeleteServiceResponse)
  return target;
}

size_t UndeleteServiceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.UndeleteServiceResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.api.servicemanagement.v1.ManagedService service = 1;
  if (this->_internal_has_service()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.service_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UndeleteServiceResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UndeleteServiceResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UndeleteServiceResponse::GetClassData() const { return &_class_data_; }


void UndeleteServiceResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UndeleteServiceResponse*>(&to_msg);
  auto& from = static_cast<const UndeleteServiceResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.UndeleteServiceResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_service()) {
    _this->_internal_mutable_service()->::google::api::servicemanagement::v1::ManagedService::MergeFrom(
        from._internal_service());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UndeleteServiceResponse::CopyFrom(const UndeleteServiceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.UndeleteServiceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UndeleteServiceResponse::IsInitialized() const {
  return true;
}

void UndeleteServiceResponse::InternalSwap(UndeleteServiceResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.service_, other->_impl_.service_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UndeleteServiceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_getter, &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_once,
      file_level_metadata_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto[6]);
}

// ===================================================================

class GetServiceConfigRequest::_Internal {
 public:
};

GetServiceConfigRequest::GetServiceConfigRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.servicemanagement.v1.GetServiceConfigRequest)
}
GetServiceConfigRequest::GetServiceConfigRequest(const GetServiceConfigRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetServiceConfigRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.service_name_){}
    , decltype(_impl_.config_id_){}
    , decltype(_impl_.view_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_service_name().empty()) {
    _this->_impl_.service_name_.Set(from._internal_service_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.config_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.config_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_config_id().empty()) {
    _this->_impl_.config_id_.Set(from._internal_config_id(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.view_ = from._impl_.view_;
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.GetServiceConfigRequest)
}

inline void GetServiceConfigRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.service_name_){}
    , decltype(_impl_.config_id_){}
    , decltype(_impl_.view_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.config_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.config_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetServiceConfigRequest::~GetServiceConfigRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.GetServiceConfigRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetServiceConfigRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.service_name_.Destroy();
  _impl_.config_id_.Destroy();
}

void GetServiceConfigRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetServiceConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.GetServiceConfigRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.service_name_.ClearToEmpty();
  _impl_.config_id_.ClearToEmpty();
  _impl_.view_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetServiceConfigRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string service_name = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_service_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicemanagement.v1.GetServiceConfigRequest.service_name"));
        } else
          goto handle_unusual;
        continue;
      // string config_id = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_config_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicemanagement.v1.GetServiceConfigRequest.config_id"));
        } else
          goto handle_unusual;
        continue;
      // .google.api.servicemanagement.v1.GetServiceConfigRequest.ConfigView view = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_view(static_cast<::google::api::servicemanagement::v1::GetServiceConfigRequest_ConfigView>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetServiceConfigRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.GetServiceConfigRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_service_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_name().data(), static_cast<int>(this->_internal_service_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.GetServiceConfigRequest.service_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_service_name(), target);
  }

  // string config_id = 2 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_config_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_config_id().data(), static_cast<int>(this->_internal_config_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.GetServiceConfigRequest.config_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_config_id(), target);
  }

  // .google.api.servicemanagement.v1.GetServiceConfigRequest.ConfigView view = 3;
  if (this->_internal_view() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_view(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.GetServiceConfigRequest)
  return target;
}

size_t GetServiceConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.GetServiceConfigRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string service_name = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_service_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_name());
  }

  // string config_id = 2 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_config_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_config_id());
  }

  // .google.api.servicemanagement.v1.GetServiceConfigRequest.ConfigView view = 3;
  if (this->_internal_view() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_view());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetServiceConfigRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetServiceConfigRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetServiceConfigRequest::GetClassData() const { return &_class_data_; }


void GetServiceConfigRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetServiceConfigRequest*>(&to_msg);
  auto& from = static_cast<const GetServiceConfigRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.GetServiceConfigRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_service_name().empty()) {
    _this->_internal_set_service_name(from._internal_service_name());
  }
  if (!from._internal_config_id().empty()) {
    _this->_internal_set_config_id(from._internal_config_id());
  }
  if (from._internal_view() != 0) {
    _this->_internal_set_view(from._internal_view());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetServiceConfigRequest::CopyFrom(const GetServiceConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.GetServiceConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetServiceConfigRequest::IsInitialized() const {
  return true;
}

void GetServiceConfigRequest::InternalSwap(GetServiceConfigRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.service_name_, lhs_arena,
      &other->_impl_.service_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.config_id_, lhs_arena,
      &other->_impl_.config_id_, rhs_arena
  );
  swap(_impl_.view_, other->_impl_.view_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetServiceConfigRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_getter, &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_once,
      file_level_metadata_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto[7]);
}

// ===================================================================

class ListServiceConfigsRequest::_Internal {
 public:
};

ListServiceConfigsRequest::ListServiceConfigsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.servicemanagement.v1.ListServiceConfigsRequest)
}
ListServiceConfigsRequest::ListServiceConfigsRequest(const ListServiceConfigsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListServiceConfigsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.service_name_){}
    , decltype(_impl_.page_token_){}
    , decltype(_impl_.page_size_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_service_name().empty()) {
    _this->_impl_.service_name_.Set(from._internal_service_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_page_token().empty()) {
    _this->_impl_.page_token_.Set(from._internal_page_token(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.page_size_ = from._impl_.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.ListServiceConfigsRequest)
}

inline void ListServiceConfigsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.service_name_){}
    , decltype(_impl_.page_token_){}
    , decltype(_impl_.page_size_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListServiceConfigsRequest::~ListServiceConfigsRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.ListServiceConfigsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListServiceConfigsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.service_name_.Destroy();
  _impl_.page_token_.Destroy();
}

void ListServiceConfigsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListServiceConfigsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.ListServiceConfigsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.service_name_.ClearToEmpty();
  _impl_.page_token_.ClearToEmpty();
  _impl_.page_size_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListServiceConfigsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string service_name = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_service_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicemanagement.v1.ListServiceConfigsRequest.service_name"));
        } else
          goto handle_unusual;
        continue;
      // string page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_page_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicemanagement.v1.ListServiceConfigsRequest.page_token"));
        } else
          goto handle_unusual;
        continue;
      // int32 page_size = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListServiceConfigsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.ListServiceConfigsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_service_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_name().data(), static_cast<int>(this->_internal_service_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServiceConfigsRequest.service_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_service_name(), target);
  }

  // string page_token = 2;
  if (!this->_internal_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServiceConfigsRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_page_token(), target);
  }

  // int32 page_size = 3;
  if (this->_internal_page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_page_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.ListServiceConfigsRequest)
  return target;
}

size_t ListServiceConfigsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.ListServiceConfigsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string service_name = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_service_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_name());
  }

  // string page_token = 2;
  if (!this->_internal_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // int32 page_size = 3;
  if (this->_internal_page_size() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_page_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListServiceConfigsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListServiceConfigsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListServiceConfigsRequest::GetClassData() const { return &_class_data_; }


void ListServiceConfigsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListServiceConfigsRequest*>(&to_msg);
  auto& from = static_cast<const ListServiceConfigsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.ListServiceConfigsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_service_name().empty()) {
    _this->_internal_set_service_name(from._internal_service_name());
  }
  if (!from._internal_page_token().empty()) {
    _this->_internal_set_page_token(from._internal_page_token());
  }
  if (from._internal_page_size() != 0) {
    _this->_internal_set_page_size(from._internal_page_size());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListServiceConfigsRequest::CopyFrom(const ListServiceConfigsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.ListServiceConfigsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListServiceConfigsRequest::IsInitialized() const {
  return true;
}

void ListServiceConfigsRequest::InternalSwap(ListServiceConfigsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.service_name_, lhs_arena,
      &other->_impl_.service_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.page_token_, lhs_arena,
      &other->_impl_.page_token_, rhs_arena
  );
  swap(_impl_.page_size_, other->_impl_.page_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListServiceConfigsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_getter, &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_once,
      file_level_metadata_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto[8]);
}

// ===================================================================

class ListServiceConfigsResponse::_Internal {
 public:
};

void ListServiceConfigsResponse::clear_service_configs() {
  _impl_.service_configs_.Clear();
}
ListServiceConfigsResponse::ListServiceConfigsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.servicemanagement.v1.ListServiceConfigsResponse)
}
ListServiceConfigsResponse::ListServiceConfigsResponse(const ListServiceConfigsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListServiceConfigsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.service_configs_){from._impl_.service_configs_}
    , decltype(_impl_.next_page_token_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.next_page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_next_page_token().empty()) {
    _this->_impl_.next_page_token_.Set(from._internal_next_page_token(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.ListServiceConfigsResponse)
}

inline void ListServiceConfigsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.service_configs_){arena}
    , decltype(_impl_.next_page_token_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.next_page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListServiceConfigsResponse::~ListServiceConfigsResponse() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.ListServiceConfigsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListServiceConfigsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.service_configs_.~RepeatedPtrField();
  _impl_.next_page_token_.Destroy();
}

void ListServiceConfigsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListServiceConfigsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.ListServiceConfigsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.service_configs_.Clear();
  _impl_.next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListServiceConfigsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .google.api.Service service_configs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_service_configs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicemanagement.v1.ListServiceConfigsResponse.next_page_token"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListServiceConfigsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.ListServiceConfigsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.Service service_configs = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_service_configs_size()); i < n; i++) {
    const auto& repfield = this->_internal_service_configs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServiceConfigsResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.ListServiceConfigsResponse)
  return target;
}

size_t ListServiceConfigsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.ListServiceConfigsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.Service service_configs = 1;
  total_size += 1UL * this->_internal_service_configs_size();
  for (const auto& msg : this->_impl_.service_configs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListServiceConfigsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListServiceConfigsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListServiceConfigsResponse::GetClassData() const { return &_class_data_; }


void ListServiceConfigsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListServiceConfigsResponse*>(&to_msg);
  auto& from = static_cast<const ListServiceConfigsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.ListServiceConfigsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.service_configs_.MergeFrom(from._impl_.service_configs_);
  if (!from._internal_next_page_token().empty()) {
    _this->_internal_set_next_page_token(from._internal_next_page_token());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListServiceConfigsResponse::CopyFrom(const ListServiceConfigsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.ListServiceConfigsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListServiceConfigsResponse::IsInitialized() const {
  return true;
}

void ListServiceConfigsResponse::InternalSwap(ListServiceConfigsResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.service_configs_.InternalSwap(&other->_impl_.service_configs_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.next_page_token_, lhs_arena,
      &other->_impl_.next_page_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListServiceConfigsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_getter, &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_once,
      file_level_metadata_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto[9]);
}

// ===================================================================

class CreateServiceConfigRequest::_Internal {
 public:
  static const ::google::api::Service& service_config(const CreateServiceConfigRequest* msg);
};

const ::google::api::Service&
CreateServiceConfigRequest::_Internal::service_config(const CreateServiceConfigRequest* msg) {
  return *msg->_impl_.service_config_;
}
void CreateServiceConfigRequest::clear_service_config() {
  if (GetArenaForAllocation() == nullptr && _impl_.service_config_ != nullptr) {
    delete _impl_.service_config_;
  }
  _impl_.service_config_ = nullptr;
}
CreateServiceConfigRequest::CreateServiceConfigRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.servicemanagement.v1.CreateServiceConfigRequest)
}
CreateServiceConfigRequest::CreateServiceConfigRequest(const CreateServiceConfigRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateServiceConfigRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.service_name_){}
    , decltype(_impl_.service_config_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_service_name().empty()) {
    _this->_impl_.service_name_.Set(from._internal_service_name(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_service_config()) {
    _this->_impl_.service_config_ = new ::google::api::Service(*from._impl_.service_config_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.CreateServiceConfigRequest)
}

inline void CreateServiceConfigRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.service_name_){}
    , decltype(_impl_.service_config_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateServiceConfigRequest::~CreateServiceConfigRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.CreateServiceConfigRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateServiceConfigRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.service_name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.service_config_;
}

void CreateServiceConfigRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateServiceConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.CreateServiceConfigRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.service_name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.service_config_ != nullptr) {
    delete _impl_.service_config_;
  }
  _impl_.service_config_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateServiceConfigRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string service_name = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_service_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicemanagement.v1.CreateServiceConfigRequest.service_name"));
        } else
          goto handle_unusual;
        continue;
      // .google.api.Service service_config = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_service_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateServiceConfigRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.CreateServiceConfigRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_service_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_name().data(), static_cast<int>(this->_internal_service_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.CreateServiceConfigRequest.service_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_service_name(), target);
  }

  // .google.api.Service service_config = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_service_config()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::service_config(this),
        _Internal::service_config(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.CreateServiceConfigRequest)
  return target;
}

size_t CreateServiceConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.CreateServiceConfigRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string service_name = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_service_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_name());
  }

  // .google.api.Service service_config = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_service_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.service_config_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateServiceConfigRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateServiceConfigRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateServiceConfigRequest::GetClassData() const { return &_class_data_; }


void CreateServiceConfigRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateServiceConfigRequest*>(&to_msg);
  auto& from = static_cast<const CreateServiceConfigRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.CreateServiceConfigRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_service_name().empty()) {
    _this->_internal_set_service_name(from._internal_service_name());
  }
  if (from._internal_has_service_config()) {
    _this->_internal_mutable_service_config()->::google::api::Service::MergeFrom(
        from._internal_service_config());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateServiceConfigRequest::CopyFrom(const CreateServiceConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.CreateServiceConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateServiceConfigRequest::IsInitialized() const {
  return true;
}

void CreateServiceConfigRequest::InternalSwap(CreateServiceConfigRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.service_name_, lhs_arena,
      &other->_impl_.service_name_, rhs_arena
  );
  swap(_impl_.service_config_, other->_impl_.service_config_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateServiceConfigRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_getter, &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_once,
      file_level_metadata_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto[10]);
}

// ===================================================================

class SubmitConfigSourceRequest::_Internal {
 public:
  static const ::google::api::servicemanagement::v1::ConfigSource& config_source(const SubmitConfigSourceRequest* msg);
};

const ::google::api::servicemanagement::v1::ConfigSource&
SubmitConfigSourceRequest::_Internal::config_source(const SubmitConfigSourceRequest* msg) {
  return *msg->_impl_.config_source_;
}
void SubmitConfigSourceRequest::clear_config_source() {
  if (GetArenaForAllocation() == nullptr && _impl_.config_source_ != nullptr) {
    delete _impl_.config_source_;
  }
  _impl_.config_source_ = nullptr;
}
SubmitConfigSourceRequest::SubmitConfigSourceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.servicemanagement.v1.SubmitConfigSourceRequest)
}
SubmitConfigSourceRequest::SubmitConfigSourceRequest(const SubmitConfigSourceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SubmitConfigSourceRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.service_name_){}
    , decltype(_impl_.config_source_){nullptr}
    , decltype(_impl_.validate_only_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_service_name().empty()) {
    _this->_impl_.service_name_.Set(from._internal_service_name(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_config_source()) {
    _this->_impl_.config_source_ = new ::google::api::servicemanagement::v1::ConfigSource(*from._impl_.config_source_);
  }
  _this->_impl_.validate_only_ = from._impl_.validate_only_;
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.SubmitConfigSourceRequest)
}

inline void SubmitConfigSourceRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.service_name_){}
    , decltype(_impl_.config_source_){nullptr}
    , decltype(_impl_.validate_only_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SubmitConfigSourceRequest::~SubmitConfigSourceRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.SubmitConfigSourceRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SubmitConfigSourceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.service_name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.config_source_;
}

void SubmitConfigSourceRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SubmitConfigSourceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.SubmitConfigSourceRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.service_name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.config_source_ != nullptr) {
    delete _impl_.config_source_;
  }
  _impl_.config_source_ = nullptr;
  _impl_.validate_only_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubmitConfigSourceRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string service_name = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_service_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicemanagement.v1.SubmitConfigSourceRequest.service_name"));
        } else
          goto handle_unusual;
        continue;
      // .google.api.servicemanagement.v1.ConfigSource config_source = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_config_source(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool validate_only = 3 [(.google.api.field_behavior) = OPTIONAL];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.validate_only_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SubmitConfigSourceRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.SubmitConfigSourceRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_service_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_name().data(), static_cast<int>(this->_internal_service_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.SubmitConfigSourceRequest.service_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_service_name(), target);
  }

  // .google.api.servicemanagement.v1.ConfigSource config_source = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_config_source()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::config_source(this),
        _Internal::config_source(this).GetCachedSize(), target, stream);
  }

  // bool validate_only = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_validate_only() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_validate_only(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.SubmitConfigSourceRequest)
  return target;
}

size_t SubmitConfigSourceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.SubmitConfigSourceRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string service_name = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_service_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_name());
  }

  // .google.api.servicemanagement.v1.ConfigSource config_source = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_config_source()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.config_source_);
  }

  // bool validate_only = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_validate_only() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SubmitConfigSourceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SubmitConfigSourceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SubmitConfigSourceRequest::GetClassData() const { return &_class_data_; }


void SubmitConfigSourceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SubmitConfigSourceRequest*>(&to_msg);
  auto& from = static_cast<const SubmitConfigSourceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.SubmitConfigSourceRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_service_name().empty()) {
    _this->_internal_set_service_name(from._internal_service_name());
  }
  if (from._internal_has_config_source()) {
    _this->_internal_mutable_config_source()->::google::api::servicemanagement::v1::ConfigSource::MergeFrom(
        from._internal_config_source());
  }
  if (from._internal_validate_only() != 0) {
    _this->_internal_set_validate_only(from._internal_validate_only());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SubmitConfigSourceRequest::CopyFrom(const SubmitConfigSourceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.SubmitConfigSourceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubmitConfigSourceRequest::IsInitialized() const {
  return true;
}

void SubmitConfigSourceRequest::InternalSwap(SubmitConfigSourceRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.service_name_, lhs_arena,
      &other->_impl_.service_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SubmitConfigSourceRequest, _impl_.validate_only_)
      + sizeof(SubmitConfigSourceRequest::_impl_.validate_only_)
      - PROTOBUF_FIELD_OFFSET(SubmitConfigSourceRequest, _impl_.config_source_)>(
          reinterpret_cast<char*>(&_impl_.config_source_),
          reinterpret_cast<char*>(&other->_impl_.config_source_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SubmitConfigSourceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_getter, &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_once,
      file_level_metadata_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto[11]);
}

// ===================================================================

class SubmitConfigSourceResponse::_Internal {
 public:
  static const ::google::api::Service& service_config(const SubmitConfigSourceResponse* msg);
};

const ::google::api::Service&
SubmitConfigSourceResponse::_Internal::service_config(const SubmitConfigSourceResponse* msg) {
  return *msg->_impl_.service_config_;
}
void SubmitConfigSourceResponse::clear_service_config() {
  if (GetArenaForAllocation() == nullptr && _impl_.service_config_ != nullptr) {
    delete _impl_.service_config_;
  }
  _impl_.service_config_ = nullptr;
}
SubmitConfigSourceResponse::SubmitConfigSourceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.servicemanagement.v1.SubmitConfigSourceResponse)
}
SubmitConfigSourceResponse::SubmitConfigSourceResponse(const SubmitConfigSourceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SubmitConfigSourceResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.service_config_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_service_config()) {
    _this->_impl_.service_config_ = new ::google::api::Service(*from._impl_.service_config_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.SubmitConfigSourceResponse)
}

inline void SubmitConfigSourceResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.service_config_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SubmitConfigSourceResponse::~SubmitConfigSourceResponse() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.SubmitConfigSourceResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SubmitConfigSourceResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.service_config_;
}

void SubmitConfigSourceResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SubmitConfigSourceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.SubmitConfigSourceResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.service_config_ != nullptr) {
    delete _impl_.service_config_;
  }
  _impl_.service_config_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubmitConfigSourceResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.api.Service service_config = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_service_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SubmitConfigSourceResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.SubmitConfigSourceResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.Service service_config = 1;
  if (this->_internal_has_service_config()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::service_config(this),
        _Internal::service_config(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.SubmitConfigSourceResponse)
  return target;
}

size_t SubmitConfigSourceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.SubmitConfigSourceResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.api.Service service_config = 1;
  if (this->_internal_has_service_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.service_config_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SubmitConfigSourceResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SubmitConfigSourceResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SubmitConfigSourceResponse::GetClassData() const { return &_class_data_; }


void SubmitConfigSourceResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SubmitConfigSourceResponse*>(&to_msg);
  auto& from = static_cast<const SubmitConfigSourceResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.SubmitConfigSourceResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_service_config()) {
    _this->_internal_mutable_service_config()->::google::api::Service::MergeFrom(
        from._internal_service_config());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SubmitConfigSourceResponse::CopyFrom(const SubmitConfigSourceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.SubmitConfigSourceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubmitConfigSourceResponse::IsInitialized() const {
  return true;
}

void SubmitConfigSourceResponse::InternalSwap(SubmitConfigSourceResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.service_config_, other->_impl_.service_config_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SubmitConfigSourceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_getter, &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_once,
      file_level_metadata_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto[12]);
}

// ===================================================================

class CreateServiceRolloutRequest::_Internal {
 public:
  static const ::google::api::servicemanagement::v1::Rollout& rollout(const CreateServiceRolloutRequest* msg);
};

const ::google::api::servicemanagement::v1::Rollout&
CreateServiceRolloutRequest::_Internal::rollout(const CreateServiceRolloutRequest* msg) {
  return *msg->_impl_.rollout_;
}
void CreateServiceRolloutRequest::clear_rollout() {
  if (GetArenaForAllocation() == nullptr && _impl_.rollout_ != nullptr) {
    delete _impl_.rollout_;
  }
  _impl_.rollout_ = nullptr;
}
CreateServiceRolloutRequest::CreateServiceRolloutRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.servicemanagement.v1.CreateServiceRolloutRequest)
}
CreateServiceRolloutRequest::CreateServiceRolloutRequest(const CreateServiceRolloutRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateServiceRolloutRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.service_name_){}
    , decltype(_impl_.rollout_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_service_name().empty()) {
    _this->_impl_.service_name_.Set(from._internal_service_name(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_rollout()) {
    _this->_impl_.rollout_ = new ::google::api::servicemanagement::v1::Rollout(*from._impl_.rollout_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.CreateServiceRolloutRequest)
}

inline void CreateServiceRolloutRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.service_name_){}
    , decltype(_impl_.rollout_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateServiceRolloutRequest::~CreateServiceRolloutRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.CreateServiceRolloutRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateServiceRolloutRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.service_name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.rollout_;
}

void CreateServiceRolloutRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateServiceRolloutRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.CreateServiceRolloutRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.service_name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.rollout_ != nullptr) {
    delete _impl_.rollout_;
  }
  _impl_.rollout_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateServiceRolloutRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string service_name = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_service_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicemanagement.v1.CreateServiceRolloutRequest.service_name"));
        } else
          goto handle_unusual;
        continue;
      // .google.api.servicemanagement.v1.Rollout rollout = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_rollout(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateServiceRolloutRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.CreateServiceRolloutRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_service_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_name().data(), static_cast<int>(this->_internal_service_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.CreateServiceRolloutRequest.service_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_service_name(), target);
  }

  // .google.api.servicemanagement.v1.Rollout rollout = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_rollout()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::rollout(this),
        _Internal::rollout(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.CreateServiceRolloutRequest)
  return target;
}

size_t CreateServiceRolloutRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.CreateServiceRolloutRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string service_name = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_service_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_name());
  }

  // .google.api.servicemanagement.v1.Rollout rollout = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_rollout()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.rollout_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateServiceRolloutRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateServiceRolloutRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateServiceRolloutRequest::GetClassData() const { return &_class_data_; }


void CreateServiceRolloutRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateServiceRolloutRequest*>(&to_msg);
  auto& from = static_cast<const CreateServiceRolloutRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.CreateServiceRolloutRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_service_name().empty()) {
    _this->_internal_set_service_name(from._internal_service_name());
  }
  if (from._internal_has_rollout()) {
    _this->_internal_mutable_rollout()->::google::api::servicemanagement::v1::Rollout::MergeFrom(
        from._internal_rollout());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateServiceRolloutRequest::CopyFrom(const CreateServiceRolloutRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.CreateServiceRolloutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateServiceRolloutRequest::IsInitialized() const {
  return true;
}

void CreateServiceRolloutRequest::InternalSwap(CreateServiceRolloutRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.service_name_, lhs_arena,
      &other->_impl_.service_name_, rhs_arena
  );
  swap(_impl_.rollout_, other->_impl_.rollout_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateServiceRolloutRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_getter, &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_once,
      file_level_metadata_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto[13]);
}

// ===================================================================

class ListServiceRolloutsRequest::_Internal {
 public:
};

ListServiceRolloutsRequest::ListServiceRolloutsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.servicemanagement.v1.ListServiceRolloutsRequest)
}
ListServiceRolloutsRequest::ListServiceRolloutsRequest(const ListServiceRolloutsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListServiceRolloutsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.service_name_){}
    , decltype(_impl_.page_token_){}
    , decltype(_impl_.filter_){}
    , decltype(_impl_.page_size_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_service_name().empty()) {
    _this->_impl_.service_name_.Set(from._internal_service_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_page_token().empty()) {
    _this->_impl_.page_token_.Set(from._internal_page_token(), 
      _this->GetArenaForAllocation());
  }
  _impl_.filter_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.filter_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_filter().empty()) {
    _this->_impl_.filter_.Set(from._internal_filter(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.page_size_ = from._impl_.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.ListServiceRolloutsRequest)
}

inline void ListServiceRolloutsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.service_name_){}
    , decltype(_impl_.page_token_){}
    , decltype(_impl_.filter_){}
    , decltype(_impl_.page_size_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.filter_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.filter_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListServiceRolloutsRequest::~ListServiceRolloutsRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.ListServiceRolloutsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListServiceRolloutsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.service_name_.Destroy();
  _impl_.page_token_.Destroy();
  _impl_.filter_.Destroy();
}

void ListServiceRolloutsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListServiceRolloutsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.ListServiceRolloutsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.service_name_.ClearToEmpty();
  _impl_.page_token_.ClearToEmpty();
  _impl_.filter_.ClearToEmpty();
  _impl_.page_size_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListServiceRolloutsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string service_name = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_service_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicemanagement.v1.ListServiceRolloutsRequest.service_name"));
        } else
          goto handle_unusual;
        continue;
      // string page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_page_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicemanagement.v1.ListServiceRolloutsRequest.page_token"));
        } else
          goto handle_unusual;
        continue;
      // int32 page_size = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string filter = 4 [(.google.api.field_behavior) = REQUIRED];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_filter();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicemanagement.v1.ListServiceRolloutsRequest.filter"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListServiceRolloutsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.ListServiceRolloutsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_service_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_name().data(), static_cast<int>(this->_internal_service_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServiceRolloutsRequest.service_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_service_name(), target);
  }

  // string page_token = 2;
  if (!this->_internal_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServiceRolloutsRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_page_token(), target);
  }

  // int32 page_size = 3;
  if (this->_internal_page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_page_size(), target);
  }

  // string filter = 4 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_filter().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_filter().data(), static_cast<int>(this->_internal_filter().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServiceRolloutsRequest.filter");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_filter(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.ListServiceRolloutsRequest)
  return target;
}

size_t ListServiceRolloutsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.ListServiceRolloutsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string service_name = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_service_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_name());
  }

  // string page_token = 2;
  if (!this->_internal_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // string filter = 4 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_filter().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_filter());
  }

  // int32 page_size = 3;
  if (this->_internal_page_size() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_page_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListServiceRolloutsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListServiceRolloutsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListServiceRolloutsRequest::GetClassData() const { return &_class_data_; }


void ListServiceRolloutsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListServiceRolloutsRequest*>(&to_msg);
  auto& from = static_cast<const ListServiceRolloutsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.ListServiceRolloutsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_service_name().empty()) {
    _this->_internal_set_service_name(from._internal_service_name());
  }
  if (!from._internal_page_token().empty()) {
    _this->_internal_set_page_token(from._internal_page_token());
  }
  if (!from._internal_filter().empty()) {
    _this->_internal_set_filter(from._internal_filter());
  }
  if (from._internal_page_size() != 0) {
    _this->_internal_set_page_size(from._internal_page_size());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListServiceRolloutsRequest::CopyFrom(const ListServiceRolloutsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.ListServiceRolloutsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListServiceRolloutsRequest::IsInitialized() const {
  return true;
}

void ListServiceRolloutsRequest::InternalSwap(ListServiceRolloutsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.service_name_, lhs_arena,
      &other->_impl_.service_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.page_token_, lhs_arena,
      &other->_impl_.page_token_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.filter_, lhs_arena,
      &other->_impl_.filter_, rhs_arena
  );
  swap(_impl_.page_size_, other->_impl_.page_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListServiceRolloutsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_getter, &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_once,
      file_level_metadata_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto[14]);
}

// ===================================================================

class ListServiceRolloutsResponse::_Internal {
 public:
};

void ListServiceRolloutsResponse::clear_rollouts() {
  _impl_.rollouts_.Clear();
}
ListServiceRolloutsResponse::ListServiceRolloutsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.servicemanagement.v1.ListServiceRolloutsResponse)
}
ListServiceRolloutsResponse::ListServiceRolloutsResponse(const ListServiceRolloutsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListServiceRolloutsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.rollouts_){from._impl_.rollouts_}
    , decltype(_impl_.next_page_token_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.next_page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_next_page_token().empty()) {
    _this->_impl_.next_page_token_.Set(from._internal_next_page_token(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.ListServiceRolloutsResponse)
}

inline void ListServiceRolloutsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.rollouts_){arena}
    , decltype(_impl_.next_page_token_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.next_page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListServiceRolloutsResponse::~ListServiceRolloutsResponse() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.ListServiceRolloutsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListServiceRolloutsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.rollouts_.~RepeatedPtrField();
  _impl_.next_page_token_.Destroy();
}

void ListServiceRolloutsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListServiceRolloutsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.ListServiceRolloutsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rollouts_.Clear();
  _impl_.next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListServiceRolloutsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .google.api.servicemanagement.v1.Rollout rollouts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_rollouts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicemanagement.v1.ListServiceRolloutsResponse.next_page_token"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListServiceRolloutsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.ListServiceRolloutsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.servicemanagement.v1.Rollout rollouts = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_rollouts_size()); i < n; i++) {
    const auto& repfield = this->_internal_rollouts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServiceRolloutsResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.ListServiceRolloutsResponse)
  return target;
}

size_t ListServiceRolloutsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.ListServiceRolloutsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.servicemanagement.v1.Rollout rollouts = 1;
  total_size += 1UL * this->_internal_rollouts_size();
  for (const auto& msg : this->_impl_.rollouts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListServiceRolloutsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListServiceRolloutsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListServiceRolloutsResponse::GetClassData() const { return &_class_data_; }


void ListServiceRolloutsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListServiceRolloutsResponse*>(&to_msg);
  auto& from = static_cast<const ListServiceRolloutsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.ListServiceRolloutsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.rollouts_.MergeFrom(from._impl_.rollouts_);
  if (!from._internal_next_page_token().empty()) {
    _this->_internal_set_next_page_token(from._internal_next_page_token());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListServiceRolloutsResponse::CopyFrom(const ListServiceRolloutsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.ListServiceRolloutsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListServiceRolloutsResponse::IsInitialized() const {
  return true;
}

void ListServiceRolloutsResponse::InternalSwap(ListServiceRolloutsResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.rollouts_.InternalSwap(&other->_impl_.rollouts_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.next_page_token_, lhs_arena,
      &other->_impl_.next_page_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListServiceRolloutsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_getter, &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_once,
      file_level_metadata_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto[15]);
}

// ===================================================================

class GetServiceRolloutRequest::_Internal {
 public:
};

GetServiceRolloutRequest::GetServiceRolloutRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.servicemanagement.v1.GetServiceRolloutRequest)
}
GetServiceRolloutRequest::GetServiceRolloutRequest(const GetServiceRolloutRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetServiceRolloutRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.service_name_){}
    , decltype(_impl_.rollout_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_service_name().empty()) {
    _this->_impl_.service_name_.Set(from._internal_service_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.rollout_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.rollout_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_rollout_id().empty()) {
    _this->_impl_.rollout_id_.Set(from._internal_rollout_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.GetServiceRolloutRequest)
}

inline void GetServiceRolloutRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.service_name_){}
    , decltype(_impl_.rollout_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.rollout_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.rollout_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetServiceRolloutRequest::~GetServiceRolloutRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.GetServiceRolloutRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetServiceRolloutRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.service_name_.Destroy();
  _impl_.rollout_id_.Destroy();
}

void GetServiceRolloutRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetServiceRolloutRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.GetServiceRolloutRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.service_name_.ClearToEmpty();
  _impl_.rollout_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetServiceRolloutRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string service_name = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_service_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicemanagement.v1.GetServiceRolloutRequest.service_name"));
        } else
          goto handle_unusual;
        continue;
      // string rollout_id = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_rollout_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicemanagement.v1.GetServiceRolloutRequest.rollout_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetServiceRolloutRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.GetServiceRolloutRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_service_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_name().data(), static_cast<int>(this->_internal_service_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.GetServiceRolloutRequest.service_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_service_name(), target);
  }

  // string rollout_id = 2 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_rollout_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rollout_id().data(), static_cast<int>(this->_internal_rollout_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.GetServiceRolloutRequest.rollout_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rollout_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.GetServiceRolloutRequest)
  return target;
}

size_t GetServiceRolloutRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.GetServiceRolloutRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string service_name = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_service_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_name());
  }

  // string rollout_id = 2 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_rollout_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rollout_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetServiceRolloutRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetServiceRolloutRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetServiceRolloutRequest::GetClassData() const { return &_class_data_; }


void GetServiceRolloutRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetServiceRolloutRequest*>(&to_msg);
  auto& from = static_cast<const GetServiceRolloutRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.GetServiceRolloutRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_service_name().empty()) {
    _this->_internal_set_service_name(from._internal_service_name());
  }
  if (!from._internal_rollout_id().empty()) {
    _this->_internal_set_rollout_id(from._internal_rollout_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetServiceRolloutRequest::CopyFrom(const GetServiceRolloutRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.GetServiceRolloutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetServiceRolloutRequest::IsInitialized() const {
  return true;
}

void GetServiceRolloutRequest::InternalSwap(GetServiceRolloutRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.service_name_, lhs_arena,
      &other->_impl_.service_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.rollout_id_, lhs_arena,
      &other->_impl_.rollout_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetServiceRolloutRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_getter, &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_once,
      file_level_metadata_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto[16]);
}

// ===================================================================

class GenerateConfigReportRequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Any& new_config(const GenerateConfigReportRequest* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Any& old_config(const GenerateConfigReportRequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Any&
GenerateConfigReportRequest::_Internal::new_config(const GenerateConfigReportRequest* msg) {
  return *msg->_impl_.new_config_;
}
const ::PROTOBUF_NAMESPACE_ID::Any&
GenerateConfigReportRequest::_Internal::old_config(const GenerateConfigReportRequest* msg) {
  return *msg->_impl_.old_config_;
}
void GenerateConfigReportRequest::clear_new_config() {
  if (GetArenaForAllocation() == nullptr && _impl_.new_config_ != nullptr) {
    delete _impl_.new_config_;
  }
  _impl_.new_config_ = nullptr;
}
void GenerateConfigReportRequest::clear_old_config() {
  if (GetArenaForAllocation() == nullptr && _impl_.old_config_ != nullptr) {
    delete _impl_.old_config_;
  }
  _impl_.old_config_ = nullptr;
}
GenerateConfigReportRequest::GenerateConfigReportRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.servicemanagement.v1.GenerateConfigReportRequest)
}
GenerateConfigReportRequest::GenerateConfigReportRequest(const GenerateConfigReportRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GenerateConfigReportRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.new_config_){nullptr}
    , decltype(_impl_.old_config_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_new_config()) {
    _this->_impl_.new_config_ = new ::PROTOBUF_NAMESPACE_ID::Any(*from._impl_.new_config_);
  }
  if (from._internal_has_old_config()) {
    _this->_impl_.old_config_ = new ::PROTOBUF_NAMESPACE_ID::Any(*from._impl_.old_config_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.GenerateConfigReportRequest)
}

inline void GenerateConfigReportRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.new_config_){nullptr}
    , decltype(_impl_.old_config_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GenerateConfigReportRequest::~GenerateConfigReportRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.GenerateConfigReportRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GenerateConfigReportRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.new_config_;
  if (this != internal_default_instance()) delete _impl_.old_config_;
}

void GenerateConfigReportRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GenerateConfigReportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.GenerateConfigReportRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.new_config_ != nullptr) {
    delete _impl_.new_config_;
  }
  _impl_.new_config_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.old_config_ != nullptr) {
    delete _impl_.old_config_;
  }
  _impl_.old_config_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GenerateConfigReportRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.Any new_config = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_new_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Any old_config = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_old_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GenerateConfigReportRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.GenerateConfigReportRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any new_config = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_new_config()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::new_config(this),
        _Internal::new_config(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Any old_config = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_has_old_config()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::old_config(this),
        _Internal::old_config(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.GenerateConfigReportRequest)
  return target;
}

size_t GenerateConfigReportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.GenerateConfigReportRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Any new_config = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_new_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.new_config_);
  }

  // .google.protobuf.Any old_config = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_has_old_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.old_config_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GenerateConfigReportRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GenerateConfigReportRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GenerateConfigReportRequest::GetClassData() const { return &_class_data_; }


void GenerateConfigReportRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GenerateConfigReportRequest*>(&to_msg);
  auto& from = static_cast<const GenerateConfigReportRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.GenerateConfigReportRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_new_config()) {
    _this->_internal_mutable_new_config()->::PROTOBUF_NAMESPACE_ID::Any::MergeFrom(
        from._internal_new_config());
  }
  if (from._internal_has_old_config()) {
    _this->_internal_mutable_old_config()->::PROTOBUF_NAMESPACE_ID::Any::MergeFrom(
        from._internal_old_config());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GenerateConfigReportRequest::CopyFrom(const GenerateConfigReportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.GenerateConfigReportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerateConfigReportRequest::IsInitialized() const {
  return true;
}

void GenerateConfigReportRequest::InternalSwap(GenerateConfigReportRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GenerateConfigReportRequest, _impl_.old_config_)
      + sizeof(GenerateConfigReportRequest::_impl_.old_config_)
      - PROTOBUF_FIELD_OFFSET(GenerateConfigReportRequest, _impl_.new_config_)>(
          reinterpret_cast<char*>(&_impl_.new_config_),
          reinterpret_cast<char*>(&other->_impl_.new_config_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GenerateConfigReportRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_getter, &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_once,
      file_level_metadata_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto[17]);
}

// ===================================================================

class GenerateConfigReportResponse::_Internal {
 public:
};

void GenerateConfigReportResponse::clear_change_reports() {
  _impl_.change_reports_.Clear();
}
void GenerateConfigReportResponse::clear_diagnostics() {
  _impl_.diagnostics_.Clear();
}
GenerateConfigReportResponse::GenerateConfigReportResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.servicemanagement.v1.GenerateConfigReportResponse)
}
GenerateConfigReportResponse::GenerateConfigReportResponse(const GenerateConfigReportResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GenerateConfigReportResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.change_reports_){from._impl_.change_reports_}
    , decltype(_impl_.diagnostics_){from._impl_.diagnostics_}
    , decltype(_impl_.service_name_){}
    , decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_service_name().empty()) {
    _this->_impl_.service_name_.Set(from._internal_service_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.GenerateConfigReportResponse)
}

inline void GenerateConfigReportResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.change_reports_){arena}
    , decltype(_impl_.diagnostics_){arena}
    , decltype(_impl_.service_name_){}
    , decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GenerateConfigReportResponse::~GenerateConfigReportResponse() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.GenerateConfigReportResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GenerateConfigReportResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.change_reports_.~RepeatedPtrField();
  _impl_.diagnostics_.~RepeatedPtrField();
  _impl_.service_name_.Destroy();
  _impl_.id_.Destroy();
}

void GenerateConfigReportResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GenerateConfigReportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.GenerateConfigReportResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.change_reports_.Clear();
  _impl_.diagnostics_.Clear();
  _impl_.service_name_.ClearToEmpty();
  _impl_.id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GenerateConfigReportResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string service_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_service_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicemanagement.v1.GenerateConfigReportResponse.service_name"));
        } else
          goto handle_unusual;
        continue;
      // string id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.servicemanagement.v1.GenerateConfigReportResponse.id"));
        } else
          goto handle_unusual;
        continue;
      // repeated .google.api.servicemanagement.v1.ChangeReport change_reports = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_change_reports(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .google.api.servicemanagement.v1.Diagnostic diagnostics = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_diagnostics(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GenerateConfigReportResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.GenerateConfigReportResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (!this->_internal_service_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_name().data(), static_cast<int>(this->_internal_service_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.GenerateConfigReportResponse.service_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_service_name(), target);
  }

  // string id = 2;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.GenerateConfigReportResponse.id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_id(), target);
  }

  // repeated .google.api.servicemanagement.v1.ChangeReport change_reports = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_change_reports_size()); i < n; i++) {
    const auto& repfield = this->_internal_change_reports(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .google.api.servicemanagement.v1.Diagnostic diagnostics = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_diagnostics_size()); i < n; i++) {
    const auto& repfield = this->_internal_diagnostics(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.GenerateConfigReportResponse)
  return target;
}

size_t GenerateConfigReportResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.GenerateConfigReportResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.servicemanagement.v1.ChangeReport change_reports = 3;
  total_size += 1UL * this->_internal_change_reports_size();
  for (const auto& msg : this->_impl_.change_reports_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .google.api.servicemanagement.v1.Diagnostic diagnostics = 4;
  total_size += 1UL * this->_internal_diagnostics_size();
  for (const auto& msg : this->_impl_.diagnostics_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string service_name = 1;
  if (!this->_internal_service_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_name());
  }

  // string id = 2;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GenerateConfigReportResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GenerateConfigReportResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GenerateConfigReportResponse::GetClassData() const { return &_class_data_; }


void GenerateConfigReportResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GenerateConfigReportResponse*>(&to_msg);
  auto& from = static_cast<const GenerateConfigReportResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.GenerateConfigReportResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.change_reports_.MergeFrom(from._impl_.change_reports_);
  _this->_impl_.diagnostics_.MergeFrom(from._impl_.diagnostics_);
  if (!from._internal_service_name().empty()) {
    _this->_internal_set_service_name(from._internal_service_name());
  }
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GenerateConfigReportResponse::CopyFrom(const GenerateConfigReportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.GenerateConfigReportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerateConfigReportResponse::IsInitialized() const {
  return true;
}

void GenerateConfigReportResponse::InternalSwap(GenerateConfigReportResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.change_reports_.InternalSwap(&other->_impl_.change_reports_);
  _impl_.diagnostics_.InternalSwap(&other->_impl_.diagnostics_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.service_name_, lhs_arena,
      &other->_impl_.service_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GenerateConfigReportResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_getter, &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_once,
      file_level_metadata_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto[18]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace servicemanagement
}  // namespace api
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::ListServicesRequest*
Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::ListServicesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicemanagement::v1::ListServicesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::ListServicesResponse*
Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::ListServicesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicemanagement::v1::ListServicesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::GetServiceRequest*
Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::GetServiceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicemanagement::v1::GetServiceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::CreateServiceRequest*
Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::CreateServiceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicemanagement::v1::CreateServiceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::DeleteServiceRequest*
Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::DeleteServiceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicemanagement::v1::DeleteServiceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::UndeleteServiceRequest*
Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::UndeleteServiceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicemanagement::v1::UndeleteServiceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::UndeleteServiceResponse*
Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::UndeleteServiceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicemanagement::v1::UndeleteServiceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::GetServiceConfigRequest*
Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::GetServiceConfigRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicemanagement::v1::GetServiceConfigRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::ListServiceConfigsRequest*
Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::ListServiceConfigsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicemanagement::v1::ListServiceConfigsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::ListServiceConfigsResponse*
Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::ListServiceConfigsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicemanagement::v1::ListServiceConfigsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::CreateServiceConfigRequest*
Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::CreateServiceConfigRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicemanagement::v1::CreateServiceConfigRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::SubmitConfigSourceRequest*
Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::SubmitConfigSourceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicemanagement::v1::SubmitConfigSourceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::SubmitConfigSourceResponse*
Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::SubmitConfigSourceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicemanagement::v1::SubmitConfigSourceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::CreateServiceRolloutRequest*
Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::CreateServiceRolloutRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicemanagement::v1::CreateServiceRolloutRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::ListServiceRolloutsRequest*
Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::ListServiceRolloutsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicemanagement::v1::ListServiceRolloutsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::ListServiceRolloutsResponse*
Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::ListServiceRolloutsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicemanagement::v1::ListServiceRolloutsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::GetServiceRolloutRequest*
Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::GetServiceRolloutRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicemanagement::v1::GetServiceRolloutRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::GenerateConfigReportRequest*
Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::GenerateConfigReportRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicemanagement::v1::GenerateConfigReportRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::GenerateConfigReportResponse*
Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::GenerateConfigReportResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicemanagement::v1::GenerateConfigReportResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

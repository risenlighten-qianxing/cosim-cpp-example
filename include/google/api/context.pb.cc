// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/context.proto

#include "google/api/context.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace google {
namespace api {
PROTOBUF_CONSTEXPR Context::Context(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.rules_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ContextDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ContextDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ContextDefaultTypeInternal() {}
  union {
    Context _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ContextDefaultTypeInternal _Context_default_instance_;
PROTOBUF_CONSTEXPR ContextRule::ContextRule(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.requested_)*/{}
  , /*decltype(_impl_.provided_)*/{}
  , /*decltype(_impl_.allowed_request_extensions_)*/{}
  , /*decltype(_impl_.allowed_response_extensions_)*/{}
  , /*decltype(_impl_.selector_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ContextRuleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ContextRuleDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ContextRuleDefaultTypeInternal() {}
  union {
    ContextRule _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ContextRuleDefaultTypeInternal _ContextRule_default_instance_;
}  // namespace api
}  // namespace google
static ::_pb::Metadata file_level_metadata_google_2fapi_2fcontext_2eproto[2];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_google_2fapi_2fcontext_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_google_2fapi_2fcontext_2eproto = nullptr;

const uint32_t TableStruct_google_2fapi_2fcontext_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::Context, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::Context, _impl_.rules_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::ContextRule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::ContextRule, _impl_.selector_),
  PROTOBUF_FIELD_OFFSET(::google::api::ContextRule, _impl_.requested_),
  PROTOBUF_FIELD_OFFSET(::google::api::ContextRule, _impl_.provided_),
  PROTOBUF_FIELD_OFFSET(::google::api::ContextRule, _impl_.allowed_request_extensions_),
  PROTOBUF_FIELD_OFFSET(::google::api::ContextRule, _impl_.allowed_response_extensions_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::google::api::Context)},
  { 7, -1, -1, sizeof(::google::api::ContextRule)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::google::api::_Context_default_instance_._instance,
  &::google::api::_ContextRule_default_instance_._instance,
};

const char descriptor_table_protodef_google_2fapi_2fcontext_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\030google/api/context.proto\022\ngoogle.api\"1"
  "\n\007Context\022&\n\005rules\030\001 \003(\0132\027.google.api.Co"
  "ntextRule\"\215\001\n\013ContextRule\022\020\n\010selector\030\001 "
  "\001(\t\022\021\n\trequested\030\002 \003(\t\022\020\n\010provided\030\003 \003(\t"
  "\022\"\n\032allowed_request_extensions\030\004 \003(\t\022#\n\033"
  "allowed_response_extensions\030\005 \003(\tBn\n\016com"
  ".google.apiB\014ContextProtoP\001ZEgoogle.gola"
  "ng.org/genproto/googleapis/api/serviceco"
  "nfig;serviceconfig\242\002\004GAPIb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_google_2fapi_2fcontext_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_google_2fapi_2fcontext_2eproto = {
    false, false, 353, descriptor_table_protodef_google_2fapi_2fcontext_2eproto,
    "google/api/context.proto",
    &descriptor_table_google_2fapi_2fcontext_2eproto_once, nullptr, 0, 2,
    schemas, file_default_instances, TableStruct_google_2fapi_2fcontext_2eproto::offsets,
    file_level_metadata_google_2fapi_2fcontext_2eproto, file_level_enum_descriptors_google_2fapi_2fcontext_2eproto,
    file_level_service_descriptors_google_2fapi_2fcontext_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_google_2fapi_2fcontext_2eproto_getter() {
  return &descriptor_table_google_2fapi_2fcontext_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_google_2fapi_2fcontext_2eproto(&descriptor_table_google_2fapi_2fcontext_2eproto);
namespace google {
namespace api {

// ===================================================================

class Context::_Internal {
 public:
};

Context::Context(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.Context)
}
Context::Context(const Context& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Context* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.rules_){from._impl_.rules_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.api.Context)
}

inline void Context::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.rules_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Context::~Context() {
  // @@protoc_insertion_point(destructor:google.api.Context)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Context::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.rules_.~RepeatedPtrField();
}

void Context::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Context::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.Context)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rules_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Context::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .google.api.ContextRule rules = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_rules(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Context::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.Context)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.ContextRule rules = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_rules_size()); i < n; i++) {
    const auto& repfield = this->_internal_rules(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.Context)
  return target;
}

size_t Context::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.Context)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.ContextRule rules = 1;
  total_size += 1UL * this->_internal_rules_size();
  for (const auto& msg : this->_impl_.rules_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Context::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Context::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Context::GetClassData() const { return &_class_data_; }


void Context::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Context*>(&to_msg);
  auto& from = static_cast<const Context&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.Context)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.rules_.MergeFrom(from._impl_.rules_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Context::CopyFrom(const Context& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.Context)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Context::IsInitialized() const {
  return true;
}

void Context::InternalSwap(Context* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.rules_.InternalSwap(&other->_impl_.rules_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Context::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fcontext_2eproto_getter, &descriptor_table_google_2fapi_2fcontext_2eproto_once,
      file_level_metadata_google_2fapi_2fcontext_2eproto[0]);
}

// ===================================================================

class ContextRule::_Internal {
 public:
};

ContextRule::ContextRule(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.ContextRule)
}
ContextRule::ContextRule(const ContextRule& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ContextRule* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.requested_){from._impl_.requested_}
    , decltype(_impl_.provided_){from._impl_.provided_}
    , decltype(_impl_.allowed_request_extensions_){from._impl_.allowed_request_extensions_}
    , decltype(_impl_.allowed_response_extensions_){from._impl_.allowed_response_extensions_}
    , decltype(_impl_.selector_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.selector_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.selector_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_selector().empty()) {
    _this->_impl_.selector_.Set(from._internal_selector(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.ContextRule)
}

inline void ContextRule::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.requested_){arena}
    , decltype(_impl_.provided_){arena}
    , decltype(_impl_.allowed_request_extensions_){arena}
    , decltype(_impl_.allowed_response_extensions_){arena}
    , decltype(_impl_.selector_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.selector_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.selector_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ContextRule::~ContextRule() {
  // @@protoc_insertion_point(destructor:google.api.ContextRule)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ContextRule::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.requested_.~RepeatedPtrField();
  _impl_.provided_.~RepeatedPtrField();
  _impl_.allowed_request_extensions_.~RepeatedPtrField();
  _impl_.allowed_response_extensions_.~RepeatedPtrField();
  _impl_.selector_.Destroy();
}

void ContextRule::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ContextRule::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.ContextRule)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.requested_.Clear();
  _impl_.provided_.Clear();
  _impl_.allowed_request_extensions_.Clear();
  _impl_.allowed_response_extensions_.Clear();
  _impl_.selector_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ContextRule::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string selector = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_selector();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.ContextRule.selector"));
        } else
          goto handle_unusual;
        continue;
      // repeated string requested = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_requested();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "google.api.ContextRule.requested"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated string provided = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_provided();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "google.api.ContextRule.provided"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated string allowed_request_extensions = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_allowed_request_extensions();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "google.api.ContextRule.allowed_request_extensions"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated string allowed_response_extensions = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_allowed_response_extensions();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "google.api.ContextRule.allowed_response_extensions"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ContextRule::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.ContextRule)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string selector = 1;
  if (!this->_internal_selector().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_selector().data(), static_cast<int>(this->_internal_selector().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.ContextRule.selector");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_selector(), target);
  }

  // repeated string requested = 2;
  for (int i = 0, n = this->_internal_requested_size(); i < n; i++) {
    const auto& s = this->_internal_requested(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.ContextRule.requested");
    target = stream->WriteString(2, s, target);
  }

  // repeated string provided = 3;
  for (int i = 0, n = this->_internal_provided_size(); i < n; i++) {
    const auto& s = this->_internal_provided(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.ContextRule.provided");
    target = stream->WriteString(3, s, target);
  }

  // repeated string allowed_request_extensions = 4;
  for (int i = 0, n = this->_internal_allowed_request_extensions_size(); i < n; i++) {
    const auto& s = this->_internal_allowed_request_extensions(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.ContextRule.allowed_request_extensions");
    target = stream->WriteString(4, s, target);
  }

  // repeated string allowed_response_extensions = 5;
  for (int i = 0, n = this->_internal_allowed_response_extensions_size(); i < n; i++) {
    const auto& s = this->_internal_allowed_response_extensions(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.ContextRule.allowed_response_extensions");
    target = stream->WriteString(5, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.ContextRule)
  return target;
}

size_t ContextRule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.ContextRule)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string requested = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.requested_.size());
  for (int i = 0, n = _impl_.requested_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.requested_.Get(i));
  }

  // repeated string provided = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.provided_.size());
  for (int i = 0, n = _impl_.provided_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.provided_.Get(i));
  }

  // repeated string allowed_request_extensions = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.allowed_request_extensions_.size());
  for (int i = 0, n = _impl_.allowed_request_extensions_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.allowed_request_extensions_.Get(i));
  }

  // repeated string allowed_response_extensions = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.allowed_response_extensions_.size());
  for (int i = 0, n = _impl_.allowed_response_extensions_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.allowed_response_extensions_.Get(i));
  }

  // string selector = 1;
  if (!this->_internal_selector().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_selector());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ContextRule::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ContextRule::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ContextRule::GetClassData() const { return &_class_data_; }


void ContextRule::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ContextRule*>(&to_msg);
  auto& from = static_cast<const ContextRule&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.ContextRule)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.requested_.MergeFrom(from._impl_.requested_);
  _this->_impl_.provided_.MergeFrom(from._impl_.provided_);
  _this->_impl_.allowed_request_extensions_.MergeFrom(from._impl_.allowed_request_extensions_);
  _this->_impl_.allowed_response_extensions_.MergeFrom(from._impl_.allowed_response_extensions_);
  if (!from._internal_selector().empty()) {
    _this->_internal_set_selector(from._internal_selector());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ContextRule::CopyFrom(const ContextRule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.ContextRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContextRule::IsInitialized() const {
  return true;
}

void ContextRule::InternalSwap(ContextRule* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.requested_.InternalSwap(&other->_impl_.requested_);
  _impl_.provided_.InternalSwap(&other->_impl_.provided_);
  _impl_.allowed_request_extensions_.InternalSwap(&other->_impl_.allowed_request_extensions_);
  _impl_.allowed_response_extensions_.InternalSwap(&other->_impl_.allowed_response_extensions_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.selector_, lhs_arena,
      &other->_impl_.selector_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ContextRule::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fcontext_2eproto_getter, &descriptor_table_google_2fapi_2fcontext_2eproto_once,
      file_level_metadata_google_2fapi_2fcontext_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace api
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::google::api::Context*
Arena::CreateMaybeMessage< ::google::api::Context >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::Context >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::ContextRule*
Arena::CreateMaybeMessage< ::google::api::ContextRule >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::ContextRule >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

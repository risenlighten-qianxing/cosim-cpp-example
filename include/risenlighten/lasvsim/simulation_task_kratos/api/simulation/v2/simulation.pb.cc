// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: risenlighten/lasvsim/simulation_task_kratos/api/simulation/v2/simulation.proto

#include "risenlighten/lasvsim/simulation_task_kratos/api/simulation/v2/simulation.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace risenlighten {
namespace lasvsim {
namespace simulation_task_kratos {
namespace api {
namespace simulation {
namespace v2 {
PROTOBUF_CONSTEXPR ErrorMsg::ErrorMsg(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.msg_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.code_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ErrorMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ErrorMsgDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ErrorMsgDefaultTypeInternal() {}
  union {
    ErrorMsg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ErrorMsgDefaultTypeInternal _ErrorMsg_default_instance_;
PROTOBUF_CONSTEXPR BaseInfo::BaseInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.length_)*/0
  , /*decltype(_impl_.width_)*/0
  , /*decltype(_impl_.height_)*/0
  , /*decltype(_impl_.weight_)*/0
  , /*decltype(_impl_.max_dec_)*/0
  , /*decltype(_impl_.max_acc_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BaseInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BaseInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BaseInfoDefaultTypeInternal() {}
  union {
    BaseInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BaseInfoDefaultTypeInternal _BaseInfo_default_instance_;
PROTOBUF_CONSTEXPR Position::Position(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.link_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.lane_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.segment_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.junction_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.point_)*/nullptr
  , /*decltype(_impl_.phi_)*/0
  , /*decltype(_impl_.dis_to_link_end_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PositionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionDefaultTypeInternal() {}
  union {
    Position _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionDefaultTypeInternal _Position_default_instance_;
PROTOBUF_CONSTEXPR MovingInfo::MovingInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.position_)*/nullptr
  , /*decltype(_impl_.timestamp_)*/int64_t{0}
  , /*decltype(_impl_.u_)*/0
  , /*decltype(_impl_.lon_acc_)*/0
  , /*decltype(_impl_.v_)*/0
  , /*decltype(_impl_.lat_acc_)*/0
  , /*decltype(_impl_.w_)*/0
  , /*decltype(_impl_.w_acc_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MovingInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MovingInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MovingInfoDefaultTypeInternal() {}
  union {
    MovingInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MovingInfoDefaultTypeInternal _MovingInfo_default_instance_;
PROTOBUF_CONSTEXPR MovingObj::MovingObj(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.type_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.base_info_)*/nullptr
  , /*decltype(_impl_.moving_info_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MovingObjDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MovingObjDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MovingObjDefaultTypeInternal() {}
  union {
    MovingObj _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MovingObjDefaultTypeInternal _MovingObj_default_instance_;
PROTOBUF_CONSTEXPR Vehicle::Vehicle(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.around_moving_objs_)*/{}
  , /*decltype(_impl_.info_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct VehicleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VehicleDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VehicleDefaultTypeInternal() {}
  union {
    Vehicle _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VehicleDefaultTypeInternal _Vehicle_default_instance_;
PROTOBUF_CONSTEXPR VehicleControl::VehicleControl(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.lon_acc_)*/0
  , /*decltype(_impl_.ste_wheel_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct VehicleControlDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VehicleControlDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VehicleControlDefaultTypeInternal() {}
  union {
    VehicleControl _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VehicleControlDefaultTypeInternal _VehicleControl_default_instance_;
PROTOBUF_CONSTEXPR Map_JunctionMapEntry_DoNotUse::Map_JunctionMapEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct Map_JunctionMapEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Map_JunctionMapEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Map_JunctionMapEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Map_JunctionMapEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Map_JunctionMapEntry_DoNotUseDefaultTypeInternal _Map_JunctionMapEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR Map_SegmentMapEntry_DoNotUse::Map_SegmentMapEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct Map_SegmentMapEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Map_SegmentMapEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Map_SegmentMapEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Map_SegmentMapEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Map_SegmentMapEntry_DoNotUseDefaultTypeInternal _Map_SegmentMapEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR Map_LinkMapEntry_DoNotUse::Map_LinkMapEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct Map_LinkMapEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Map_LinkMapEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Map_LinkMapEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Map_LinkMapEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Map_LinkMapEntry_DoNotUseDefaultTypeInternal _Map_LinkMapEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR Map_LaneMapEntry_DoNotUse::Map_LaneMapEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct Map_LaneMapEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Map_LaneMapEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Map_LaneMapEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Map_LaneMapEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Map_LaneMapEntry_DoNotUseDefaultTypeInternal _Map_LaneMapEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR Map_CrosswalkMapEntry_DoNotUse::Map_CrosswalkMapEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct Map_CrosswalkMapEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Map_CrosswalkMapEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Map_CrosswalkMapEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Map_CrosswalkMapEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Map_CrosswalkMapEntry_DoNotUseDefaultTypeInternal _Map_CrosswalkMapEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR Map_StopLineMapEntry_DoNotUse::Map_StopLineMapEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct Map_StopLineMapEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Map_StopLineMapEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Map_StopLineMapEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Map_StopLineMapEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Map_StopLineMapEntry_DoNotUseDefaultTypeInternal _Map_StopLineMapEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR Map::Map(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.junction_map_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.segment_map_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.link_map_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.lane_map_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.crosswalk_map_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.stop_line_map_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MapDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MapDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MapDefaultTypeInternal() {}
  union {
    Map _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MapDefaultTypeInternal _Map_default_instance_;
PROTOBUF_CONSTEXPR StartSimulationReq::StartSimulationReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.map_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.origin_)*/nullptr
  , /*decltype(_impl_.destination_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StartSimulationReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartSimulationReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartSimulationReqDefaultTypeInternal() {}
  union {
    StartSimulationReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartSimulationReqDefaultTypeInternal _StartSimulationReq_default_instance_;
PROTOBUF_CONSTEXPR StartSimulationRes::StartSimulationRes(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.simulation_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.error_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StartSimulationResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartSimulationResDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartSimulationResDefaultTypeInternal() {}
  union {
    StartSimulationRes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartSimulationResDefaultTypeInternal _StartSimulationRes_default_instance_;
PROTOBUF_CONSTEXPR NextStepReq::NextStepReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.simulation_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NextStepReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NextStepReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NextStepReqDefaultTypeInternal() {}
  union {
    NextStepReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NextStepReqDefaultTypeInternal _NextStepReq_default_instance_;
PROTOBUF_CONSTEXPR SimulationState::SimulationState(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.msg_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.progress_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SimulationStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SimulationStateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SimulationStateDefaultTypeInternal() {}
  union {
    SimulationState _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SimulationStateDefaultTypeInternal _SimulationState_default_instance_;
PROTOBUF_CONSTEXPR NextStepRes::NextStepRes(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.state_)*/nullptr
  , /*decltype(_impl_.error_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NextStepResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NextStepResDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NextStepResDefaultTypeInternal() {}
  union {
    NextStepRes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NextStepResDefaultTypeInternal _NextStepRes_default_instance_;
PROTOBUF_CONSTEXPR ResetSimulationReq::ResetSimulationReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.simulation_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ResetSimulationReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResetSimulationReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResetSimulationReqDefaultTypeInternal() {}
  union {
    ResetSimulationReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResetSimulationReqDefaultTypeInternal _ResetSimulationReq_default_instance_;
PROTOBUF_CONSTEXPR ResetSimulationRes::ResetSimulationRes(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.simulation_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.error_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ResetSimulationResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResetSimulationResDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResetSimulationResDefaultTypeInternal() {}
  union {
    ResetSimulationRes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResetSimulationResDefaultTypeInternal _ResetSimulationRes_default_instance_;
PROTOBUF_CONSTEXPR StopSimulationReq::StopSimulationReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.simulation_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StopSimulationReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopSimulationReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopSimulationReqDefaultTypeInternal() {}
  union {
    StopSimulationReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopSimulationReqDefaultTypeInternal _StopSimulationReq_default_instance_;
PROTOBUF_CONSTEXPR StopSimulationRes::StopSimulationRes(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.state_)*/nullptr
  , /*decltype(_impl_.error_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StopSimulationResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopSimulationResDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopSimulationResDefaultTypeInternal() {}
  union {
    StopSimulationRes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopSimulationResDefaultTypeInternal _StopSimulationRes_default_instance_;
PROTOBUF_CONSTEXPR GetMapReq::GetMapReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.simulation_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetMapReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetMapReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetMapReqDefaultTypeInternal() {}
  union {
    GetMapReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetMapReqDefaultTypeInternal _GetMapReq_default_instance_;
PROTOBUF_CONSTEXPR GetMapRes::GetMapRes(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.error_)*/nullptr
  , /*decltype(_impl_.map_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetMapResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetMapResDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetMapResDefaultTypeInternal() {}
  union {
    GetMapRes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetMapResDefaultTypeInternal _GetMapRes_default_instance_;
PROTOBUF_CONSTEXPR GetAllTrafficPartReq::GetAllTrafficPartReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.simulation_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetAllTrafficPartReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAllTrafficPartReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAllTrafficPartReqDefaultTypeInternal() {}
  union {
    GetAllTrafficPartReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAllTrafficPartReqDefaultTypeInternal _GetAllTrafficPartReq_default_instance_;
PROTOBUF_CONSTEXPR GetAllTrafficPartRes::GetAllTrafficPartRes(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.list_)*/{}
  , /*decltype(_impl_.error_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetAllTrafficPartResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAllTrafficPartResDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAllTrafficPartResDefaultTypeInternal() {}
  union {
    GetAllTrafficPartRes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAllTrafficPartResDefaultTypeInternal _GetAllTrafficPartRes_default_instance_;
PROTOBUF_CONSTEXPR SetVehicleControlReq::SetVehicleControlReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.simulation_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.vehicle_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.lon_acc_)*/0
  , /*decltype(_impl_.ste_wheel_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetVehicleControlReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetVehicleControlReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetVehicleControlReqDefaultTypeInternal() {}
  union {
    SetVehicleControlReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetVehicleControlReqDefaultTypeInternal _SetVehicleControlReq_default_instance_;
PROTOBUF_CONSTEXPR SetVehicleControlRes::SetVehicleControlRes(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.error_)*/nullptr
  , /*decltype(_impl_.vehicle_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetVehicleControlResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetVehicleControlResDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetVehicleControlResDefaultTypeInternal() {}
  union {
    SetVehicleControlRes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetVehicleControlResDefaultTypeInternal _SetVehicleControlRes_default_instance_;
PROTOBUF_CONSTEXPR GetVehicleEgoReq::GetVehicleEgoReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.simulation_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.vehicle_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetVehicleEgoReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetVehicleEgoReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetVehicleEgoReqDefaultTypeInternal() {}
  union {
    GetVehicleEgoReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetVehicleEgoReqDefaultTypeInternal _GetVehicleEgoReq_default_instance_;
PROTOBUF_CONSTEXPR GetVehicleEgoRes::GetVehicleEgoRes(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.error_)*/nullptr
  , /*decltype(_impl_.vehicle_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetVehicleEgoResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetVehicleEgoResDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetVehicleEgoResDefaultTypeInternal() {}
  union {
    GetVehicleEgoRes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetVehicleEgoResDefaultTypeInternal _GetVehicleEgoRes_default_instance_;
PROTOBUF_CONSTEXPR GetResultsReq::GetResultsReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.simulation_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetResultsReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetResultsReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetResultsReqDefaultTypeInternal() {}
  union {
    GetResultsReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetResultsReqDefaultTypeInternal _GetResultsReq_default_instance_;
PROTOBUF_CONSTEXPR GetResultsRes_ResultsEntry_DoNotUse::GetResultsRes_ResultsEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct GetResultsRes_ResultsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetResultsRes_ResultsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetResultsRes_ResultsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    GetResultsRes_ResultsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetResultsRes_ResultsEntry_DoNotUseDefaultTypeInternal _GetResultsRes_ResultsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR GetResultsRes_item::GetResultsRes_item(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.r_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetResultsRes_itemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetResultsRes_itemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetResultsRes_itemDefaultTypeInternal() {}
  union {
    GetResultsRes_item _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetResultsRes_itemDefaultTypeInternal _GetResultsRes_item_default_instance_;
PROTOBUF_CONSTEXPR GetResultsRes_arrays::GetResultsRes_arrays(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.arr_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetResultsRes_arraysDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetResultsRes_arraysDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetResultsRes_arraysDefaultTypeInternal() {}
  union {
    GetResultsRes_arrays _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetResultsRes_arraysDefaultTypeInternal _GetResultsRes_arrays_default_instance_;
PROTOBUF_CONSTEXPR GetResultsRes::GetResultsRes(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.results_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.error_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetResultsResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetResultsResDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetResultsResDefaultTypeInternal() {}
  union {
    GetResultsRes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetResultsResDefaultTypeInternal _GetResultsRes_default_instance_;
PROTOBUF_CONSTEXPR GetLinkReq::GetLinkReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.simulation_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.link_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetLinkReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLinkReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLinkReqDefaultTypeInternal() {}
  union {
    GetLinkReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLinkReqDefaultTypeInternal _GetLinkReq_default_instance_;
PROTOBUF_CONSTEXPR GetLinkRes::GetLinkRes(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.error_)*/nullptr
  , /*decltype(_impl_.link_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetLinkResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLinkResDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLinkResDefaultTypeInternal() {}
  union {
    GetLinkRes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLinkResDefaultTypeInternal _GetLinkRes_default_instance_;
PROTOBUF_CONSTEXPR GetLaneReq::GetLaneReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.simulation_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.lane_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetLaneReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLaneReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLaneReqDefaultTypeInternal() {}
  union {
    GetLaneReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLaneReqDefaultTypeInternal _GetLaneReq_default_instance_;
PROTOBUF_CONSTEXPR GetLaneRes::GetLaneRes(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.error_)*/nullptr
  , /*decltype(_impl_.lane_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetLaneResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLaneResDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLaneResDefaultTypeInternal() {}
  union {
    GetLaneRes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLaneResDefaultTypeInternal _GetLaneRes_default_instance_;
PROTOBUF_CONSTEXPR GetJunctionReq::GetJunctionReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.simulation_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.junction_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetJunctionReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetJunctionReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetJunctionReqDefaultTypeInternal() {}
  union {
    GetJunctionReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetJunctionReqDefaultTypeInternal _GetJunctionReq_default_instance_;
PROTOBUF_CONSTEXPR GetJunctionRes::GetJunctionRes(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.error_)*/nullptr
  , /*decltype(_impl_.junction_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetJunctionResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetJunctionResDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetJunctionResDefaultTypeInternal() {}
  union {
    GetJunctionRes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetJunctionResDefaultTypeInternal _GetJunctionRes_default_instance_;
PROTOBUF_CONSTEXPR GetSegmentReq::GetSegmentReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.simulation_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.segment_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetSegmentReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSegmentReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSegmentReqDefaultTypeInternal() {}
  union {
    GetSegmentReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSegmentReqDefaultTypeInternal _GetSegmentReq_default_instance_;
PROTOBUF_CONSTEXPR GetSegmentRes::GetSegmentRes(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.error_)*/nullptr
  , /*decltype(_impl_.segment_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetSegmentResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSegmentResDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSegmentResDefaultTypeInternal() {}
  union {
    GetSegmentRes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSegmentResDefaultTypeInternal _GetSegmentRes_default_instance_;
}  // namespace v2
}  // namespace simulation
}  // namespace api
}  // namespace simulation_task_kratos
}  // namespace lasvsim
}  // namespace risenlighten
static ::_pb::Metadata file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[44];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto = nullptr;

const uint32_t TableStruct_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg, _impl_.code_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg, _impl_.msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::BaseInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::BaseInfo, _impl_.length_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::BaseInfo, _impl_.width_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::BaseInfo, _impl_.height_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::BaseInfo, _impl_.weight_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::BaseInfo, _impl_.max_dec_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::BaseInfo, _impl_.max_acc_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Position, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Position, _impl_.point_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Position, _impl_.phi_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Position, _impl_.link_id_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Position, _impl_.dis_to_link_end_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Position, _impl_.lane_id_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Position, _impl_.segment_id_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Position, _impl_.junction_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::MovingInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::MovingInfo, _impl_.position_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::MovingInfo, _impl_.timestamp_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::MovingInfo, _impl_.u_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::MovingInfo, _impl_.lon_acc_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::MovingInfo, _impl_.v_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::MovingInfo, _impl_.lat_acc_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::MovingInfo, _impl_.w_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::MovingInfo, _impl_.w_acc_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::MovingObj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::MovingObj, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::MovingObj, _impl_.base_info_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::MovingObj, _impl_.moving_info_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::MovingObj, _impl_.type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Vehicle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Vehicle, _impl_.info_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Vehicle, _impl_.around_moving_objs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::VehicleControl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::VehicleControl, _impl_.lon_acc_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::VehicleControl, _impl_.ste_wheel_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_JunctionMapEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_JunctionMapEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_JunctionMapEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_JunctionMapEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_SegmentMapEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_SegmentMapEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_SegmentMapEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_SegmentMapEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_LinkMapEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_LinkMapEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_LinkMapEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_LinkMapEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_LaneMapEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_LaneMapEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_LaneMapEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_LaneMapEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_CrosswalkMapEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_CrosswalkMapEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_CrosswalkMapEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_CrosswalkMapEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_StopLineMapEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_StopLineMapEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_StopLineMapEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_StopLineMapEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map, _impl_.junction_map_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map, _impl_.segment_map_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map, _impl_.link_map_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map, _impl_.lane_map_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map, _impl_.crosswalk_map_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map, _impl_.stop_line_map_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StartSimulationReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StartSimulationReq, _impl_.map_id_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StartSimulationReq, _impl_.origin_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StartSimulationReq, _impl_.destination_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StartSimulationRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StartSimulationRes, _impl_.simulation_id_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StartSimulationRes, _impl_.error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::NextStepReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::NextStepReq, _impl_.simulation_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SimulationState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SimulationState, _impl_.progress_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SimulationState, _impl_.msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::NextStepRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::NextStepRes, _impl_.state_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::NextStepRes, _impl_.error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ResetSimulationReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ResetSimulationReq, _impl_.simulation_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ResetSimulationRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ResetSimulationRes, _impl_.simulation_id_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ResetSimulationRes, _impl_.error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StopSimulationReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StopSimulationReq, _impl_.simulation_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StopSimulationRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StopSimulationRes, _impl_.state_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StopSimulationRes, _impl_.error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetMapReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetMapReq, _impl_.simulation_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetMapRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetMapRes, _impl_.error_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetMapRes, _impl_.map_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetAllTrafficPartReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetAllTrafficPartReq, _impl_.simulation_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetAllTrafficPartRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetAllTrafficPartRes, _impl_.error_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetAllTrafficPartRes, _impl_.list_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SetVehicleControlReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SetVehicleControlReq, _impl_.simulation_id_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SetVehicleControlReq, _impl_.vehicle_id_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SetVehicleControlReq, _impl_.lon_acc_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SetVehicleControlReq, _impl_.ste_wheel_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SetVehicleControlRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SetVehicleControlRes, _impl_.error_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SetVehicleControlRes, _impl_.vehicle_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetVehicleEgoReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetVehicleEgoReq, _impl_.simulation_id_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetVehicleEgoReq, _impl_.vehicle_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetVehicleEgoRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetVehicleEgoRes, _impl_.error_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetVehicleEgoRes, _impl_.vehicle_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsReq, _impl_.simulation_id_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsRes_ResultsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsRes_ResultsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsRes_ResultsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsRes_ResultsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsRes_item, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsRes_item, _impl_.r_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsRes_arrays, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsRes_arrays, _impl_.arr_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsRes, _impl_.error_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsRes, _impl_.results_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLinkReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLinkReq, _impl_.simulation_id_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLinkReq, _impl_.link_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLinkRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLinkRes, _impl_.error_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLinkRes, _impl_.link_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLaneReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLaneReq, _impl_.simulation_id_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLaneReq, _impl_.lane_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLaneRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLaneRes, _impl_.error_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLaneRes, _impl_.lane_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetJunctionReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetJunctionReq, _impl_.simulation_id_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetJunctionReq, _impl_.junction_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetJunctionRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetJunctionRes, _impl_.error_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetJunctionRes, _impl_.junction_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetSegmentReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetSegmentReq, _impl_.simulation_id_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetSegmentReq, _impl_.segment_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetSegmentRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetSegmentRes, _impl_.error_),
  PROTOBUF_FIELD_OFFSET(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetSegmentRes, _impl_.segment_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg)},
  { 8, -1, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::BaseInfo)},
  { 20, -1, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Position)},
  { 33, -1, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::MovingInfo)},
  { 47, -1, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::MovingObj)},
  { 57, -1, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Vehicle)},
  { 65, -1, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::VehicleControl)},
  { 73, 81, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_JunctionMapEntry_DoNotUse)},
  { 83, 91, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_SegmentMapEntry_DoNotUse)},
  { 93, 101, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_LinkMapEntry_DoNotUse)},
  { 103, 111, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_LaneMapEntry_DoNotUse)},
  { 113, 121, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_CrosswalkMapEntry_DoNotUse)},
  { 123, 131, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_StopLineMapEntry_DoNotUse)},
  { 133, -1, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map)},
  { 145, -1, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StartSimulationReq)},
  { 154, -1, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StartSimulationRes)},
  { 162, -1, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::NextStepReq)},
  { 169, -1, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SimulationState)},
  { 177, -1, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::NextStepRes)},
  { 185, -1, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ResetSimulationReq)},
  { 192, -1, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ResetSimulationRes)},
  { 200, -1, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StopSimulationReq)},
  { 207, -1, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StopSimulationRes)},
  { 215, -1, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetMapReq)},
  { 222, -1, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetMapRes)},
  { 230, -1, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetAllTrafficPartReq)},
  { 237, -1, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetAllTrafficPartRes)},
  { 245, -1, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SetVehicleControlReq)},
  { 255, -1, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SetVehicleControlRes)},
  { 263, -1, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetVehicleEgoReq)},
  { 271, -1, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetVehicleEgoRes)},
  { 279, -1, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsReq)},
  { 286, 294, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsRes_ResultsEntry_DoNotUse)},
  { 296, -1, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsRes_item)},
  { 303, -1, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsRes_arrays)},
  { 310, -1, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsRes)},
  { 318, -1, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLinkReq)},
  { 326, -1, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLinkRes)},
  { 334, -1, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLaneReq)},
  { 342, -1, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLaneRes)},
  { 350, -1, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetJunctionReq)},
  { 358, -1, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetJunctionRes)},
  { 366, -1, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetSegmentReq)},
  { 374, -1, -1, sizeof(::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetSegmentRes)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_ErrorMsg_default_instance_._instance,
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_BaseInfo_default_instance_._instance,
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_Position_default_instance_._instance,
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_MovingInfo_default_instance_._instance,
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_MovingObj_default_instance_._instance,
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_Vehicle_default_instance_._instance,
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_VehicleControl_default_instance_._instance,
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_Map_JunctionMapEntry_DoNotUse_default_instance_._instance,
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_Map_SegmentMapEntry_DoNotUse_default_instance_._instance,
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_Map_LinkMapEntry_DoNotUse_default_instance_._instance,
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_Map_LaneMapEntry_DoNotUse_default_instance_._instance,
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_Map_CrosswalkMapEntry_DoNotUse_default_instance_._instance,
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_Map_StopLineMapEntry_DoNotUse_default_instance_._instance,
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_Map_default_instance_._instance,
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_StartSimulationReq_default_instance_._instance,
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_StartSimulationRes_default_instance_._instance,
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_NextStepReq_default_instance_._instance,
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_SimulationState_default_instance_._instance,
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_NextStepRes_default_instance_._instance,
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_ResetSimulationReq_default_instance_._instance,
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_ResetSimulationRes_default_instance_._instance,
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_StopSimulationReq_default_instance_._instance,
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_StopSimulationRes_default_instance_._instance,
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_GetMapReq_default_instance_._instance,
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_GetMapRes_default_instance_._instance,
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_GetAllTrafficPartReq_default_instance_._instance,
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_GetAllTrafficPartRes_default_instance_._instance,
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_SetVehicleControlReq_default_instance_._instance,
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_SetVehicleControlRes_default_instance_._instance,
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_GetVehicleEgoReq_default_instance_._instance,
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_GetVehicleEgoRes_default_instance_._instance,
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_GetResultsReq_default_instance_._instance,
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_GetResultsRes_ResultsEntry_DoNotUse_default_instance_._instance,
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_GetResultsRes_item_default_instance_._instance,
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_GetResultsRes_arrays_default_instance_._instance,
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_GetResultsRes_default_instance_._instance,
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_GetLinkReq_default_instance_._instance,
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_GetLinkRes_default_instance_._instance,
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_GetLaneReq_default_instance_._instance,
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_GetLaneRes_default_instance_._instance,
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_GetJunctionReq_default_instance_._instance,
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_GetJunctionRes_default_instance_._instance,
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_GetSegmentReq_default_instance_._instance,
  &::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::_GetSegmentRes_default_instance_._instance,
};

const char descriptor_table_protodef_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\nNrisenlighten/lasvsim/simulation_task_k"
  "ratos/api/simulation/v2/simulation.proto"
  "\022=risenlighten.lasvsim.simulation_task_k"
  "ratos.api.simulation.v2\032Irisenlighten/la"
  "svsim/simulation_task_kratos/api/simulat"
  "ion/v2/hdmap.proto\032\037google/api/field_beh"
  "avior.proto\"%\n\010ErrorMsg\022\014\n\004code\030\001 \001(\005\022\013\n"
  "\003msg\030\002 \001(\t\"k\n\010BaseInfo\022\016\n\006Length\030\001 \001(\001\022\r"
  "\n\005Width\030\002 \001(\001\022\016\n\006Height\030\003 \001(\001\022\016\n\006Weight\030"
  "\004 \001(\001\022\017\n\007max_dec\030\005 \001(\001\022\017\n\007max_acc\030\006 \001(\001\""
  "\320\001\n\010Position\022S\n\005point\030\001 \001(\0132D.risenlight"
  "en.lasvsim.simulation_task_kratos.api.si"
  "mulation.v2.Point\022\013\n\003phi\030\002 \001(\001\022\017\n\007link_i"
  "d\030\003 \001(\t\022\027\n\017dis_to_link_end\030\004 \001(\001\022\017\n\007lane"
  "_id\030\005 \001(\t\022\022\n\nsegment_id\030\006 \001(\t\022\023\n\013junctio"
  "n_id\030\007 \001(\t\"\314\001\n\nMovingInfo\022Y\n\010position\030\001 "
  "\001(\0132G.risenlighten.lasvsim.simulation_ta"
  "sk_kratos.api.simulation.v2.Position\022\021\n\t"
  "timestamp\030\002 \001(\003\022\t\n\001u\030\003 \001(\001\022\017\n\007lon_acc\030\004 "
  "\001(\001\022\t\n\001v\030\005 \001(\001\022\017\n\007lat_acc\030\006 \001(\001\022\t\n\001w\030\007 \001"
  "(\001\022\r\n\005w_acc\030\010 \001(\001\"\341\001\n\tMovingObj\022\n\n\002id\030\001 "
  "\001(\t\022Z\n\tbase_info\030\002 \001(\0132G.risenlighten.la"
  "svsim.simulation_task_kratos.api.simulat"
  "ion.v2.BaseInfo\022^\n\013moving_info\030\003 \001(\0132I.r"
  "isenlighten.lasvsim.simulation_task_krat"
  "os.api.simulation.v2.MovingInfo\022\014\n\004type\030"
  "\004 \001(\t\"\307\001\n\007Vehicle\022V\n\004info\030\001 \001(\0132H.risenl"
  "ighten.lasvsim.simulation_task_kratos.ap"
  "i.simulation.v2.MovingObj\022d\n\022around_movi"
  "ng_objs\030\002 \003(\0132H.risenlighten.lasvsim.sim"
  "ulation_task_kratos.api.simulation.v2.Mo"
  "vingObj\"4\n\016VehicleControl\022\017\n\007lon_acc\030\001 \001"
  "(\001\022\021\n\tste_wheel\030\002 \001(\001\"\326\n\n\003Map\022i\n\014junctio"
  "n_map\030\001 \003(\0132S.risenlighten.lasvsim.simul"
  "ation_task_kratos.api.simulation.v2.Map."
  "JunctionMapEntry\022g\n\013segment_map\030\002 \003(\0132R."
  "risenlighten.lasvsim.simulation_task_kra"
  "tos.api.simulation.v2.Map.SegmentMapEntr"
  "y\022a\n\010link_map\030\003 \003(\0132O.risenlighten.lasvs"
  "im.simulation_task_kratos.api.simulation"
  ".v2.Map.LinkMapEntry\022a\n\010lane_map\030\004 \003(\0132O"
  ".risenlighten.lasvsim.simulation_task_kr"
  "atos.api.simulation.v2.Map.LaneMapEntry\022"
  "k\n\rcrosswalk_map\030\005 \003(\0132T.risenlighten.la"
  "svsim.simulation_task_kratos.api.simulat"
  "ion.v2.Map.CrosswalkMapEntry\022j\n\rstop_lin"
  "e_map\030\006 \003(\0132S.risenlighten.lasvsim.simul"
  "ation_task_kratos.api.simulation.v2.Map."
  "StopLineMapEntry\032{\n\020JunctionMapEntry\022\013\n\003"
  "key\030\001 \001(\t\022V\n\005value\030\002 \001(\0132G.risenlighten."
  "lasvsim.simulation_task_kratos.api.simul"
  "ation.v2.Junction:\0028\001\032y\n\017SegmentMapEntry"
  "\022\013\n\003key\030\001 \001(\t\022U\n\005value\030\002 \001(\0132F.risenligh"
  "ten.lasvsim.simulation_task_kratos.api.s"
  "imulation.v2.Segment:\0028\001\032s\n\014LinkMapEntry"
  "\022\013\n\003key\030\001 \001(\t\022R\n\005value\030\002 \001(\0132C.risenligh"
  "ten.lasvsim.simulation_task_kratos.api.s"
  "imulation.v2.Link:\0028\001\032s\n\014LaneMapEntry\022\013\n"
  "\003key\030\001 \001(\t\022R\n\005value\030\002 \001(\0132C.risenlighten"
  ".lasvsim.simulation_task_kratos.api.simu"
  "lation.v2.Lane:\0028\001\032}\n\021CrosswalkMapEntry\022"
  "\013\n\003key\030\001 \001(\t\022W\n\005value\030\002 \001(\0132H.risenlight"
  "en.lasvsim.simulation_task_kratos.api.si"
  "mulation.v2.Crosswalk:\0028\001\032{\n\020StopLineMap"
  "Entry\022\013\n\003key\030\001 \001(\t\022V\n\005value\030\002 \001(\0132G.rise"
  "nlighten.lasvsim.simulation_task_kratos."
  "api.simulation.v2.Stopline:\0028\001\"\333\001\n\022Start"
  "SimulationReq\022\016\n\006map_id\030\001 \001(\t\022W\n\006origin\030"
  "\002 \001(\0132G.risenlighten.lasvsim.simulation_"
  "task_kratos.api.simulation.v2.Position\022\\"
  "\n\013destination\030\003 \001(\0132G.risenlighten.lasvs"
  "im.simulation_task_kratos.api.simulation"
  ".v2.Position\"\203\001\n\022StartSimulationRes\022\025\n\rs"
  "imulation_id\030\001 \001(\t\022V\n\005error\030\002 \001(\0132G.rise"
  "nlighten.lasvsim.simulation_task_kratos."
  "api.simulation.v2.ErrorMsg\")\n\013NextStepRe"
  "q\022\032\n\rsimulation_id\030\001 \001(\tB\003\340A\002\"0\n\017Simulat"
  "ionState\022\020\n\010progress\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\""
  "\304\001\n\013NextStepRes\022]\n\005state\030\001 \001(\0132N.risenli"
  "ghten.lasvsim.simulation_task_kratos.api"
  ".simulation.v2.SimulationState\022V\n\005error\030"
  "\002 \001(\0132G.risenlighten.lasvsim.simulation_"
  "task_kratos.api.simulation.v2.ErrorMsg\"0"
  "\n\022ResetSimulationReq\022\032\n\rsimulation_id\030\001 "
  "\001(\tB\003\340A\002\"\203\001\n\022ResetSimulationRes\022\025\n\rsimul"
  "ation_id\030\001 \001(\t\022V\n\005error\030\002 \001(\0132G.risenlig"
  "hten.lasvsim.simulation_task_kratos.api."
  "simulation.v2.ErrorMsg\"/\n\021StopSimulation"
  "Req\022\032\n\rsimulation_id\030\002 \001(\tB\003\340A\002\"\312\001\n\021Stop"
  "SimulationRes\022]\n\005state\030\001 \001(\0132N.risenligh"
  "ten.lasvsim.simulation_task_kratos.api.s"
  "imulation.v2.SimulationState\022V\n\005error\030\002 "
  "\001(\0132G.risenlighten.lasvsim.simulation_ta"
  "sk_kratos.api.simulation.v2.ErrorMsg\"\'\n\t"
  "GetMapReq\022\032\n\rsimulation_id\030\001 \001(\tB\003\340A\002\"\264\001"
  "\n\tGetMapRes\022V\n\005error\030\001 \001(\0132G.risenlighte"
  "n.lasvsim.simulation_task_kratos.api.sim"
  "ulation.v2.ErrorMsg\022O\n\003map\030\002 \001(\0132B.risen"
  "lighten.lasvsim.simulation_task_kratos.a"
  "pi.simulation.v2.Map\"2\n\024GetAllTrafficPar"
  "tReq\022\032\n\rsimulation_id\030\001 \001(\tB\003\340A\002\"\306\001\n\024Get"
  "AllTrafficPartRes\022V\n\005error\030\001 \001(\0132G.risen"
  "lighten.lasvsim.simulation_task_kratos.a"
  "pi.simulation.v2.ErrorMsg\022V\n\004list\030\002 \003(\0132"
  "H.risenlighten.lasvsim.simulation_task_k"
  "ratos.api.simulation.v2.MovingObj\"o\n\024Set"
  "VehicleControlReq\022\032\n\rsimulation_id\030\001 \001(\t"
  "B\003\340A\002\022\027\n\nvehicle_id\030\002 \001(\tB\003\340A\002\022\017\n\007lon_ac"
  "c\030\003 \001(\001\022\021\n\tste_wheel\030\004 \001(\001\"\307\001\n\024SetVehicl"
  "eControlRes\022V\n\005error\030\001 \001(\0132G.risenlighte"
  "n.lasvsim.simulation_task_kratos.api.sim"
  "ulation.v2.ErrorMsg\022W\n\007vehicle\030\002 \001(\0132F.r"
  "isenlighten.lasvsim.simulation_task_krat"
  "os.api.simulation.v2.Vehicle\"G\n\020GetVehic"
  "leEgoReq\022\032\n\rsimulation_id\030\001 \001(\tB\003\340A\002\022\027\n\n"
  "vehicle_id\030\002 \001(\tB\003\340A\002\"\303\001\n\020GetVehicleEgoR"
  "es\022V\n\005error\030\001 \001(\0132G.risenlighten.lasvsim"
  ".simulation_task_kratos.api.simulation.v"
  "2.ErrorMsg\022W\n\007vehicle\030\002 \001(\0132F.risenlight"
  "en.lasvsim.simulation_task_kratos.api.si"
  "mulation.v2.Vehicle\"+\n\rGetResultsReq\022\032\n\r"
  "simulation_id\030\001 \001(\tB\003\340A\002\"\326\003\n\rGetResultsR"
  "es\022V\n\005error\030\001 \001(\0132G.risenlighten.lasvsim"
  ".simulation_task_kratos.api.simulation.v"
  "2.ErrorMsg\022j\n\007results\030\002 \003(\0132Y.risenlight"
  "en.lasvsim.simulation_task_kratos.api.si"
  "mulation.v2.GetResultsRes.ResultsEntry\032\203"
  "\001\n\014ResultsEntry\022\013\n\003key\030\001 \001(\t\022b\n\005value\030\002 "
  "\001(\0132S.risenlighten.lasvsim.simulation_ta"
  "sk_kratos.api.simulation.v2.GetResultsRe"
  "s.arrays:\0028\001\032\021\n\004item\022\t\n\001r\030\001 \003(\001\032h\n\006array"
  "s\022^\n\003arr\030\001 \003(\0132Q.risenlighten.lasvsim.si"
  "mulation_task_kratos.api.simulation.v2.G"
  "etResultsRes.item\">\n\nGetLinkReq\022\032\n\rsimul"
  "ation_id\030\001 \001(\tB\003\340A\002\022\024\n\007link_id\030\002 \001(\tB\003\340A"
  "\002\"\267\001\n\nGetLinkRes\022V\n\005error\030\001 \001(\0132G.risenl"
  "ighten.lasvsim.simulation_task_kratos.ap"
  "i.simulation.v2.ErrorMsg\022Q\n\004link\030\002 \001(\0132C"
  ".risenlighten.lasvsim.simulation_task_kr"
  "atos.api.simulation.v2.Link\">\n\nGetLaneRe"
  "q\022\032\n\rsimulation_id\030\001 \001(\tB\003\340A\002\022\024\n\007lane_id"
  "\030\002 \001(\tB\003\340A\002\"\267\001\n\nGetLaneRes\022V\n\005error\030\001 \001("
  "\0132G.risenlighten.lasvsim.simulation_task"
  "_kratos.api.simulation.v2.ErrorMsg\022Q\n\004la"
  "ne\030\002 \001(\0132C.risenlighten.lasvsim.simulati"
  "on_task_kratos.api.simulation.v2.Lane\"F\n"
  "\016GetJunctionReq\022\032\n\rsimulation_id\030\001 \001(\tB\003"
  "\340A\002\022\030\n\013junction_id\030\002 \001(\tB\003\340A\002\"\303\001\n\016GetJun"
  "ctionRes\022V\n\005error\030\001 \001(\0132G.risenlighten.l"
  "asvsim.simulation_task_kratos.api.simula"
  "tion.v2.ErrorMsg\022Y\n\010junction\030\002 \001(\0132G.ris"
  "enlighten.lasvsim.simulation_task_kratos"
  ".api.simulation.v2.Junction\"D\n\rGetSegmen"
  "tReq\022\032\n\rsimulation_id\030\001 \001(\tB\003\340A\002\022\027\n\nsegm"
  "ent_id\030\002 \001(\tB\003\340A\002\"\300\001\n\rGetSegmentRes\022V\n\005e"
  "rror\030\001 \001(\0132G.risenlighten.lasvsim.simula"
  "tion_task_kratos.api.simulation.v2.Error"
  "Msg\022W\n\007segment\030\002 \001(\0132F.risenlighten.lasv"
  "sim.simulation_task_kratos.api.simulatio"
  "n.v2.Segment2\345\021\n\014SimulationV2\022\255\001\n\005Start\022"
  "Q.risenlighten.lasvsim.simulation_task_k"
  "ratos.api.simulation.v2.StartSimulationR"
  "eq\032Q.risenlighten.lasvsim.simulation_tas"
  "k_kratos.api.simulation.v2.StartSimulati"
  "onRes\022\242\001\n\010NextStep\022J.risenlighten.lasvsi"
  "m.simulation_task_kratos.api.simulation."
  "v2.NextStepReq\032J.risenlighten.lasvsim.si"
  "mulation_task_kratos.api.simulation.v2.N"
  "extStepRes\022\267\001\n\017ResetSimulation\022Q.risenli"
  "ghten.lasvsim.simulation_task_kratos.api"
  ".simulation.v2.ResetSimulationReq\032Q.rise"
  "nlighten.lasvsim.simulation_task_kratos."
  "api.simulation.v2.ResetSimulationRes\022\252\001\n"
  "\004Stop\022P.risenlighten.lasvsim.simulation_"
  "task_kratos.api.simulation.v2.StopSimula"
  "tionReq\032P.risenlighten.lasvsim.simulatio"
  "n_task_kratos.api.simulation.v2.StopSimu"
  "lationRes\022\234\001\n\006GetMap\022H.risenlighten.lasv"
  "sim.simulation_task_kratos.api.simulatio"
  "n.v2.GetMapReq\032H.risenlighten.lasvsim.si"
  "mulation_task_kratos.api.simulation.v2.G"
  "etMapRes\022\275\001\n\021GetAllTrafficPart\022S.risenli"
  "ghten.lasvsim.simulation_task_kratos.api"
  ".simulation.v2.GetAllTrafficPartReq\032S.ri"
  "senlighten.lasvsim.simulation_task_krato"
  "s.api.simulation.v2.GetAllTrafficPartRes"
  "\022\275\001\n\021SetVehicleControl\022S.risenlighten.la"
  "svsim.simulation_task_kratos.api.simulat"
  "ion.v2.SetVehicleControlReq\032S.risenlight"
  "en.lasvsim.simulation_task_kratos.api.si"
  "mulation.v2.SetVehicleControlRes\022\261\001\n\rGet"
  "VehicleEgo\022O.risenlighten.lasvsim.simula"
  "tion_task_kratos.api.simulation.v2.GetVe"
  "hicleEgoReq\032O.risenlighten.lasvsim.simul"
  "ation_task_kratos.api.simulation.v2.GetV"
  "ehicleEgoRes\022\250\001\n\nGetResults\022L.risenlight"
  "en.lasvsim.simulation_task_kratos.api.si"
  "mulation.v2.GetResultsReq\032L.risenlighten"
  ".lasvsim.simulation_task_kratos.api.simu"
  "lation.v2.GetResultsRes\022\237\001\n\007GetLink\022I.ri"
  "senlighten.lasvsim.simulation_task_krato"
  "s.api.simulation.v2.GetLinkReq\032I.risenli"
  "ghten.lasvsim.simulation_task_kratos.api"
  ".simulation.v2.GetLinkRes\022\237\001\n\007GetLane\022I."
  "risenlighten.lasvsim.simulation_task_kra"
  "tos.api.simulation.v2.GetLaneReq\032I.risen"
  "lighten.lasvsim.simulation_task_kratos.a"
  "pi.simulation.v2.GetLaneRes\022\253\001\n\013GetJunct"
  "ion\022M.risenlighten.lasvsim.simulation_ta"
  "sk_kratos.api.simulation.v2.GetJunctionR"
  "eq\032M.risenlighten.lasvsim.simulation_tas"
  "k_kratos.api.simulation.v2.GetJunctionRe"
  "s\022\250\001\n\nGetSegment\022L.risenlighten.lasvsim."
  "simulation_task_kratos.api.simulation.v2"
  ".GetSegmentReq\032L.risenlighten.lasvsim.si"
  "mulation_task_kratos.api.simulation.v2.G"
  "etSegmentResBJZHgit.risenlighten.com/las"
  "vsim/simulation_task_kratos/api/simulati"
  "on/v2;v2b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_deps[2] = {
  &::descriptor_table_google_2fapi_2ffield_5fbehavior_2eproto,
  &::descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fhdmap_2eproto,
};
static ::_pbi::once_flag descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto = {
    false, false, 8736, descriptor_table_protodef_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto,
    "risenlighten/lasvsim/simulation_task_kratos/api/simulation/v2/simulation.proto",
    &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once, descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_deps, 2, 44,
    schemas, file_default_instances, TableStruct_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto::offsets,
    file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto, file_level_enum_descriptors_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto,
    file_level_service_descriptors_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter() {
  return &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto(&descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto);
namespace risenlighten {
namespace lasvsim {
namespace simulation_task_kratos {
namespace api {
namespace simulation {
namespace v2 {

// ===================================================================

class ErrorMsg::_Internal {
 public:
};

ErrorMsg::ErrorMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg)
}
ErrorMsg::ErrorMsg(const ErrorMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ErrorMsg* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.msg_){}
    , decltype(_impl_.code_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg().empty()) {
    _this->_impl_.msg_.Set(from._internal_msg(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.code_ = from._impl_.code_;
  // @@protoc_insertion_point(copy_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg)
}

inline void ErrorMsg::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.msg_){}
    , decltype(_impl_.code_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ErrorMsg::~ErrorMsg() {
  // @@protoc_insertion_point(destructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ErrorMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.msg_.Destroy();
}

void ErrorMsg::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ErrorMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.msg_.ClearToEmpty();
  _impl_.code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ErrorMsg::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg.msg"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ErrorMsg::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->_internal_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (!this->_internal_msg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg)
  return target;
}

size_t ErrorMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (!this->_internal_msg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 1;
  if (this->_internal_code() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ErrorMsg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ErrorMsg::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ErrorMsg::GetClassData() const { return &_class_data_; }


void ErrorMsg::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ErrorMsg*>(&to_msg);
  auto& from = static_cast<const ErrorMsg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_msg().empty()) {
    _this->_internal_set_msg(from._internal_msg());
  }
  if (from._internal_code() != 0) {
    _this->_internal_set_code(from._internal_code());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ErrorMsg::CopyFrom(const ErrorMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ErrorMsg::IsInitialized() const {
  return true;
}

void ErrorMsg::InternalSwap(ErrorMsg* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.msg_, lhs_arena,
      &other->_impl_.msg_, rhs_arena
  );
  swap(_impl_.code_, other->_impl_.code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ErrorMsg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[0]);
}

// ===================================================================

class BaseInfo::_Internal {
 public:
};

BaseInfo::BaseInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.BaseInfo)
}
BaseInfo::BaseInfo(const BaseInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BaseInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.length_){}
    , decltype(_impl_.width_){}
    , decltype(_impl_.height_){}
    , decltype(_impl_.weight_){}
    , decltype(_impl_.max_dec_){}
    , decltype(_impl_.max_acc_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.length_, &from._impl_.length_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.max_acc_) -
    reinterpret_cast<char*>(&_impl_.length_)) + sizeof(_impl_.max_acc_));
  // @@protoc_insertion_point(copy_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.BaseInfo)
}

inline void BaseInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.length_){0}
    , decltype(_impl_.width_){0}
    , decltype(_impl_.height_){0}
    , decltype(_impl_.weight_){0}
    , decltype(_impl_.max_dec_){0}
    , decltype(_impl_.max_acc_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

BaseInfo::~BaseInfo() {
  // @@protoc_insertion_point(destructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.BaseInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BaseInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BaseInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BaseInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.BaseInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.max_acc_) -
      reinterpret_cast<char*>(&_impl_.length_)) + sizeof(_impl_.max_acc_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BaseInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // double Length = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _impl_.length_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // double Width = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          _impl_.width_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // double Height = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 25)) {
          _impl_.height_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // double Weight = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 33)) {
          _impl_.weight_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // double max_dec = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 41)) {
          _impl_.max_dec_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // double max_acc = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 49)) {
          _impl_.max_acc_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BaseInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.BaseInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // double Length = 1;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_length = this->_internal_length();
  uint64_t raw_length;
  memcpy(&raw_length, &tmp_length, sizeof(tmp_length));
  if (raw_length != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(1, this->_internal_length(), target);
  }

  // double Width = 2;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_width = this->_internal_width();
  uint64_t raw_width;
  memcpy(&raw_width, &tmp_width, sizeof(tmp_width));
  if (raw_width != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(2, this->_internal_width(), target);
  }

  // double Height = 3;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_height = this->_internal_height();
  uint64_t raw_height;
  memcpy(&raw_height, &tmp_height, sizeof(tmp_height));
  if (raw_height != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(3, this->_internal_height(), target);
  }

  // double Weight = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_weight = this->_internal_weight();
  uint64_t raw_weight;
  memcpy(&raw_weight, &tmp_weight, sizeof(tmp_weight));
  if (raw_weight != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(4, this->_internal_weight(), target);
  }

  // double max_dec = 5;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_max_dec = this->_internal_max_dec();
  uint64_t raw_max_dec;
  memcpy(&raw_max_dec, &tmp_max_dec, sizeof(tmp_max_dec));
  if (raw_max_dec != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(5, this->_internal_max_dec(), target);
  }

  // double max_acc = 6;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_max_acc = this->_internal_max_acc();
  uint64_t raw_max_acc;
  memcpy(&raw_max_acc, &tmp_max_acc, sizeof(tmp_max_acc));
  if (raw_max_acc != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(6, this->_internal_max_acc(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.BaseInfo)
  return target;
}

size_t BaseInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.BaseInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double Length = 1;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_length = this->_internal_length();
  uint64_t raw_length;
  memcpy(&raw_length, &tmp_length, sizeof(tmp_length));
  if (raw_length != 0) {
    total_size += 1 + 8;
  }

  // double Width = 2;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_width = this->_internal_width();
  uint64_t raw_width;
  memcpy(&raw_width, &tmp_width, sizeof(tmp_width));
  if (raw_width != 0) {
    total_size += 1 + 8;
  }

  // double Height = 3;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_height = this->_internal_height();
  uint64_t raw_height;
  memcpy(&raw_height, &tmp_height, sizeof(tmp_height));
  if (raw_height != 0) {
    total_size += 1 + 8;
  }

  // double Weight = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_weight = this->_internal_weight();
  uint64_t raw_weight;
  memcpy(&raw_weight, &tmp_weight, sizeof(tmp_weight));
  if (raw_weight != 0) {
    total_size += 1 + 8;
  }

  // double max_dec = 5;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_max_dec = this->_internal_max_dec();
  uint64_t raw_max_dec;
  memcpy(&raw_max_dec, &tmp_max_dec, sizeof(tmp_max_dec));
  if (raw_max_dec != 0) {
    total_size += 1 + 8;
  }

  // double max_acc = 6;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_max_acc = this->_internal_max_acc();
  uint64_t raw_max_acc;
  memcpy(&raw_max_acc, &tmp_max_acc, sizeof(tmp_max_acc));
  if (raw_max_acc != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BaseInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BaseInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BaseInfo::GetClassData() const { return &_class_data_; }


void BaseInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BaseInfo*>(&to_msg);
  auto& from = static_cast<const BaseInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.BaseInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_length = from._internal_length();
  uint64_t raw_length;
  memcpy(&raw_length, &tmp_length, sizeof(tmp_length));
  if (raw_length != 0) {
    _this->_internal_set_length(from._internal_length());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_width = from._internal_width();
  uint64_t raw_width;
  memcpy(&raw_width, &tmp_width, sizeof(tmp_width));
  if (raw_width != 0) {
    _this->_internal_set_width(from._internal_width());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_height = from._internal_height();
  uint64_t raw_height;
  memcpy(&raw_height, &tmp_height, sizeof(tmp_height));
  if (raw_height != 0) {
    _this->_internal_set_height(from._internal_height());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_weight = from._internal_weight();
  uint64_t raw_weight;
  memcpy(&raw_weight, &tmp_weight, sizeof(tmp_weight));
  if (raw_weight != 0) {
    _this->_internal_set_weight(from._internal_weight());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_max_dec = from._internal_max_dec();
  uint64_t raw_max_dec;
  memcpy(&raw_max_dec, &tmp_max_dec, sizeof(tmp_max_dec));
  if (raw_max_dec != 0) {
    _this->_internal_set_max_dec(from._internal_max_dec());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_max_acc = from._internal_max_acc();
  uint64_t raw_max_acc;
  memcpy(&raw_max_acc, &tmp_max_acc, sizeof(tmp_max_acc));
  if (raw_max_acc != 0) {
    _this->_internal_set_max_acc(from._internal_max_acc());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BaseInfo::CopyFrom(const BaseInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.BaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseInfo::IsInitialized() const {
  return true;
}

void BaseInfo::InternalSwap(BaseInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BaseInfo, _impl_.max_acc_)
      + sizeof(BaseInfo::_impl_.max_acc_)
      - PROTOBUF_FIELD_OFFSET(BaseInfo, _impl_.length_)>(
          reinterpret_cast<char*>(&_impl_.length_),
          reinterpret_cast<char*>(&other->_impl_.length_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BaseInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[1]);
}

// ===================================================================

class Position::_Internal {
 public:
  static const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Point& point(const Position* msg);
};

const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Point&
Position::_Internal::point(const Position* msg) {
  return *msg->_impl_.point_;
}
void Position::clear_point() {
  if (GetArenaForAllocation() == nullptr && _impl_.point_ != nullptr) {
    delete _impl_.point_;
  }
  _impl_.point_ = nullptr;
}
Position::Position(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Position)
}
Position::Position(const Position& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Position* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.link_id_){}
    , decltype(_impl_.lane_id_){}
    , decltype(_impl_.segment_id_){}
    , decltype(_impl_.junction_id_){}
    , decltype(_impl_.point_){nullptr}
    , decltype(_impl_.phi_){}
    , decltype(_impl_.dis_to_link_end_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.link_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.link_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_link_id().empty()) {
    _this->_impl_.link_id_.Set(from._internal_link_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.lane_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.lane_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_lane_id().empty()) {
    _this->_impl_.lane_id_.Set(from._internal_lane_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.segment_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.segment_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_segment_id().empty()) {
    _this->_impl_.segment_id_.Set(from._internal_segment_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.junction_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.junction_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_junction_id().empty()) {
    _this->_impl_.junction_id_.Set(from._internal_junction_id(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_point()) {
    _this->_impl_.point_ = new ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Point(*from._impl_.point_);
  }
  ::memcpy(&_impl_.phi_, &from._impl_.phi_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.dis_to_link_end_) -
    reinterpret_cast<char*>(&_impl_.phi_)) + sizeof(_impl_.dis_to_link_end_));
  // @@protoc_insertion_point(copy_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Position)
}

inline void Position::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.link_id_){}
    , decltype(_impl_.lane_id_){}
    , decltype(_impl_.segment_id_){}
    , decltype(_impl_.junction_id_){}
    , decltype(_impl_.point_){nullptr}
    , decltype(_impl_.phi_){0}
    , decltype(_impl_.dis_to_link_end_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.link_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.link_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.lane_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.lane_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.segment_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.segment_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.junction_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.junction_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Position::~Position() {
  // @@protoc_insertion_point(destructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Position)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Position::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.link_id_.Destroy();
  _impl_.lane_id_.Destroy();
  _impl_.segment_id_.Destroy();
  _impl_.junction_id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.point_;
}

void Position::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Position::Clear() {
// @@protoc_insertion_point(message_clear_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Position)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.link_id_.ClearToEmpty();
  _impl_.lane_id_.ClearToEmpty();
  _impl_.segment_id_.ClearToEmpty();
  _impl_.junction_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.point_ != nullptr) {
    delete _impl_.point_;
  }
  _impl_.point_ = nullptr;
  ::memset(&_impl_.phi_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.dis_to_link_end_) -
      reinterpret_cast<char*>(&_impl_.phi_)) + sizeof(_impl_.dis_to_link_end_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Position::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Point point = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_point(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // double phi = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          _impl_.phi_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // string link_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_link_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Position.link_id"));
        } else
          goto handle_unusual;
        continue;
      // double dis_to_link_end = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 33)) {
          _impl_.dis_to_link_end_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // string lane_id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_lane_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Position.lane_id"));
        } else
          goto handle_unusual;
        continue;
      // string segment_id = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_segment_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Position.segment_id"));
        } else
          goto handle_unusual;
        continue;
      // string junction_id = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_junction_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Position.junction_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Position::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Position)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Point point = 1;
  if (this->_internal_has_point()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::point(this),
        _Internal::point(this).GetCachedSize(), target, stream);
  }

  // double phi = 2;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_phi = this->_internal_phi();
  uint64_t raw_phi;
  memcpy(&raw_phi, &tmp_phi, sizeof(tmp_phi));
  if (raw_phi != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(2, this->_internal_phi(), target);
  }

  // string link_id = 3;
  if (!this->_internal_link_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_link_id().data(), static_cast<int>(this->_internal_link_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Position.link_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_link_id(), target);
  }

  // double dis_to_link_end = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_dis_to_link_end = this->_internal_dis_to_link_end();
  uint64_t raw_dis_to_link_end;
  memcpy(&raw_dis_to_link_end, &tmp_dis_to_link_end, sizeof(tmp_dis_to_link_end));
  if (raw_dis_to_link_end != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(4, this->_internal_dis_to_link_end(), target);
  }

  // string lane_id = 5;
  if (!this->_internal_lane_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_lane_id().data(), static_cast<int>(this->_internal_lane_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Position.lane_id");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_lane_id(), target);
  }

  // string segment_id = 6;
  if (!this->_internal_segment_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_segment_id().data(), static_cast<int>(this->_internal_segment_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Position.segment_id");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_segment_id(), target);
  }

  // string junction_id = 7;
  if (!this->_internal_junction_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_junction_id().data(), static_cast<int>(this->_internal_junction_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Position.junction_id");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_junction_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Position)
  return target;
}

size_t Position::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Position)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string link_id = 3;
  if (!this->_internal_link_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_link_id());
  }

  // string lane_id = 5;
  if (!this->_internal_lane_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_lane_id());
  }

  // string segment_id = 6;
  if (!this->_internal_segment_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_segment_id());
  }

  // string junction_id = 7;
  if (!this->_internal_junction_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_junction_id());
  }

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Point point = 1;
  if (this->_internal_has_point()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.point_);
  }

  // double phi = 2;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_phi = this->_internal_phi();
  uint64_t raw_phi;
  memcpy(&raw_phi, &tmp_phi, sizeof(tmp_phi));
  if (raw_phi != 0) {
    total_size += 1 + 8;
  }

  // double dis_to_link_end = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_dis_to_link_end = this->_internal_dis_to_link_end();
  uint64_t raw_dis_to_link_end;
  memcpy(&raw_dis_to_link_end, &tmp_dis_to_link_end, sizeof(tmp_dis_to_link_end));
  if (raw_dis_to_link_end != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Position::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Position::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Position::GetClassData() const { return &_class_data_; }


void Position::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Position*>(&to_msg);
  auto& from = static_cast<const Position&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Position)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_link_id().empty()) {
    _this->_internal_set_link_id(from._internal_link_id());
  }
  if (!from._internal_lane_id().empty()) {
    _this->_internal_set_lane_id(from._internal_lane_id());
  }
  if (!from._internal_segment_id().empty()) {
    _this->_internal_set_segment_id(from._internal_segment_id());
  }
  if (!from._internal_junction_id().empty()) {
    _this->_internal_set_junction_id(from._internal_junction_id());
  }
  if (from._internal_has_point()) {
    _this->_internal_mutable_point()->::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Point::MergeFrom(
        from._internal_point());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_phi = from._internal_phi();
  uint64_t raw_phi;
  memcpy(&raw_phi, &tmp_phi, sizeof(tmp_phi));
  if (raw_phi != 0) {
    _this->_internal_set_phi(from._internal_phi());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_dis_to_link_end = from._internal_dis_to_link_end();
  uint64_t raw_dis_to_link_end;
  memcpy(&raw_dis_to_link_end, &tmp_dis_to_link_end, sizeof(tmp_dis_to_link_end));
  if (raw_dis_to_link_end != 0) {
    _this->_internal_set_dis_to_link_end(from._internal_dis_to_link_end());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Position::CopyFrom(const Position& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Position::IsInitialized() const {
  return true;
}

void Position::InternalSwap(Position* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.link_id_, lhs_arena,
      &other->_impl_.link_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.lane_id_, lhs_arena,
      &other->_impl_.lane_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.segment_id_, lhs_arena,
      &other->_impl_.segment_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.junction_id_, lhs_arena,
      &other->_impl_.junction_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Position, _impl_.dis_to_link_end_)
      + sizeof(Position::_impl_.dis_to_link_end_)
      - PROTOBUF_FIELD_OFFSET(Position, _impl_.point_)>(
          reinterpret_cast<char*>(&_impl_.point_),
          reinterpret_cast<char*>(&other->_impl_.point_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Position::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[2]);
}

// ===================================================================

class MovingInfo::_Internal {
 public:
  static const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Position& position(const MovingInfo* msg);
};

const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Position&
MovingInfo::_Internal::position(const MovingInfo* msg) {
  return *msg->_impl_.position_;
}
MovingInfo::MovingInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.MovingInfo)
}
MovingInfo::MovingInfo(const MovingInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MovingInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.position_){nullptr}
    , decltype(_impl_.timestamp_){}
    , decltype(_impl_.u_){}
    , decltype(_impl_.lon_acc_){}
    , decltype(_impl_.v_){}
    , decltype(_impl_.lat_acc_){}
    , decltype(_impl_.w_){}
    , decltype(_impl_.w_acc_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_position()) {
    _this->_impl_.position_ = new ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Position(*from._impl_.position_);
  }
  ::memcpy(&_impl_.timestamp_, &from._impl_.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.w_acc_) -
    reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.w_acc_));
  // @@protoc_insertion_point(copy_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.MovingInfo)
}

inline void MovingInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.position_){nullptr}
    , decltype(_impl_.timestamp_){int64_t{0}}
    , decltype(_impl_.u_){0}
    , decltype(_impl_.lon_acc_){0}
    , decltype(_impl_.v_){0}
    , decltype(_impl_.lat_acc_){0}
    , decltype(_impl_.w_){0}
    , decltype(_impl_.w_acc_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MovingInfo::~MovingInfo() {
  // @@protoc_insertion_point(destructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.MovingInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MovingInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.position_;
}

void MovingInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MovingInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.MovingInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.position_ != nullptr) {
    delete _impl_.position_;
  }
  _impl_.position_ = nullptr;
  ::memset(&_impl_.timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.w_acc_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.w_acc_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MovingInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Position position = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_position(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 timestamp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // double u = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 25)) {
          _impl_.u_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // double lon_acc = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 33)) {
          _impl_.lon_acc_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // double v = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 41)) {
          _impl_.v_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // double lat_acc = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 49)) {
          _impl_.lat_acc_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // double w = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 57)) {
          _impl_.w_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // double w_acc = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 65)) {
          _impl_.w_acc_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MovingInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.MovingInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Position position = 1;
  if (this->_internal_has_position()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::position(this),
        _Internal::position(this).GetCachedSize(), target, stream);
  }

  // int64 timestamp = 2;
  if (this->_internal_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_timestamp(), target);
  }

  // double u = 3;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_u = this->_internal_u();
  uint64_t raw_u;
  memcpy(&raw_u, &tmp_u, sizeof(tmp_u));
  if (raw_u != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(3, this->_internal_u(), target);
  }

  // double lon_acc = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_lon_acc = this->_internal_lon_acc();
  uint64_t raw_lon_acc;
  memcpy(&raw_lon_acc, &tmp_lon_acc, sizeof(tmp_lon_acc));
  if (raw_lon_acc != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(4, this->_internal_lon_acc(), target);
  }

  // double v = 5;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_v = this->_internal_v();
  uint64_t raw_v;
  memcpy(&raw_v, &tmp_v, sizeof(tmp_v));
  if (raw_v != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(5, this->_internal_v(), target);
  }

  // double lat_acc = 6;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_lat_acc = this->_internal_lat_acc();
  uint64_t raw_lat_acc;
  memcpy(&raw_lat_acc, &tmp_lat_acc, sizeof(tmp_lat_acc));
  if (raw_lat_acc != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(6, this->_internal_lat_acc(), target);
  }

  // double w = 7;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_w = this->_internal_w();
  uint64_t raw_w;
  memcpy(&raw_w, &tmp_w, sizeof(tmp_w));
  if (raw_w != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(7, this->_internal_w(), target);
  }

  // double w_acc = 8;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_w_acc = this->_internal_w_acc();
  uint64_t raw_w_acc;
  memcpy(&raw_w_acc, &tmp_w_acc, sizeof(tmp_w_acc));
  if (raw_w_acc != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(8, this->_internal_w_acc(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.MovingInfo)
  return target;
}

size_t MovingInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.MovingInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Position position = 1;
  if (this->_internal_has_position()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.position_);
  }

  // int64 timestamp = 2;
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_timestamp());
  }

  // double u = 3;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_u = this->_internal_u();
  uint64_t raw_u;
  memcpy(&raw_u, &tmp_u, sizeof(tmp_u));
  if (raw_u != 0) {
    total_size += 1 + 8;
  }

  // double lon_acc = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_lon_acc = this->_internal_lon_acc();
  uint64_t raw_lon_acc;
  memcpy(&raw_lon_acc, &tmp_lon_acc, sizeof(tmp_lon_acc));
  if (raw_lon_acc != 0) {
    total_size += 1 + 8;
  }

  // double v = 5;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_v = this->_internal_v();
  uint64_t raw_v;
  memcpy(&raw_v, &tmp_v, sizeof(tmp_v));
  if (raw_v != 0) {
    total_size += 1 + 8;
  }

  // double lat_acc = 6;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_lat_acc = this->_internal_lat_acc();
  uint64_t raw_lat_acc;
  memcpy(&raw_lat_acc, &tmp_lat_acc, sizeof(tmp_lat_acc));
  if (raw_lat_acc != 0) {
    total_size += 1 + 8;
  }

  // double w = 7;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_w = this->_internal_w();
  uint64_t raw_w;
  memcpy(&raw_w, &tmp_w, sizeof(tmp_w));
  if (raw_w != 0) {
    total_size += 1 + 8;
  }

  // double w_acc = 8;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_w_acc = this->_internal_w_acc();
  uint64_t raw_w_acc;
  memcpy(&raw_w_acc, &tmp_w_acc, sizeof(tmp_w_acc));
  if (raw_w_acc != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MovingInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MovingInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MovingInfo::GetClassData() const { return &_class_data_; }


void MovingInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MovingInfo*>(&to_msg);
  auto& from = static_cast<const MovingInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.MovingInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_position()) {
    _this->_internal_mutable_position()->::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Position::MergeFrom(
        from._internal_position());
  }
  if (from._internal_timestamp() != 0) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_u = from._internal_u();
  uint64_t raw_u;
  memcpy(&raw_u, &tmp_u, sizeof(tmp_u));
  if (raw_u != 0) {
    _this->_internal_set_u(from._internal_u());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_lon_acc = from._internal_lon_acc();
  uint64_t raw_lon_acc;
  memcpy(&raw_lon_acc, &tmp_lon_acc, sizeof(tmp_lon_acc));
  if (raw_lon_acc != 0) {
    _this->_internal_set_lon_acc(from._internal_lon_acc());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_v = from._internal_v();
  uint64_t raw_v;
  memcpy(&raw_v, &tmp_v, sizeof(tmp_v));
  if (raw_v != 0) {
    _this->_internal_set_v(from._internal_v());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_lat_acc = from._internal_lat_acc();
  uint64_t raw_lat_acc;
  memcpy(&raw_lat_acc, &tmp_lat_acc, sizeof(tmp_lat_acc));
  if (raw_lat_acc != 0) {
    _this->_internal_set_lat_acc(from._internal_lat_acc());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_w = from._internal_w();
  uint64_t raw_w;
  memcpy(&raw_w, &tmp_w, sizeof(tmp_w));
  if (raw_w != 0) {
    _this->_internal_set_w(from._internal_w());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_w_acc = from._internal_w_acc();
  uint64_t raw_w_acc;
  memcpy(&raw_w_acc, &tmp_w_acc, sizeof(tmp_w_acc));
  if (raw_w_acc != 0) {
    _this->_internal_set_w_acc(from._internal_w_acc());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MovingInfo::CopyFrom(const MovingInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.MovingInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MovingInfo::IsInitialized() const {
  return true;
}

void MovingInfo::InternalSwap(MovingInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MovingInfo, _impl_.w_acc_)
      + sizeof(MovingInfo::_impl_.w_acc_)
      - PROTOBUF_FIELD_OFFSET(MovingInfo, _impl_.position_)>(
          reinterpret_cast<char*>(&_impl_.position_),
          reinterpret_cast<char*>(&other->_impl_.position_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MovingInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[3]);
}

// ===================================================================

class MovingObj::_Internal {
 public:
  static const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::BaseInfo& base_info(const MovingObj* msg);
  static const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::MovingInfo& moving_info(const MovingObj* msg);
};

const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::BaseInfo&
MovingObj::_Internal::base_info(const MovingObj* msg) {
  return *msg->_impl_.base_info_;
}
const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::MovingInfo&
MovingObj::_Internal::moving_info(const MovingObj* msg) {
  return *msg->_impl_.moving_info_;
}
MovingObj::MovingObj(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.MovingObj)
}
MovingObj::MovingObj(const MovingObj& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MovingObj* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.type_){}
    , decltype(_impl_.base_info_){nullptr}
    , decltype(_impl_.moving_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_type().empty()) {
    _this->_impl_.type_.Set(from._internal_type(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_base_info()) {
    _this->_impl_.base_info_ = new ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::BaseInfo(*from._impl_.base_info_);
  }
  if (from._internal_has_moving_info()) {
    _this->_impl_.moving_info_ = new ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::MovingInfo(*from._impl_.moving_info_);
  }
  // @@protoc_insertion_point(copy_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.MovingObj)
}

inline void MovingObj::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.type_){}
    , decltype(_impl_.base_info_){nullptr}
    , decltype(_impl_.moving_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MovingObj::~MovingObj() {
  // @@protoc_insertion_point(destructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.MovingObj)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MovingObj::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
  _impl_.type_.Destroy();
  if (this != internal_default_instance()) delete _impl_.base_info_;
  if (this != internal_default_instance()) delete _impl_.moving_info_;
}

void MovingObj::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MovingObj::Clear() {
// @@protoc_insertion_point(message_clear_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.MovingObj)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.type_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.base_info_ != nullptr) {
    delete _impl_.base_info_;
  }
  _impl_.base_info_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.moving_info_ != nullptr) {
    delete _impl_.moving_info_;
  }
  _impl_.moving_info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MovingObj::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.MovingObj.id"));
        } else
          goto handle_unusual;
        continue;
      // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.BaseInfo base_info = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_base_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.MovingInfo moving_info = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_moving_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.MovingObj.type"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MovingObj::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.MovingObj)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.MovingObj.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.BaseInfo base_info = 2;
  if (this->_internal_has_base_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::base_info(this),
        _Internal::base_info(this).GetCachedSize(), target, stream);
  }

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.MovingInfo moving_info = 3;
  if (this->_internal_has_moving_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::moving_info(this),
        _Internal::moving_info(this).GetCachedSize(), target, stream);
  }

  // string type = 4;
  if (!this->_internal_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.MovingObj.type");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.MovingObj)
  return target;
}

size_t MovingObj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.MovingObj)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string type = 4;
  if (!this->_internal_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.BaseInfo base_info = 2;
  if (this->_internal_has_base_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_info_);
  }

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.MovingInfo moving_info = 3;
  if (this->_internal_has_moving_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.moving_info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MovingObj::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MovingObj::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MovingObj::GetClassData() const { return &_class_data_; }


void MovingObj::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MovingObj*>(&to_msg);
  auto& from = static_cast<const MovingObj&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.MovingObj)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  if (from._internal_has_base_info()) {
    _this->_internal_mutable_base_info()->::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::BaseInfo::MergeFrom(
        from._internal_base_info());
  }
  if (from._internal_has_moving_info()) {
    _this->_internal_mutable_moving_info()->::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::MovingInfo::MergeFrom(
        from._internal_moving_info());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MovingObj::CopyFrom(const MovingObj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.MovingObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MovingObj::IsInitialized() const {
  return true;
}

void MovingObj::InternalSwap(MovingObj* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.type_, lhs_arena,
      &other->_impl_.type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MovingObj, _impl_.moving_info_)
      + sizeof(MovingObj::_impl_.moving_info_)
      - PROTOBUF_FIELD_OFFSET(MovingObj, _impl_.base_info_)>(
          reinterpret_cast<char*>(&_impl_.base_info_),
          reinterpret_cast<char*>(&other->_impl_.base_info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MovingObj::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[4]);
}

// ===================================================================

class Vehicle::_Internal {
 public:
  static const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::MovingObj& info(const Vehicle* msg);
};

const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::MovingObj&
Vehicle::_Internal::info(const Vehicle* msg) {
  return *msg->_impl_.info_;
}
Vehicle::Vehicle(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Vehicle)
}
Vehicle::Vehicle(const Vehicle& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Vehicle* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.around_moving_objs_){from._impl_.around_moving_objs_}
    , decltype(_impl_.info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_info()) {
    _this->_impl_.info_ = new ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::MovingObj(*from._impl_.info_);
  }
  // @@protoc_insertion_point(copy_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Vehicle)
}

inline void Vehicle::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.around_moving_objs_){arena}
    , decltype(_impl_.info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Vehicle::~Vehicle() {
  // @@protoc_insertion_point(destructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Vehicle)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Vehicle::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.around_moving_objs_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.info_;
}

void Vehicle::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Vehicle::Clear() {
// @@protoc_insertion_point(message_clear_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Vehicle)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.around_moving_objs_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.info_ != nullptr) {
    delete _impl_.info_;
  }
  _impl_.info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Vehicle::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.MovingObj info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.MovingObj around_moving_objs = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_around_moving_objs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Vehicle::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Vehicle)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.MovingObj info = 1;
  if (this->_internal_has_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::info(this),
        _Internal::info(this).GetCachedSize(), target, stream);
  }

  // repeated .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.MovingObj around_moving_objs = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_around_moving_objs_size()); i < n; i++) {
    const auto& repfield = this->_internal_around_moving_objs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Vehicle)
  return target;
}

size_t Vehicle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Vehicle)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.MovingObj around_moving_objs = 2;
  total_size += 1UL * this->_internal_around_moving_objs_size();
  for (const auto& msg : this->_impl_.around_moving_objs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.MovingObj info = 1;
  if (this->_internal_has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Vehicle::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Vehicle::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Vehicle::GetClassData() const { return &_class_data_; }


void Vehicle::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Vehicle*>(&to_msg);
  auto& from = static_cast<const Vehicle&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Vehicle)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.around_moving_objs_.MergeFrom(from._impl_.around_moving_objs_);
  if (from._internal_has_info()) {
    _this->_internal_mutable_info()->::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::MovingObj::MergeFrom(
        from._internal_info());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Vehicle::CopyFrom(const Vehicle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Vehicle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vehicle::IsInitialized() const {
  return true;
}

void Vehicle::InternalSwap(Vehicle* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.around_moving_objs_.InternalSwap(&other->_impl_.around_moving_objs_);
  swap(_impl_.info_, other->_impl_.info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Vehicle::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[5]);
}

// ===================================================================

class VehicleControl::_Internal {
 public:
};

VehicleControl::VehicleControl(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.VehicleControl)
}
VehicleControl::VehicleControl(const VehicleControl& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  VehicleControl* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.lon_acc_){}
    , decltype(_impl_.ste_wheel_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.lon_acc_, &from._impl_.lon_acc_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.ste_wheel_) -
    reinterpret_cast<char*>(&_impl_.lon_acc_)) + sizeof(_impl_.ste_wheel_));
  // @@protoc_insertion_point(copy_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.VehicleControl)
}

inline void VehicleControl::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.lon_acc_){0}
    , decltype(_impl_.ste_wheel_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

VehicleControl::~VehicleControl() {
  // @@protoc_insertion_point(destructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.VehicleControl)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void VehicleControl::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void VehicleControl::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void VehicleControl::Clear() {
// @@protoc_insertion_point(message_clear_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.VehicleControl)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.lon_acc_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.ste_wheel_) -
      reinterpret_cast<char*>(&_impl_.lon_acc_)) + sizeof(_impl_.ste_wheel_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VehicleControl::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // double lon_acc = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _impl_.lon_acc_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // double ste_wheel = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          _impl_.ste_wheel_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* VehicleControl::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.VehicleControl)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // double lon_acc = 1;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_lon_acc = this->_internal_lon_acc();
  uint64_t raw_lon_acc;
  memcpy(&raw_lon_acc, &tmp_lon_acc, sizeof(tmp_lon_acc));
  if (raw_lon_acc != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(1, this->_internal_lon_acc(), target);
  }

  // double ste_wheel = 2;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_ste_wheel = this->_internal_ste_wheel();
  uint64_t raw_ste_wheel;
  memcpy(&raw_ste_wheel, &tmp_ste_wheel, sizeof(tmp_ste_wheel));
  if (raw_ste_wheel != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(2, this->_internal_ste_wheel(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.VehicleControl)
  return target;
}

size_t VehicleControl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.VehicleControl)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double lon_acc = 1;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_lon_acc = this->_internal_lon_acc();
  uint64_t raw_lon_acc;
  memcpy(&raw_lon_acc, &tmp_lon_acc, sizeof(tmp_lon_acc));
  if (raw_lon_acc != 0) {
    total_size += 1 + 8;
  }

  // double ste_wheel = 2;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_ste_wheel = this->_internal_ste_wheel();
  uint64_t raw_ste_wheel;
  memcpy(&raw_ste_wheel, &tmp_ste_wheel, sizeof(tmp_ste_wheel));
  if (raw_ste_wheel != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VehicleControl::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    VehicleControl::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VehicleControl::GetClassData() const { return &_class_data_; }


void VehicleControl::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<VehicleControl*>(&to_msg);
  auto& from = static_cast<const VehicleControl&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.VehicleControl)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_lon_acc = from._internal_lon_acc();
  uint64_t raw_lon_acc;
  memcpy(&raw_lon_acc, &tmp_lon_acc, sizeof(tmp_lon_acc));
  if (raw_lon_acc != 0) {
    _this->_internal_set_lon_acc(from._internal_lon_acc());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_ste_wheel = from._internal_ste_wheel();
  uint64_t raw_ste_wheel;
  memcpy(&raw_ste_wheel, &tmp_ste_wheel, sizeof(tmp_ste_wheel));
  if (raw_ste_wheel != 0) {
    _this->_internal_set_ste_wheel(from._internal_ste_wheel());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VehicleControl::CopyFrom(const VehicleControl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.VehicleControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VehicleControl::IsInitialized() const {
  return true;
}

void VehicleControl::InternalSwap(VehicleControl* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VehicleControl, _impl_.ste_wheel_)
      + sizeof(VehicleControl::_impl_.ste_wheel_)
      - PROTOBUF_FIELD_OFFSET(VehicleControl, _impl_.lon_acc_)>(
          reinterpret_cast<char*>(&_impl_.lon_acc_),
          reinterpret_cast<char*>(&other->_impl_.lon_acc_));
}

::PROTOBUF_NAMESPACE_ID::Metadata VehicleControl::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[6]);
}

// ===================================================================

Map_JunctionMapEntry_DoNotUse::Map_JunctionMapEntry_DoNotUse() {}
Map_JunctionMapEntry_DoNotUse::Map_JunctionMapEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Map_JunctionMapEntry_DoNotUse::MergeFrom(const Map_JunctionMapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Map_JunctionMapEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[7]);
}

// ===================================================================

Map_SegmentMapEntry_DoNotUse::Map_SegmentMapEntry_DoNotUse() {}
Map_SegmentMapEntry_DoNotUse::Map_SegmentMapEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Map_SegmentMapEntry_DoNotUse::MergeFrom(const Map_SegmentMapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Map_SegmentMapEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[8]);
}

// ===================================================================

Map_LinkMapEntry_DoNotUse::Map_LinkMapEntry_DoNotUse() {}
Map_LinkMapEntry_DoNotUse::Map_LinkMapEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Map_LinkMapEntry_DoNotUse::MergeFrom(const Map_LinkMapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Map_LinkMapEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[9]);
}

// ===================================================================

Map_LaneMapEntry_DoNotUse::Map_LaneMapEntry_DoNotUse() {}
Map_LaneMapEntry_DoNotUse::Map_LaneMapEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Map_LaneMapEntry_DoNotUse::MergeFrom(const Map_LaneMapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Map_LaneMapEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[10]);
}

// ===================================================================

Map_CrosswalkMapEntry_DoNotUse::Map_CrosswalkMapEntry_DoNotUse() {}
Map_CrosswalkMapEntry_DoNotUse::Map_CrosswalkMapEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Map_CrosswalkMapEntry_DoNotUse::MergeFrom(const Map_CrosswalkMapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Map_CrosswalkMapEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[11]);
}

// ===================================================================

Map_StopLineMapEntry_DoNotUse::Map_StopLineMapEntry_DoNotUse() {}
Map_StopLineMapEntry_DoNotUse::Map_StopLineMapEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Map_StopLineMapEntry_DoNotUse::MergeFrom(const Map_StopLineMapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Map_StopLineMapEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[12]);
}

// ===================================================================

class Map::_Internal {
 public:
};

void Map::clear_junction_map() {
  _impl_.junction_map_.Clear();
}
void Map::clear_segment_map() {
  _impl_.segment_map_.Clear();
}
void Map::clear_link_map() {
  _impl_.link_map_.Clear();
}
void Map::clear_lane_map() {
  _impl_.lane_map_.Clear();
}
void Map::clear_crosswalk_map() {
  _impl_.crosswalk_map_.Clear();
}
void Map::clear_stop_line_map() {
  _impl_.stop_line_map_.Clear();
}
Map::Map(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &Map::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Map)
}
Map::Map(const Map& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Map* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.junction_map_)*/{}
    , /*decltype(_impl_.segment_map_)*/{}
    , /*decltype(_impl_.link_map_)*/{}
    , /*decltype(_impl_.lane_map_)*/{}
    , /*decltype(_impl_.crosswalk_map_)*/{}
    , /*decltype(_impl_.stop_line_map_)*/{}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.junction_map_.MergeFrom(from._impl_.junction_map_);
  _this->_impl_.segment_map_.MergeFrom(from._impl_.segment_map_);
  _this->_impl_.link_map_.MergeFrom(from._impl_.link_map_);
  _this->_impl_.lane_map_.MergeFrom(from._impl_.lane_map_);
  _this->_impl_.crosswalk_map_.MergeFrom(from._impl_.crosswalk_map_);
  _this->_impl_.stop_line_map_.MergeFrom(from._impl_.stop_line_map_);
  // @@protoc_insertion_point(copy_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Map)
}

inline void Map::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.junction_map_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_.segment_map_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_.link_map_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_.lane_map_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_.crosswalk_map_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_.stop_line_map_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Map::~Map() {
  // @@protoc_insertion_point(destructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Map)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void Map::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.junction_map_.Destruct();
  _impl_.junction_map_.~MapField();
  _impl_.segment_map_.Destruct();
  _impl_.segment_map_.~MapField();
  _impl_.link_map_.Destruct();
  _impl_.link_map_.~MapField();
  _impl_.lane_map_.Destruct();
  _impl_.lane_map_.~MapField();
  _impl_.crosswalk_map_.Destruct();
  _impl_.crosswalk_map_.~MapField();
  _impl_.stop_line_map_.Destruct();
  _impl_.stop_line_map_.~MapField();
}

void Map::ArenaDtor(void* object) {
  Map* _this = reinterpret_cast< Map* >(object);
  _this->_impl_.junction_map_.Destruct();
  _this->_impl_.segment_map_.Destruct();
  _this->_impl_.link_map_.Destruct();
  _this->_impl_.lane_map_.Destruct();
  _this->_impl_.crosswalk_map_.Destruct();
  _this->_impl_.stop_line_map_.Destruct();
}
void Map::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Map::Clear() {
// @@protoc_insertion_point(message_clear_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Map)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.junction_map_.Clear();
  _impl_.segment_map_.Clear();
  _impl_.link_map_.Clear();
  _impl_.lane_map_.Clear();
  _impl_.crosswalk_map_.Clear();
  _impl_.stop_line_map_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Map::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<string, .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Junction> junction_map = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.junction_map_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<string, .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Segment> segment_map = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.segment_map_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<string, .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Link> link_map = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.link_map_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<string, .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Lane> lane_map = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.lane_map_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<string, .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Crosswalk> crosswalk_map = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.crosswalk_map_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<string, .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Stopline> stop_line_map = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.stop_line_map_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Map::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Map)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Junction> junction_map = 1;
  if (!this->_internal_junction_map().empty()) {
    using MapType = ::_pb::Map<std::string, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Junction>;
    using WireHelper = Map_JunctionMapEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_junction_map();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Map.JunctionMapEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // map<string, .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Segment> segment_map = 2;
  if (!this->_internal_segment_map().empty()) {
    using MapType = ::_pb::Map<std::string, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Segment>;
    using WireHelper = Map_SegmentMapEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_segment_map();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Map.SegmentMapEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // map<string, .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Link> link_map = 3;
  if (!this->_internal_link_map().empty()) {
    using MapType = ::_pb::Map<std::string, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Link>;
    using WireHelper = Map_LinkMapEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_link_map();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Map.LinkMapEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(3, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(3, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // map<string, .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Lane> lane_map = 4;
  if (!this->_internal_lane_map().empty()) {
    using MapType = ::_pb::Map<std::string, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Lane>;
    using WireHelper = Map_LaneMapEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_lane_map();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Map.LaneMapEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // map<string, .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Crosswalk> crosswalk_map = 5;
  if (!this->_internal_crosswalk_map().empty()) {
    using MapType = ::_pb::Map<std::string, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Crosswalk>;
    using WireHelper = Map_CrosswalkMapEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_crosswalk_map();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Map.CrosswalkMapEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(5, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(5, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // map<string, .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Stopline> stop_line_map = 6;
  if (!this->_internal_stop_line_map().empty()) {
    using MapType = ::_pb::Map<std::string, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Stopline>;
    using WireHelper = Map_StopLineMapEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_stop_line_map();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Map.StopLineMapEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(6, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(6, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Map)
  return target;
}

size_t Map::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Map)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Junction> junction_map = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_junction_map_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Junction >::const_iterator
      it = this->_internal_junction_map().begin();
      it != this->_internal_junction_map().end(); ++it) {
    total_size += Map_JunctionMapEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Segment> segment_map = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_segment_map_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Segment >::const_iterator
      it = this->_internal_segment_map().begin();
      it != this->_internal_segment_map().end(); ++it) {
    total_size += Map_SegmentMapEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Link> link_map = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_link_map_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Link >::const_iterator
      it = this->_internal_link_map().begin();
      it != this->_internal_link_map().end(); ++it) {
    total_size += Map_LinkMapEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Lane> lane_map = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_lane_map_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Lane >::const_iterator
      it = this->_internal_lane_map().begin();
      it != this->_internal_lane_map().end(); ++it) {
    total_size += Map_LaneMapEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Crosswalk> crosswalk_map = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_crosswalk_map_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Crosswalk >::const_iterator
      it = this->_internal_crosswalk_map().begin();
      it != this->_internal_crosswalk_map().end(); ++it) {
    total_size += Map_CrosswalkMapEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Stopline> stop_line_map = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_stop_line_map_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Stopline >::const_iterator
      it = this->_internal_stop_line_map().begin();
      it != this->_internal_stop_line_map().end(); ++it) {
    total_size += Map_StopLineMapEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Map::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Map::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Map::GetClassData() const { return &_class_data_; }


void Map::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Map*>(&to_msg);
  auto& from = static_cast<const Map&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Map)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.junction_map_.MergeFrom(from._impl_.junction_map_);
  _this->_impl_.segment_map_.MergeFrom(from._impl_.segment_map_);
  _this->_impl_.link_map_.MergeFrom(from._impl_.link_map_);
  _this->_impl_.lane_map_.MergeFrom(from._impl_.lane_map_);
  _this->_impl_.crosswalk_map_.MergeFrom(from._impl_.crosswalk_map_);
  _this->_impl_.stop_line_map_.MergeFrom(from._impl_.stop_line_map_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Map::CopyFrom(const Map& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Map)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Map::IsInitialized() const {
  return true;
}

void Map::InternalSwap(Map* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.junction_map_.InternalSwap(&other->_impl_.junction_map_);
  _impl_.segment_map_.InternalSwap(&other->_impl_.segment_map_);
  _impl_.link_map_.InternalSwap(&other->_impl_.link_map_);
  _impl_.lane_map_.InternalSwap(&other->_impl_.lane_map_);
  _impl_.crosswalk_map_.InternalSwap(&other->_impl_.crosswalk_map_);
  _impl_.stop_line_map_.InternalSwap(&other->_impl_.stop_line_map_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Map::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[13]);
}

// ===================================================================

class StartSimulationReq::_Internal {
 public:
  static const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Position& origin(const StartSimulationReq* msg);
  static const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Position& destination(const StartSimulationReq* msg);
};

const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Position&
StartSimulationReq::_Internal::origin(const StartSimulationReq* msg) {
  return *msg->_impl_.origin_;
}
const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Position&
StartSimulationReq::_Internal::destination(const StartSimulationReq* msg) {
  return *msg->_impl_.destination_;
}
StartSimulationReq::StartSimulationReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.StartSimulationReq)
}
StartSimulationReq::StartSimulationReq(const StartSimulationReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StartSimulationReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.map_id_){}
    , decltype(_impl_.origin_){nullptr}
    , decltype(_impl_.destination_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.map_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.map_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_map_id().empty()) {
    _this->_impl_.map_id_.Set(from._internal_map_id(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_origin()) {
    _this->_impl_.origin_ = new ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Position(*from._impl_.origin_);
  }
  if (from._internal_has_destination()) {
    _this->_impl_.destination_ = new ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Position(*from._impl_.destination_);
  }
  // @@protoc_insertion_point(copy_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.StartSimulationReq)
}

inline void StartSimulationReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.map_id_){}
    , decltype(_impl_.origin_){nullptr}
    , decltype(_impl_.destination_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.map_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.map_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StartSimulationReq::~StartSimulationReq() {
  // @@protoc_insertion_point(destructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.StartSimulationReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StartSimulationReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.map_id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.origin_;
  if (this != internal_default_instance()) delete _impl_.destination_;
}

void StartSimulationReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StartSimulationReq::Clear() {
// @@protoc_insertion_point(message_clear_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.StartSimulationReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.map_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.origin_ != nullptr) {
    delete _impl_.origin_;
  }
  _impl_.origin_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.destination_ != nullptr) {
    delete _impl_.destination_;
  }
  _impl_.destination_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartSimulationReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string map_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_map_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.StartSimulationReq.map_id"));
        } else
          goto handle_unusual;
        continue;
      // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Position origin = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_origin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Position destination = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_destination(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StartSimulationReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.StartSimulationReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string map_id = 1;
  if (!this->_internal_map_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_map_id().data(), static_cast<int>(this->_internal_map_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.StartSimulationReq.map_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_map_id(), target);
  }

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Position origin = 2;
  if (this->_internal_has_origin()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::origin(this),
        _Internal::origin(this).GetCachedSize(), target, stream);
  }

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Position destination = 3;
  if (this->_internal_has_destination()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::destination(this),
        _Internal::destination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.StartSimulationReq)
  return target;
}

size_t StartSimulationReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.StartSimulationReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string map_id = 1;
  if (!this->_internal_map_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_map_id());
  }

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Position origin = 2;
  if (this->_internal_has_origin()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.origin_);
  }

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Position destination = 3;
  if (this->_internal_has_destination()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.destination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StartSimulationReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StartSimulationReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StartSimulationReq::GetClassData() const { return &_class_data_; }


void StartSimulationReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StartSimulationReq*>(&to_msg);
  auto& from = static_cast<const StartSimulationReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.StartSimulationReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_map_id().empty()) {
    _this->_internal_set_map_id(from._internal_map_id());
  }
  if (from._internal_has_origin()) {
    _this->_internal_mutable_origin()->::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Position::MergeFrom(
        from._internal_origin());
  }
  if (from._internal_has_destination()) {
    _this->_internal_mutable_destination()->::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Position::MergeFrom(
        from._internal_destination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StartSimulationReq::CopyFrom(const StartSimulationReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.StartSimulationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartSimulationReq::IsInitialized() const {
  return true;
}

void StartSimulationReq::InternalSwap(StartSimulationReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.map_id_, lhs_arena,
      &other->_impl_.map_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StartSimulationReq, _impl_.destination_)
      + sizeof(StartSimulationReq::_impl_.destination_)
      - PROTOBUF_FIELD_OFFSET(StartSimulationReq, _impl_.origin_)>(
          reinterpret_cast<char*>(&_impl_.origin_),
          reinterpret_cast<char*>(&other->_impl_.origin_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StartSimulationReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[14]);
}

// ===================================================================

class StartSimulationRes::_Internal {
 public:
  static const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg& error(const StartSimulationRes* msg);
};

const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg&
StartSimulationRes::_Internal::error(const StartSimulationRes* msg) {
  return *msg->_impl_.error_;
}
StartSimulationRes::StartSimulationRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.StartSimulationRes)
}
StartSimulationRes::StartSimulationRes(const StartSimulationRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StartSimulationRes* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.simulation_id_){}
    , decltype(_impl_.error_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.simulation_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.simulation_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_simulation_id().empty()) {
    _this->_impl_.simulation_id_.Set(from._internal_simulation_id(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_error()) {
    _this->_impl_.error_ = new ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg(*from._impl_.error_);
  }
  // @@protoc_insertion_point(copy_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.StartSimulationRes)
}

inline void StartSimulationRes::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.simulation_id_){}
    , decltype(_impl_.error_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.simulation_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.simulation_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StartSimulationRes::~StartSimulationRes() {
  // @@protoc_insertion_point(destructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.StartSimulationRes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StartSimulationRes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.simulation_id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.error_;
}

void StartSimulationRes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StartSimulationRes::Clear() {
// @@protoc_insertion_point(message_clear_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.StartSimulationRes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.simulation_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.error_ != nullptr) {
    delete _impl_.error_;
  }
  _impl_.error_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartSimulationRes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string simulation_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_simulation_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.StartSimulationRes.simulation_id"));
        } else
          goto handle_unusual;
        continue;
      // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg error = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StartSimulationRes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.StartSimulationRes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string simulation_id = 1;
  if (!this->_internal_simulation_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_simulation_id().data(), static_cast<int>(this->_internal_simulation_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.StartSimulationRes.simulation_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_simulation_id(), target);
  }

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg error = 2;
  if (this->_internal_has_error()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::error(this),
        _Internal::error(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.StartSimulationRes)
  return target;
}

size_t StartSimulationRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.StartSimulationRes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string simulation_id = 1;
  if (!this->_internal_simulation_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_simulation_id());
  }

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg error = 2;
  if (this->_internal_has_error()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.error_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StartSimulationRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StartSimulationRes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StartSimulationRes::GetClassData() const { return &_class_data_; }


void StartSimulationRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StartSimulationRes*>(&to_msg);
  auto& from = static_cast<const StartSimulationRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.StartSimulationRes)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_simulation_id().empty()) {
    _this->_internal_set_simulation_id(from._internal_simulation_id());
  }
  if (from._internal_has_error()) {
    _this->_internal_mutable_error()->::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg::MergeFrom(
        from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StartSimulationRes::CopyFrom(const StartSimulationRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.StartSimulationRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartSimulationRes::IsInitialized() const {
  return true;
}

void StartSimulationRes::InternalSwap(StartSimulationRes* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.simulation_id_, lhs_arena,
      &other->_impl_.simulation_id_, rhs_arena
  );
  swap(_impl_.error_, other->_impl_.error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StartSimulationRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[15]);
}

// ===================================================================

class NextStepReq::_Internal {
 public:
};

NextStepReq::NextStepReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.NextStepReq)
}
NextStepReq::NextStepReq(const NextStepReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NextStepReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.simulation_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.simulation_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.simulation_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_simulation_id().empty()) {
    _this->_impl_.simulation_id_.Set(from._internal_simulation_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.NextStepReq)
}

inline void NextStepReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.simulation_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.simulation_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.simulation_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

NextStepReq::~NextStepReq() {
  // @@protoc_insertion_point(destructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.NextStepReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NextStepReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.simulation_id_.Destroy();
}

void NextStepReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NextStepReq::Clear() {
// @@protoc_insertion_point(message_clear_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.NextStepReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.simulation_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NextStepReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string simulation_id = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_simulation_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.NextStepReq.simulation_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NextStepReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.NextStepReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string simulation_id = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_simulation_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_simulation_id().data(), static_cast<int>(this->_internal_simulation_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.NextStepReq.simulation_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_simulation_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.NextStepReq)
  return target;
}

size_t NextStepReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.NextStepReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string simulation_id = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_simulation_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_simulation_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NextStepReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NextStepReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NextStepReq::GetClassData() const { return &_class_data_; }


void NextStepReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NextStepReq*>(&to_msg);
  auto& from = static_cast<const NextStepReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.NextStepReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_simulation_id().empty()) {
    _this->_internal_set_simulation_id(from._internal_simulation_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NextStepReq::CopyFrom(const NextStepReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.NextStepReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NextStepReq::IsInitialized() const {
  return true;
}

void NextStepReq::InternalSwap(NextStepReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.simulation_id_, lhs_arena,
      &other->_impl_.simulation_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata NextStepReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[16]);
}

// ===================================================================

class SimulationState::_Internal {
 public:
};

SimulationState::SimulationState(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SimulationState)
}
SimulationState::SimulationState(const SimulationState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SimulationState* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.msg_){}
    , decltype(_impl_.progress_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg().empty()) {
    _this->_impl_.msg_.Set(from._internal_msg(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.progress_ = from._impl_.progress_;
  // @@protoc_insertion_point(copy_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SimulationState)
}

inline void SimulationState::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.msg_){}
    , decltype(_impl_.progress_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SimulationState::~SimulationState() {
  // @@protoc_insertion_point(destructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SimulationState)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SimulationState::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.msg_.Destroy();
}

void SimulationState::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SimulationState::Clear() {
// @@protoc_insertion_point(message_clear_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SimulationState)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.msg_.ClearToEmpty();
  _impl_.progress_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SimulationState::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 progress = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.progress_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SimulationState.msg"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SimulationState::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SimulationState)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 progress = 1;
  if (this->_internal_progress() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_progress(), target);
  }

  // string msg = 2;
  if (!this->_internal_msg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SimulationState.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SimulationState)
  return target;
}

size_t SimulationState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SimulationState)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (!this->_internal_msg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 progress = 1;
  if (this->_internal_progress() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_progress());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SimulationState::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SimulationState::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SimulationState::GetClassData() const { return &_class_data_; }


void SimulationState::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SimulationState*>(&to_msg);
  auto& from = static_cast<const SimulationState&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SimulationState)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_msg().empty()) {
    _this->_internal_set_msg(from._internal_msg());
  }
  if (from._internal_progress() != 0) {
    _this->_internal_set_progress(from._internal_progress());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SimulationState::CopyFrom(const SimulationState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SimulationState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SimulationState::IsInitialized() const {
  return true;
}

void SimulationState::InternalSwap(SimulationState* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.msg_, lhs_arena,
      &other->_impl_.msg_, rhs_arena
  );
  swap(_impl_.progress_, other->_impl_.progress_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SimulationState::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[17]);
}

// ===================================================================

class NextStepRes::_Internal {
 public:
  static const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SimulationState& state(const NextStepRes* msg);
  static const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg& error(const NextStepRes* msg);
};

const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SimulationState&
NextStepRes::_Internal::state(const NextStepRes* msg) {
  return *msg->_impl_.state_;
}
const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg&
NextStepRes::_Internal::error(const NextStepRes* msg) {
  return *msg->_impl_.error_;
}
NextStepRes::NextStepRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.NextStepRes)
}
NextStepRes::NextStepRes(const NextStepRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NextStepRes* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.state_){nullptr}
    , decltype(_impl_.error_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_state()) {
    _this->_impl_.state_ = new ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SimulationState(*from._impl_.state_);
  }
  if (from._internal_has_error()) {
    _this->_impl_.error_ = new ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg(*from._impl_.error_);
  }
  // @@protoc_insertion_point(copy_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.NextStepRes)
}

inline void NextStepRes::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.state_){nullptr}
    , decltype(_impl_.error_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

NextStepRes::~NextStepRes() {
  // @@protoc_insertion_point(destructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.NextStepRes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NextStepRes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.state_;
  if (this != internal_default_instance()) delete _impl_.error_;
}

void NextStepRes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NextStepRes::Clear() {
// @@protoc_insertion_point(message_clear_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.NextStepRes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.state_ != nullptr) {
    delete _impl_.state_;
  }
  _impl_.state_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.error_ != nullptr) {
    delete _impl_.error_;
  }
  _impl_.error_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NextStepRes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SimulationState state = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_state(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg error = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NextStepRes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.NextStepRes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SimulationState state = 1;
  if (this->_internal_has_state()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::state(this),
        _Internal::state(this).GetCachedSize(), target, stream);
  }

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg error = 2;
  if (this->_internal_has_error()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::error(this),
        _Internal::error(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.NextStepRes)
  return target;
}

size_t NextStepRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.NextStepRes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SimulationState state = 1;
  if (this->_internal_has_state()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.state_);
  }

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg error = 2;
  if (this->_internal_has_error()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.error_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NextStepRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NextStepRes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NextStepRes::GetClassData() const { return &_class_data_; }


void NextStepRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NextStepRes*>(&to_msg);
  auto& from = static_cast<const NextStepRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.NextStepRes)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_state()) {
    _this->_internal_mutable_state()->::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SimulationState::MergeFrom(
        from._internal_state());
  }
  if (from._internal_has_error()) {
    _this->_internal_mutable_error()->::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg::MergeFrom(
        from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NextStepRes::CopyFrom(const NextStepRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.NextStepRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NextStepRes::IsInitialized() const {
  return true;
}

void NextStepRes::InternalSwap(NextStepRes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NextStepRes, _impl_.error_)
      + sizeof(NextStepRes::_impl_.error_)
      - PROTOBUF_FIELD_OFFSET(NextStepRes, _impl_.state_)>(
          reinterpret_cast<char*>(&_impl_.state_),
          reinterpret_cast<char*>(&other->_impl_.state_));
}

::PROTOBUF_NAMESPACE_ID::Metadata NextStepRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[18]);
}

// ===================================================================

class ResetSimulationReq::_Internal {
 public:
};

ResetSimulationReq::ResetSimulationReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ResetSimulationReq)
}
ResetSimulationReq::ResetSimulationReq(const ResetSimulationReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ResetSimulationReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.simulation_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.simulation_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.simulation_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_simulation_id().empty()) {
    _this->_impl_.simulation_id_.Set(from._internal_simulation_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ResetSimulationReq)
}

inline void ResetSimulationReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.simulation_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.simulation_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.simulation_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ResetSimulationReq::~ResetSimulationReq() {
  // @@protoc_insertion_point(destructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ResetSimulationReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResetSimulationReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.simulation_id_.Destroy();
}

void ResetSimulationReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ResetSimulationReq::Clear() {
// @@protoc_insertion_point(message_clear_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ResetSimulationReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.simulation_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResetSimulationReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string simulation_id = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_simulation_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ResetSimulationReq.simulation_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResetSimulationReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ResetSimulationReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string simulation_id = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_simulation_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_simulation_id().data(), static_cast<int>(this->_internal_simulation_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ResetSimulationReq.simulation_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_simulation_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ResetSimulationReq)
  return target;
}

size_t ResetSimulationReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ResetSimulationReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string simulation_id = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_simulation_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_simulation_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResetSimulationReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ResetSimulationReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResetSimulationReq::GetClassData() const { return &_class_data_; }


void ResetSimulationReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ResetSimulationReq*>(&to_msg);
  auto& from = static_cast<const ResetSimulationReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ResetSimulationReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_simulation_id().empty()) {
    _this->_internal_set_simulation_id(from._internal_simulation_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResetSimulationReq::CopyFrom(const ResetSimulationReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ResetSimulationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetSimulationReq::IsInitialized() const {
  return true;
}

void ResetSimulationReq::InternalSwap(ResetSimulationReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.simulation_id_, lhs_arena,
      &other->_impl_.simulation_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ResetSimulationReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[19]);
}

// ===================================================================

class ResetSimulationRes::_Internal {
 public:
  static const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg& error(const ResetSimulationRes* msg);
};

const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg&
ResetSimulationRes::_Internal::error(const ResetSimulationRes* msg) {
  return *msg->_impl_.error_;
}
ResetSimulationRes::ResetSimulationRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ResetSimulationRes)
}
ResetSimulationRes::ResetSimulationRes(const ResetSimulationRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ResetSimulationRes* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.simulation_id_){}
    , decltype(_impl_.error_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.simulation_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.simulation_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_simulation_id().empty()) {
    _this->_impl_.simulation_id_.Set(from._internal_simulation_id(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_error()) {
    _this->_impl_.error_ = new ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg(*from._impl_.error_);
  }
  // @@protoc_insertion_point(copy_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ResetSimulationRes)
}

inline void ResetSimulationRes::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.simulation_id_){}
    , decltype(_impl_.error_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.simulation_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.simulation_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ResetSimulationRes::~ResetSimulationRes() {
  // @@protoc_insertion_point(destructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ResetSimulationRes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResetSimulationRes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.simulation_id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.error_;
}

void ResetSimulationRes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ResetSimulationRes::Clear() {
// @@protoc_insertion_point(message_clear_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ResetSimulationRes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.simulation_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.error_ != nullptr) {
    delete _impl_.error_;
  }
  _impl_.error_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResetSimulationRes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string simulation_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_simulation_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ResetSimulationRes.simulation_id"));
        } else
          goto handle_unusual;
        continue;
      // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg error = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResetSimulationRes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ResetSimulationRes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string simulation_id = 1;
  if (!this->_internal_simulation_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_simulation_id().data(), static_cast<int>(this->_internal_simulation_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ResetSimulationRes.simulation_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_simulation_id(), target);
  }

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg error = 2;
  if (this->_internal_has_error()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::error(this),
        _Internal::error(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ResetSimulationRes)
  return target;
}

size_t ResetSimulationRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ResetSimulationRes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string simulation_id = 1;
  if (!this->_internal_simulation_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_simulation_id());
  }

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg error = 2;
  if (this->_internal_has_error()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.error_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResetSimulationRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ResetSimulationRes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResetSimulationRes::GetClassData() const { return &_class_data_; }


void ResetSimulationRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ResetSimulationRes*>(&to_msg);
  auto& from = static_cast<const ResetSimulationRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ResetSimulationRes)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_simulation_id().empty()) {
    _this->_internal_set_simulation_id(from._internal_simulation_id());
  }
  if (from._internal_has_error()) {
    _this->_internal_mutable_error()->::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg::MergeFrom(
        from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResetSimulationRes::CopyFrom(const ResetSimulationRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ResetSimulationRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetSimulationRes::IsInitialized() const {
  return true;
}

void ResetSimulationRes::InternalSwap(ResetSimulationRes* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.simulation_id_, lhs_arena,
      &other->_impl_.simulation_id_, rhs_arena
  );
  swap(_impl_.error_, other->_impl_.error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResetSimulationRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[20]);
}

// ===================================================================

class StopSimulationReq::_Internal {
 public:
};

StopSimulationReq::StopSimulationReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.StopSimulationReq)
}
StopSimulationReq::StopSimulationReq(const StopSimulationReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StopSimulationReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.simulation_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.simulation_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.simulation_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_simulation_id().empty()) {
    _this->_impl_.simulation_id_.Set(from._internal_simulation_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.StopSimulationReq)
}

inline void StopSimulationReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.simulation_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.simulation_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.simulation_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StopSimulationReq::~StopSimulationReq() {
  // @@protoc_insertion_point(destructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.StopSimulationReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StopSimulationReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.simulation_id_.Destroy();
}

void StopSimulationReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StopSimulationReq::Clear() {
// @@protoc_insertion_point(message_clear_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.StopSimulationReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.simulation_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopSimulationReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string simulation_id = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_simulation_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.StopSimulationReq.simulation_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StopSimulationReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.StopSimulationReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string simulation_id = 2 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_simulation_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_simulation_id().data(), static_cast<int>(this->_internal_simulation_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.StopSimulationReq.simulation_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_simulation_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.StopSimulationReq)
  return target;
}

size_t StopSimulationReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.StopSimulationReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string simulation_id = 2 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_simulation_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_simulation_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StopSimulationReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StopSimulationReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StopSimulationReq::GetClassData() const { return &_class_data_; }


void StopSimulationReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StopSimulationReq*>(&to_msg);
  auto& from = static_cast<const StopSimulationReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.StopSimulationReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_simulation_id().empty()) {
    _this->_internal_set_simulation_id(from._internal_simulation_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StopSimulationReq::CopyFrom(const StopSimulationReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.StopSimulationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopSimulationReq::IsInitialized() const {
  return true;
}

void StopSimulationReq::InternalSwap(StopSimulationReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.simulation_id_, lhs_arena,
      &other->_impl_.simulation_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata StopSimulationReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[21]);
}

// ===================================================================

class StopSimulationRes::_Internal {
 public:
  static const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SimulationState& state(const StopSimulationRes* msg);
  static const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg& error(const StopSimulationRes* msg);
};

const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SimulationState&
StopSimulationRes::_Internal::state(const StopSimulationRes* msg) {
  return *msg->_impl_.state_;
}
const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg&
StopSimulationRes::_Internal::error(const StopSimulationRes* msg) {
  return *msg->_impl_.error_;
}
StopSimulationRes::StopSimulationRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.StopSimulationRes)
}
StopSimulationRes::StopSimulationRes(const StopSimulationRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StopSimulationRes* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.state_){nullptr}
    , decltype(_impl_.error_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_state()) {
    _this->_impl_.state_ = new ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SimulationState(*from._impl_.state_);
  }
  if (from._internal_has_error()) {
    _this->_impl_.error_ = new ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg(*from._impl_.error_);
  }
  // @@protoc_insertion_point(copy_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.StopSimulationRes)
}

inline void StopSimulationRes::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.state_){nullptr}
    , decltype(_impl_.error_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

StopSimulationRes::~StopSimulationRes() {
  // @@protoc_insertion_point(destructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.StopSimulationRes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StopSimulationRes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.state_;
  if (this != internal_default_instance()) delete _impl_.error_;
}

void StopSimulationRes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StopSimulationRes::Clear() {
// @@protoc_insertion_point(message_clear_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.StopSimulationRes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.state_ != nullptr) {
    delete _impl_.state_;
  }
  _impl_.state_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.error_ != nullptr) {
    delete _impl_.error_;
  }
  _impl_.error_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopSimulationRes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SimulationState state = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_state(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg error = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StopSimulationRes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.StopSimulationRes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SimulationState state = 1;
  if (this->_internal_has_state()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::state(this),
        _Internal::state(this).GetCachedSize(), target, stream);
  }

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg error = 2;
  if (this->_internal_has_error()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::error(this),
        _Internal::error(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.StopSimulationRes)
  return target;
}

size_t StopSimulationRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.StopSimulationRes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SimulationState state = 1;
  if (this->_internal_has_state()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.state_);
  }

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg error = 2;
  if (this->_internal_has_error()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.error_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StopSimulationRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StopSimulationRes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StopSimulationRes::GetClassData() const { return &_class_data_; }


void StopSimulationRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StopSimulationRes*>(&to_msg);
  auto& from = static_cast<const StopSimulationRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.StopSimulationRes)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_state()) {
    _this->_internal_mutable_state()->::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SimulationState::MergeFrom(
        from._internal_state());
  }
  if (from._internal_has_error()) {
    _this->_internal_mutable_error()->::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg::MergeFrom(
        from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StopSimulationRes::CopyFrom(const StopSimulationRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.StopSimulationRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopSimulationRes::IsInitialized() const {
  return true;
}

void StopSimulationRes::InternalSwap(StopSimulationRes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StopSimulationRes, _impl_.error_)
      + sizeof(StopSimulationRes::_impl_.error_)
      - PROTOBUF_FIELD_OFFSET(StopSimulationRes, _impl_.state_)>(
          reinterpret_cast<char*>(&_impl_.state_),
          reinterpret_cast<char*>(&other->_impl_.state_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StopSimulationRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[22]);
}

// ===================================================================

class GetMapReq::_Internal {
 public:
};

GetMapReq::GetMapReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetMapReq)
}
GetMapReq::GetMapReq(const GetMapReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetMapReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.simulation_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.simulation_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.simulation_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_simulation_id().empty()) {
    _this->_impl_.simulation_id_.Set(from._internal_simulation_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetMapReq)
}

inline void GetMapReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.simulation_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.simulation_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.simulation_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetMapReq::~GetMapReq() {
  // @@protoc_insertion_point(destructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetMapReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetMapReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.simulation_id_.Destroy();
}

void GetMapReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetMapReq::Clear() {
// @@protoc_insertion_point(message_clear_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetMapReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.simulation_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetMapReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string simulation_id = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_simulation_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetMapReq.simulation_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetMapReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetMapReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string simulation_id = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_simulation_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_simulation_id().data(), static_cast<int>(this->_internal_simulation_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetMapReq.simulation_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_simulation_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetMapReq)
  return target;
}

size_t GetMapReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetMapReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string simulation_id = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_simulation_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_simulation_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetMapReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetMapReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetMapReq::GetClassData() const { return &_class_data_; }


void GetMapReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetMapReq*>(&to_msg);
  auto& from = static_cast<const GetMapReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetMapReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_simulation_id().empty()) {
    _this->_internal_set_simulation_id(from._internal_simulation_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetMapReq::CopyFrom(const GetMapReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetMapReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMapReq::IsInitialized() const {
  return true;
}

void GetMapReq::InternalSwap(GetMapReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.simulation_id_, lhs_arena,
      &other->_impl_.simulation_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetMapReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[23]);
}

// ===================================================================

class GetMapRes::_Internal {
 public:
  static const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg& error(const GetMapRes* msg);
  static const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map& map(const GetMapRes* msg);
};

const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg&
GetMapRes::_Internal::error(const GetMapRes* msg) {
  return *msg->_impl_.error_;
}
const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map&
GetMapRes::_Internal::map(const GetMapRes* msg) {
  return *msg->_impl_.map_;
}
GetMapRes::GetMapRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetMapRes)
}
GetMapRes::GetMapRes(const GetMapRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetMapRes* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){nullptr}
    , decltype(_impl_.map_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_error()) {
    _this->_impl_.error_ = new ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg(*from._impl_.error_);
  }
  if (from._internal_has_map()) {
    _this->_impl_.map_ = new ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map(*from._impl_.map_);
  }
  // @@protoc_insertion_point(copy_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetMapRes)
}

inline void GetMapRes::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){nullptr}
    , decltype(_impl_.map_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetMapRes::~GetMapRes() {
  // @@protoc_insertion_point(destructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetMapRes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetMapRes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.error_;
  if (this != internal_default_instance()) delete _impl_.map_;
}

void GetMapRes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetMapRes::Clear() {
// @@protoc_insertion_point(message_clear_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetMapRes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.error_ != nullptr) {
    delete _impl_.error_;
  }
  _impl_.error_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.map_ != nullptr) {
    delete _impl_.map_;
  }
  _impl_.map_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetMapRes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Map map = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_map(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetMapRes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetMapRes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg error = 1;
  if (this->_internal_has_error()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::error(this),
        _Internal::error(this).GetCachedSize(), target, stream);
  }

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Map map = 2;
  if (this->_internal_has_map()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::map(this),
        _Internal::map(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetMapRes)
  return target;
}

size_t GetMapRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetMapRes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg error = 1;
  if (this->_internal_has_error()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.error_);
  }

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Map map = 2;
  if (this->_internal_has_map()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.map_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetMapRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetMapRes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetMapRes::GetClassData() const { return &_class_data_; }


void GetMapRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetMapRes*>(&to_msg);
  auto& from = static_cast<const GetMapRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetMapRes)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_error()) {
    _this->_internal_mutable_error()->::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg::MergeFrom(
        from._internal_error());
  }
  if (from._internal_has_map()) {
    _this->_internal_mutable_map()->::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map::MergeFrom(
        from._internal_map());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetMapRes::CopyFrom(const GetMapRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetMapRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMapRes::IsInitialized() const {
  return true;
}

void GetMapRes::InternalSwap(GetMapRes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetMapRes, _impl_.map_)
      + sizeof(GetMapRes::_impl_.map_)
      - PROTOBUF_FIELD_OFFSET(GetMapRes, _impl_.error_)>(
          reinterpret_cast<char*>(&_impl_.error_),
          reinterpret_cast<char*>(&other->_impl_.error_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetMapRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[24]);
}

// ===================================================================

class GetAllTrafficPartReq::_Internal {
 public:
};

GetAllTrafficPartReq::GetAllTrafficPartReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetAllTrafficPartReq)
}
GetAllTrafficPartReq::GetAllTrafficPartReq(const GetAllTrafficPartReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetAllTrafficPartReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.simulation_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.simulation_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.simulation_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_simulation_id().empty()) {
    _this->_impl_.simulation_id_.Set(from._internal_simulation_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetAllTrafficPartReq)
}

inline void GetAllTrafficPartReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.simulation_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.simulation_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.simulation_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetAllTrafficPartReq::~GetAllTrafficPartReq() {
  // @@protoc_insertion_point(destructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetAllTrafficPartReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetAllTrafficPartReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.simulation_id_.Destroy();
}

void GetAllTrafficPartReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetAllTrafficPartReq::Clear() {
// @@protoc_insertion_point(message_clear_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetAllTrafficPartReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.simulation_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAllTrafficPartReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string simulation_id = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_simulation_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetAllTrafficPartReq.simulation_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetAllTrafficPartReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetAllTrafficPartReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string simulation_id = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_simulation_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_simulation_id().data(), static_cast<int>(this->_internal_simulation_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetAllTrafficPartReq.simulation_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_simulation_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetAllTrafficPartReq)
  return target;
}

size_t GetAllTrafficPartReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetAllTrafficPartReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string simulation_id = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_simulation_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_simulation_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAllTrafficPartReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetAllTrafficPartReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAllTrafficPartReq::GetClassData() const { return &_class_data_; }


void GetAllTrafficPartReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetAllTrafficPartReq*>(&to_msg);
  auto& from = static_cast<const GetAllTrafficPartReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetAllTrafficPartReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_simulation_id().empty()) {
    _this->_internal_set_simulation_id(from._internal_simulation_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetAllTrafficPartReq::CopyFrom(const GetAllTrafficPartReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetAllTrafficPartReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllTrafficPartReq::IsInitialized() const {
  return true;
}

void GetAllTrafficPartReq::InternalSwap(GetAllTrafficPartReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.simulation_id_, lhs_arena,
      &other->_impl_.simulation_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAllTrafficPartReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[25]);
}

// ===================================================================

class GetAllTrafficPartRes::_Internal {
 public:
  static const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg& error(const GetAllTrafficPartRes* msg);
};

const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg&
GetAllTrafficPartRes::_Internal::error(const GetAllTrafficPartRes* msg) {
  return *msg->_impl_.error_;
}
GetAllTrafficPartRes::GetAllTrafficPartRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetAllTrafficPartRes)
}
GetAllTrafficPartRes::GetAllTrafficPartRes(const GetAllTrafficPartRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetAllTrafficPartRes* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.list_){from._impl_.list_}
    , decltype(_impl_.error_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_error()) {
    _this->_impl_.error_ = new ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg(*from._impl_.error_);
  }
  // @@protoc_insertion_point(copy_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetAllTrafficPartRes)
}

inline void GetAllTrafficPartRes::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.list_){arena}
    , decltype(_impl_.error_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetAllTrafficPartRes::~GetAllTrafficPartRes() {
  // @@protoc_insertion_point(destructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetAllTrafficPartRes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetAllTrafficPartRes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.list_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.error_;
}

void GetAllTrafficPartRes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetAllTrafficPartRes::Clear() {
// @@protoc_insertion_point(message_clear_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetAllTrafficPartRes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.list_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.error_ != nullptr) {
    delete _impl_.error_;
  }
  _impl_.error_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAllTrafficPartRes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.MovingObj list = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetAllTrafficPartRes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetAllTrafficPartRes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg error = 1;
  if (this->_internal_has_error()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::error(this),
        _Internal::error(this).GetCachedSize(), target, stream);
  }

  // repeated .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.MovingObj list = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_list_size()); i < n; i++) {
    const auto& repfield = this->_internal_list(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetAllTrafficPartRes)
  return target;
}

size_t GetAllTrafficPartRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetAllTrafficPartRes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.MovingObj list = 2;
  total_size += 1UL * this->_internal_list_size();
  for (const auto& msg : this->_impl_.list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg error = 1;
  if (this->_internal_has_error()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.error_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAllTrafficPartRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetAllTrafficPartRes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAllTrafficPartRes::GetClassData() const { return &_class_data_; }


void GetAllTrafficPartRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetAllTrafficPartRes*>(&to_msg);
  auto& from = static_cast<const GetAllTrafficPartRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetAllTrafficPartRes)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.list_.MergeFrom(from._impl_.list_);
  if (from._internal_has_error()) {
    _this->_internal_mutable_error()->::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg::MergeFrom(
        from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetAllTrafficPartRes::CopyFrom(const GetAllTrafficPartRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetAllTrafficPartRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllTrafficPartRes::IsInitialized() const {
  return true;
}

void GetAllTrafficPartRes::InternalSwap(GetAllTrafficPartRes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.list_.InternalSwap(&other->_impl_.list_);
  swap(_impl_.error_, other->_impl_.error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAllTrafficPartRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[26]);
}

// ===================================================================

class SetVehicleControlReq::_Internal {
 public:
};

SetVehicleControlReq::SetVehicleControlReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SetVehicleControlReq)
}
SetVehicleControlReq::SetVehicleControlReq(const SetVehicleControlReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetVehicleControlReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.simulation_id_){}
    , decltype(_impl_.vehicle_id_){}
    , decltype(_impl_.lon_acc_){}
    , decltype(_impl_.ste_wheel_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.simulation_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.simulation_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_simulation_id().empty()) {
    _this->_impl_.simulation_id_.Set(from._internal_simulation_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.vehicle_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.vehicle_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_vehicle_id().empty()) {
    _this->_impl_.vehicle_id_.Set(from._internal_vehicle_id(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.lon_acc_, &from._impl_.lon_acc_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.ste_wheel_) -
    reinterpret_cast<char*>(&_impl_.lon_acc_)) + sizeof(_impl_.ste_wheel_));
  // @@protoc_insertion_point(copy_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SetVehicleControlReq)
}

inline void SetVehicleControlReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.simulation_id_){}
    , decltype(_impl_.vehicle_id_){}
    , decltype(_impl_.lon_acc_){0}
    , decltype(_impl_.ste_wheel_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.simulation_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.simulation_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.vehicle_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.vehicle_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SetVehicleControlReq::~SetVehicleControlReq() {
  // @@protoc_insertion_point(destructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SetVehicleControlReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetVehicleControlReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.simulation_id_.Destroy();
  _impl_.vehicle_id_.Destroy();
}

void SetVehicleControlReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetVehicleControlReq::Clear() {
// @@protoc_insertion_point(message_clear_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SetVehicleControlReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.simulation_id_.ClearToEmpty();
  _impl_.vehicle_id_.ClearToEmpty();
  ::memset(&_impl_.lon_acc_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.ste_wheel_) -
      reinterpret_cast<char*>(&_impl_.lon_acc_)) + sizeof(_impl_.ste_wheel_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetVehicleControlReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string simulation_id = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_simulation_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SetVehicleControlReq.simulation_id"));
        } else
          goto handle_unusual;
        continue;
      // string vehicle_id = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_vehicle_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SetVehicleControlReq.vehicle_id"));
        } else
          goto handle_unusual;
        continue;
      // double lon_acc = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 25)) {
          _impl_.lon_acc_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // double ste_wheel = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 33)) {
          _impl_.ste_wheel_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetVehicleControlReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SetVehicleControlReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string simulation_id = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_simulation_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_simulation_id().data(), static_cast<int>(this->_internal_simulation_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SetVehicleControlReq.simulation_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_simulation_id(), target);
  }

  // string vehicle_id = 2 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_vehicle_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_vehicle_id().data(), static_cast<int>(this->_internal_vehicle_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SetVehicleControlReq.vehicle_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_vehicle_id(), target);
  }

  // double lon_acc = 3;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_lon_acc = this->_internal_lon_acc();
  uint64_t raw_lon_acc;
  memcpy(&raw_lon_acc, &tmp_lon_acc, sizeof(tmp_lon_acc));
  if (raw_lon_acc != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(3, this->_internal_lon_acc(), target);
  }

  // double ste_wheel = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_ste_wheel = this->_internal_ste_wheel();
  uint64_t raw_ste_wheel;
  memcpy(&raw_ste_wheel, &tmp_ste_wheel, sizeof(tmp_ste_wheel));
  if (raw_ste_wheel != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(4, this->_internal_ste_wheel(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SetVehicleControlReq)
  return target;
}

size_t SetVehicleControlReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SetVehicleControlReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string simulation_id = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_simulation_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_simulation_id());
  }

  // string vehicle_id = 2 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_vehicle_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_vehicle_id());
  }

  // double lon_acc = 3;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_lon_acc = this->_internal_lon_acc();
  uint64_t raw_lon_acc;
  memcpy(&raw_lon_acc, &tmp_lon_acc, sizeof(tmp_lon_acc));
  if (raw_lon_acc != 0) {
    total_size += 1 + 8;
  }

  // double ste_wheel = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_ste_wheel = this->_internal_ste_wheel();
  uint64_t raw_ste_wheel;
  memcpy(&raw_ste_wheel, &tmp_ste_wheel, sizeof(tmp_ste_wheel));
  if (raw_ste_wheel != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetVehicleControlReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetVehicleControlReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetVehicleControlReq::GetClassData() const { return &_class_data_; }


void SetVehicleControlReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetVehicleControlReq*>(&to_msg);
  auto& from = static_cast<const SetVehicleControlReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SetVehicleControlReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_simulation_id().empty()) {
    _this->_internal_set_simulation_id(from._internal_simulation_id());
  }
  if (!from._internal_vehicle_id().empty()) {
    _this->_internal_set_vehicle_id(from._internal_vehicle_id());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_lon_acc = from._internal_lon_acc();
  uint64_t raw_lon_acc;
  memcpy(&raw_lon_acc, &tmp_lon_acc, sizeof(tmp_lon_acc));
  if (raw_lon_acc != 0) {
    _this->_internal_set_lon_acc(from._internal_lon_acc());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_ste_wheel = from._internal_ste_wheel();
  uint64_t raw_ste_wheel;
  memcpy(&raw_ste_wheel, &tmp_ste_wheel, sizeof(tmp_ste_wheel));
  if (raw_ste_wheel != 0) {
    _this->_internal_set_ste_wheel(from._internal_ste_wheel());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetVehicleControlReq::CopyFrom(const SetVehicleControlReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SetVehicleControlReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetVehicleControlReq::IsInitialized() const {
  return true;
}

void SetVehicleControlReq::InternalSwap(SetVehicleControlReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.simulation_id_, lhs_arena,
      &other->_impl_.simulation_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.vehicle_id_, lhs_arena,
      &other->_impl_.vehicle_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetVehicleControlReq, _impl_.ste_wheel_)
      + sizeof(SetVehicleControlReq::_impl_.ste_wheel_)
      - PROTOBUF_FIELD_OFFSET(SetVehicleControlReq, _impl_.lon_acc_)>(
          reinterpret_cast<char*>(&_impl_.lon_acc_),
          reinterpret_cast<char*>(&other->_impl_.lon_acc_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetVehicleControlReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[27]);
}

// ===================================================================

class SetVehicleControlRes::_Internal {
 public:
  static const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg& error(const SetVehicleControlRes* msg);
  static const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Vehicle& vehicle(const SetVehicleControlRes* msg);
};

const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg&
SetVehicleControlRes::_Internal::error(const SetVehicleControlRes* msg) {
  return *msg->_impl_.error_;
}
const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Vehicle&
SetVehicleControlRes::_Internal::vehicle(const SetVehicleControlRes* msg) {
  return *msg->_impl_.vehicle_;
}
SetVehicleControlRes::SetVehicleControlRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SetVehicleControlRes)
}
SetVehicleControlRes::SetVehicleControlRes(const SetVehicleControlRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetVehicleControlRes* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){nullptr}
    , decltype(_impl_.vehicle_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_error()) {
    _this->_impl_.error_ = new ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg(*from._impl_.error_);
  }
  if (from._internal_has_vehicle()) {
    _this->_impl_.vehicle_ = new ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Vehicle(*from._impl_.vehicle_);
  }
  // @@protoc_insertion_point(copy_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SetVehicleControlRes)
}

inline void SetVehicleControlRes::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){nullptr}
    , decltype(_impl_.vehicle_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetVehicleControlRes::~SetVehicleControlRes() {
  // @@protoc_insertion_point(destructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SetVehicleControlRes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetVehicleControlRes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.error_;
  if (this != internal_default_instance()) delete _impl_.vehicle_;
}

void SetVehicleControlRes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetVehicleControlRes::Clear() {
// @@protoc_insertion_point(message_clear_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SetVehicleControlRes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.error_ != nullptr) {
    delete _impl_.error_;
  }
  _impl_.error_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.vehicle_ != nullptr) {
    delete _impl_.vehicle_;
  }
  _impl_.vehicle_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetVehicleControlRes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Vehicle vehicle = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_vehicle(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetVehicleControlRes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SetVehicleControlRes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg error = 1;
  if (this->_internal_has_error()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::error(this),
        _Internal::error(this).GetCachedSize(), target, stream);
  }

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Vehicle vehicle = 2;
  if (this->_internal_has_vehicle()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::vehicle(this),
        _Internal::vehicle(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SetVehicleControlRes)
  return target;
}

size_t SetVehicleControlRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SetVehicleControlRes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg error = 1;
  if (this->_internal_has_error()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.error_);
  }

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Vehicle vehicle = 2;
  if (this->_internal_has_vehicle()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.vehicle_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetVehicleControlRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetVehicleControlRes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetVehicleControlRes::GetClassData() const { return &_class_data_; }


void SetVehicleControlRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetVehicleControlRes*>(&to_msg);
  auto& from = static_cast<const SetVehicleControlRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SetVehicleControlRes)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_error()) {
    _this->_internal_mutable_error()->::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg::MergeFrom(
        from._internal_error());
  }
  if (from._internal_has_vehicle()) {
    _this->_internal_mutable_vehicle()->::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Vehicle::MergeFrom(
        from._internal_vehicle());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetVehicleControlRes::CopyFrom(const SetVehicleControlRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SetVehicleControlRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetVehicleControlRes::IsInitialized() const {
  return true;
}

void SetVehicleControlRes::InternalSwap(SetVehicleControlRes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetVehicleControlRes, _impl_.vehicle_)
      + sizeof(SetVehicleControlRes::_impl_.vehicle_)
      - PROTOBUF_FIELD_OFFSET(SetVehicleControlRes, _impl_.error_)>(
          reinterpret_cast<char*>(&_impl_.error_),
          reinterpret_cast<char*>(&other->_impl_.error_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetVehicleControlRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[28]);
}

// ===================================================================

class GetVehicleEgoReq::_Internal {
 public:
};

GetVehicleEgoReq::GetVehicleEgoReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetVehicleEgoReq)
}
GetVehicleEgoReq::GetVehicleEgoReq(const GetVehicleEgoReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetVehicleEgoReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.simulation_id_){}
    , decltype(_impl_.vehicle_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.simulation_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.simulation_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_simulation_id().empty()) {
    _this->_impl_.simulation_id_.Set(from._internal_simulation_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.vehicle_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.vehicle_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_vehicle_id().empty()) {
    _this->_impl_.vehicle_id_.Set(from._internal_vehicle_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetVehicleEgoReq)
}

inline void GetVehicleEgoReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.simulation_id_){}
    , decltype(_impl_.vehicle_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.simulation_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.simulation_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.vehicle_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.vehicle_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetVehicleEgoReq::~GetVehicleEgoReq() {
  // @@protoc_insertion_point(destructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetVehicleEgoReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetVehicleEgoReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.simulation_id_.Destroy();
  _impl_.vehicle_id_.Destroy();
}

void GetVehicleEgoReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetVehicleEgoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetVehicleEgoReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.simulation_id_.ClearToEmpty();
  _impl_.vehicle_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetVehicleEgoReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string simulation_id = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_simulation_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetVehicleEgoReq.simulation_id"));
        } else
          goto handle_unusual;
        continue;
      // string vehicle_id = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_vehicle_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetVehicleEgoReq.vehicle_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetVehicleEgoReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetVehicleEgoReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string simulation_id = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_simulation_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_simulation_id().data(), static_cast<int>(this->_internal_simulation_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetVehicleEgoReq.simulation_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_simulation_id(), target);
  }

  // string vehicle_id = 2 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_vehicle_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_vehicle_id().data(), static_cast<int>(this->_internal_vehicle_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetVehicleEgoReq.vehicle_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_vehicle_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetVehicleEgoReq)
  return target;
}

size_t GetVehicleEgoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetVehicleEgoReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string simulation_id = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_simulation_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_simulation_id());
  }

  // string vehicle_id = 2 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_vehicle_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_vehicle_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetVehicleEgoReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetVehicleEgoReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetVehicleEgoReq::GetClassData() const { return &_class_data_; }


void GetVehicleEgoReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetVehicleEgoReq*>(&to_msg);
  auto& from = static_cast<const GetVehicleEgoReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetVehicleEgoReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_simulation_id().empty()) {
    _this->_internal_set_simulation_id(from._internal_simulation_id());
  }
  if (!from._internal_vehicle_id().empty()) {
    _this->_internal_set_vehicle_id(from._internal_vehicle_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetVehicleEgoReq::CopyFrom(const GetVehicleEgoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetVehicleEgoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVehicleEgoReq::IsInitialized() const {
  return true;
}

void GetVehicleEgoReq::InternalSwap(GetVehicleEgoReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.simulation_id_, lhs_arena,
      &other->_impl_.simulation_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.vehicle_id_, lhs_arena,
      &other->_impl_.vehicle_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetVehicleEgoReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[29]);
}

// ===================================================================

class GetVehicleEgoRes::_Internal {
 public:
  static const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg& error(const GetVehicleEgoRes* msg);
  static const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Vehicle& vehicle(const GetVehicleEgoRes* msg);
};

const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg&
GetVehicleEgoRes::_Internal::error(const GetVehicleEgoRes* msg) {
  return *msg->_impl_.error_;
}
const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Vehicle&
GetVehicleEgoRes::_Internal::vehicle(const GetVehicleEgoRes* msg) {
  return *msg->_impl_.vehicle_;
}
GetVehicleEgoRes::GetVehicleEgoRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetVehicleEgoRes)
}
GetVehicleEgoRes::GetVehicleEgoRes(const GetVehicleEgoRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetVehicleEgoRes* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){nullptr}
    , decltype(_impl_.vehicle_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_error()) {
    _this->_impl_.error_ = new ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg(*from._impl_.error_);
  }
  if (from._internal_has_vehicle()) {
    _this->_impl_.vehicle_ = new ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Vehicle(*from._impl_.vehicle_);
  }
  // @@protoc_insertion_point(copy_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetVehicleEgoRes)
}

inline void GetVehicleEgoRes::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){nullptr}
    , decltype(_impl_.vehicle_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetVehicleEgoRes::~GetVehicleEgoRes() {
  // @@protoc_insertion_point(destructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetVehicleEgoRes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetVehicleEgoRes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.error_;
  if (this != internal_default_instance()) delete _impl_.vehicle_;
}

void GetVehicleEgoRes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetVehicleEgoRes::Clear() {
// @@protoc_insertion_point(message_clear_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetVehicleEgoRes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.error_ != nullptr) {
    delete _impl_.error_;
  }
  _impl_.error_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.vehicle_ != nullptr) {
    delete _impl_.vehicle_;
  }
  _impl_.vehicle_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetVehicleEgoRes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Vehicle vehicle = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_vehicle(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetVehicleEgoRes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetVehicleEgoRes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg error = 1;
  if (this->_internal_has_error()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::error(this),
        _Internal::error(this).GetCachedSize(), target, stream);
  }

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Vehicle vehicle = 2;
  if (this->_internal_has_vehicle()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::vehicle(this),
        _Internal::vehicle(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetVehicleEgoRes)
  return target;
}

size_t GetVehicleEgoRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetVehicleEgoRes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg error = 1;
  if (this->_internal_has_error()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.error_);
  }

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Vehicle vehicle = 2;
  if (this->_internal_has_vehicle()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.vehicle_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetVehicleEgoRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetVehicleEgoRes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetVehicleEgoRes::GetClassData() const { return &_class_data_; }


void GetVehicleEgoRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetVehicleEgoRes*>(&to_msg);
  auto& from = static_cast<const GetVehicleEgoRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetVehicleEgoRes)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_error()) {
    _this->_internal_mutable_error()->::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg::MergeFrom(
        from._internal_error());
  }
  if (from._internal_has_vehicle()) {
    _this->_internal_mutable_vehicle()->::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Vehicle::MergeFrom(
        from._internal_vehicle());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetVehicleEgoRes::CopyFrom(const GetVehicleEgoRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetVehicleEgoRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVehicleEgoRes::IsInitialized() const {
  return true;
}

void GetVehicleEgoRes::InternalSwap(GetVehicleEgoRes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetVehicleEgoRes, _impl_.vehicle_)
      + sizeof(GetVehicleEgoRes::_impl_.vehicle_)
      - PROTOBUF_FIELD_OFFSET(GetVehicleEgoRes, _impl_.error_)>(
          reinterpret_cast<char*>(&_impl_.error_),
          reinterpret_cast<char*>(&other->_impl_.error_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetVehicleEgoRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[30]);
}

// ===================================================================

class GetResultsReq::_Internal {
 public:
};

GetResultsReq::GetResultsReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsReq)
}
GetResultsReq::GetResultsReq(const GetResultsReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetResultsReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.simulation_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.simulation_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.simulation_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_simulation_id().empty()) {
    _this->_impl_.simulation_id_.Set(from._internal_simulation_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsReq)
}

inline void GetResultsReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.simulation_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.simulation_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.simulation_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetResultsReq::~GetResultsReq() {
  // @@protoc_insertion_point(destructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetResultsReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.simulation_id_.Destroy();
}

void GetResultsReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetResultsReq::Clear() {
// @@protoc_insertion_point(message_clear_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.simulation_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetResultsReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string simulation_id = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_simulation_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsReq.simulation_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetResultsReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string simulation_id = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_simulation_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_simulation_id().data(), static_cast<int>(this->_internal_simulation_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsReq.simulation_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_simulation_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsReq)
  return target;
}

size_t GetResultsReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string simulation_id = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_simulation_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_simulation_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetResultsReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetResultsReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetResultsReq::GetClassData() const { return &_class_data_; }


void GetResultsReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetResultsReq*>(&to_msg);
  auto& from = static_cast<const GetResultsReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_simulation_id().empty()) {
    _this->_internal_set_simulation_id(from._internal_simulation_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetResultsReq::CopyFrom(const GetResultsReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResultsReq::IsInitialized() const {
  return true;
}

void GetResultsReq::InternalSwap(GetResultsReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.simulation_id_, lhs_arena,
      &other->_impl_.simulation_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetResultsReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[31]);
}

// ===================================================================

GetResultsRes_ResultsEntry_DoNotUse::GetResultsRes_ResultsEntry_DoNotUse() {}
GetResultsRes_ResultsEntry_DoNotUse::GetResultsRes_ResultsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetResultsRes_ResultsEntry_DoNotUse::MergeFrom(const GetResultsRes_ResultsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetResultsRes_ResultsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[32]);
}

// ===================================================================

class GetResultsRes_item::_Internal {
 public:
};

GetResultsRes_item::GetResultsRes_item(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsRes.item)
}
GetResultsRes_item::GetResultsRes_item(const GetResultsRes_item& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetResultsRes_item* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.r_){from._impl_.r_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsRes.item)
}

inline void GetResultsRes_item::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.r_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetResultsRes_item::~GetResultsRes_item() {
  // @@protoc_insertion_point(destructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsRes.item)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetResultsRes_item::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.r_.~RepeatedField();
}

void GetResultsRes_item::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetResultsRes_item::Clear() {
// @@protoc_insertion_point(message_clear_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsRes.item)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.r_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetResultsRes_item::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated double r = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedDoubleParser(_internal_mutable_r(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 9) {
          _internal_add_r(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetResultsRes_item::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsRes.item)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double r = 1;
  if (this->_internal_r_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_r(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsRes.item)
  return target;
}

size_t GetResultsRes_item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsRes.item)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated double r = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_r_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetResultsRes_item::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetResultsRes_item::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetResultsRes_item::GetClassData() const { return &_class_data_; }


void GetResultsRes_item::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetResultsRes_item*>(&to_msg);
  auto& from = static_cast<const GetResultsRes_item&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsRes.item)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.r_.MergeFrom(from._impl_.r_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetResultsRes_item::CopyFrom(const GetResultsRes_item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsRes.item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResultsRes_item::IsInitialized() const {
  return true;
}

void GetResultsRes_item::InternalSwap(GetResultsRes_item* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.r_.InternalSwap(&other->_impl_.r_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetResultsRes_item::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[33]);
}

// ===================================================================

class GetResultsRes_arrays::_Internal {
 public:
};

GetResultsRes_arrays::GetResultsRes_arrays(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsRes.arrays)
}
GetResultsRes_arrays::GetResultsRes_arrays(const GetResultsRes_arrays& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetResultsRes_arrays* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.arr_){from._impl_.arr_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsRes.arrays)
}

inline void GetResultsRes_arrays::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.arr_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetResultsRes_arrays::~GetResultsRes_arrays() {
  // @@protoc_insertion_point(destructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsRes.arrays)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetResultsRes_arrays::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.arr_.~RepeatedPtrField();
}

void GetResultsRes_arrays::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetResultsRes_arrays::Clear() {
// @@protoc_insertion_point(message_clear_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsRes.arrays)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.arr_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetResultsRes_arrays::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsRes.item arr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_arr(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetResultsRes_arrays::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsRes.arrays)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsRes.item arr = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_arr_size()); i < n; i++) {
    const auto& repfield = this->_internal_arr(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsRes.arrays)
  return target;
}

size_t GetResultsRes_arrays::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsRes.arrays)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsRes.item arr = 1;
  total_size += 1UL * this->_internal_arr_size();
  for (const auto& msg : this->_impl_.arr_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetResultsRes_arrays::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetResultsRes_arrays::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetResultsRes_arrays::GetClassData() const { return &_class_data_; }


void GetResultsRes_arrays::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetResultsRes_arrays*>(&to_msg);
  auto& from = static_cast<const GetResultsRes_arrays&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsRes.arrays)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.arr_.MergeFrom(from._impl_.arr_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetResultsRes_arrays::CopyFrom(const GetResultsRes_arrays& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsRes.arrays)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResultsRes_arrays::IsInitialized() const {
  return true;
}

void GetResultsRes_arrays::InternalSwap(GetResultsRes_arrays* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.arr_.InternalSwap(&other->_impl_.arr_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetResultsRes_arrays::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[34]);
}

// ===================================================================

class GetResultsRes::_Internal {
 public:
  static const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg& error(const GetResultsRes* msg);
};

const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg&
GetResultsRes::_Internal::error(const GetResultsRes* msg) {
  return *msg->_impl_.error_;
}
GetResultsRes::GetResultsRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &GetResultsRes::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsRes)
}
GetResultsRes::GetResultsRes(const GetResultsRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetResultsRes* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.results_)*/{}
    , decltype(_impl_.error_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.results_.MergeFrom(from._impl_.results_);
  if (from._internal_has_error()) {
    _this->_impl_.error_ = new ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg(*from._impl_.error_);
  }
  // @@protoc_insertion_point(copy_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsRes)
}

inline void GetResultsRes::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.results_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.error_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetResultsRes::~GetResultsRes() {
  // @@protoc_insertion_point(destructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsRes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void GetResultsRes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.results_.Destruct();
  _impl_.results_.~MapField();
  if (this != internal_default_instance()) delete _impl_.error_;
}

void GetResultsRes::ArenaDtor(void* object) {
  GetResultsRes* _this = reinterpret_cast< GetResultsRes* >(object);
  _this->_impl_.results_.Destruct();
}
void GetResultsRes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetResultsRes::Clear() {
// @@protoc_insertion_point(message_clear_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsRes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.results_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.error_ != nullptr) {
    delete _impl_.error_;
  }
  _impl_.error_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetResultsRes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsRes.arrays> results = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.results_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetResultsRes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsRes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg error = 1;
  if (this->_internal_has_error()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::error(this),
        _Internal::error(this).GetCachedSize(), target, stream);
  }

  // map<string, .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsRes.arrays> results = 2;
  if (!this->_internal_results().empty()) {
    using MapType = ::_pb::Map<std::string, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsRes_arrays>;
    using WireHelper = GetResultsRes_ResultsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_results();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsRes.ResultsEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsRes)
  return target;
}

size_t GetResultsRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsRes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsRes.arrays> results = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_results_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsRes_arrays >::const_iterator
      it = this->_internal_results().begin();
      it != this->_internal_results().end(); ++it) {
    total_size += GetResultsRes_ResultsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg error = 1;
  if (this->_internal_has_error()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.error_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetResultsRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetResultsRes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetResultsRes::GetClassData() const { return &_class_data_; }


void GetResultsRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetResultsRes*>(&to_msg);
  auto& from = static_cast<const GetResultsRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsRes)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.results_.MergeFrom(from._impl_.results_);
  if (from._internal_has_error()) {
    _this->_internal_mutable_error()->::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg::MergeFrom(
        from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetResultsRes::CopyFrom(const GetResultsRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetResultsRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResultsRes::IsInitialized() const {
  return true;
}

void GetResultsRes::InternalSwap(GetResultsRes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.results_.InternalSwap(&other->_impl_.results_);
  swap(_impl_.error_, other->_impl_.error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetResultsRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[35]);
}

// ===================================================================

class GetLinkReq::_Internal {
 public:
};

GetLinkReq::GetLinkReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLinkReq)
}
GetLinkReq::GetLinkReq(const GetLinkReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetLinkReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.simulation_id_){}
    , decltype(_impl_.link_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.simulation_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.simulation_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_simulation_id().empty()) {
    _this->_impl_.simulation_id_.Set(from._internal_simulation_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.link_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.link_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_link_id().empty()) {
    _this->_impl_.link_id_.Set(from._internal_link_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLinkReq)
}

inline void GetLinkReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.simulation_id_){}
    , decltype(_impl_.link_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.simulation_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.simulation_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.link_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.link_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetLinkReq::~GetLinkReq() {
  // @@protoc_insertion_point(destructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLinkReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetLinkReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.simulation_id_.Destroy();
  _impl_.link_id_.Destroy();
}

void GetLinkReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetLinkReq::Clear() {
// @@protoc_insertion_point(message_clear_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLinkReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.simulation_id_.ClearToEmpty();
  _impl_.link_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLinkReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string simulation_id = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_simulation_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLinkReq.simulation_id"));
        } else
          goto handle_unusual;
        continue;
      // string link_id = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_link_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLinkReq.link_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetLinkReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLinkReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string simulation_id = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_simulation_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_simulation_id().data(), static_cast<int>(this->_internal_simulation_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLinkReq.simulation_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_simulation_id(), target);
  }

  // string link_id = 2 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_link_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_link_id().data(), static_cast<int>(this->_internal_link_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLinkReq.link_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_link_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLinkReq)
  return target;
}

size_t GetLinkReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLinkReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string simulation_id = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_simulation_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_simulation_id());
  }

  // string link_id = 2 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_link_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_link_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetLinkReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetLinkReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetLinkReq::GetClassData() const { return &_class_data_; }


void GetLinkReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetLinkReq*>(&to_msg);
  auto& from = static_cast<const GetLinkReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLinkReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_simulation_id().empty()) {
    _this->_internal_set_simulation_id(from._internal_simulation_id());
  }
  if (!from._internal_link_id().empty()) {
    _this->_internal_set_link_id(from._internal_link_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetLinkReq::CopyFrom(const GetLinkReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLinkReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLinkReq::IsInitialized() const {
  return true;
}

void GetLinkReq::InternalSwap(GetLinkReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.simulation_id_, lhs_arena,
      &other->_impl_.simulation_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.link_id_, lhs_arena,
      &other->_impl_.link_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLinkReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[36]);
}

// ===================================================================

class GetLinkRes::_Internal {
 public:
  static const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg& error(const GetLinkRes* msg);
  static const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Link& link(const GetLinkRes* msg);
};

const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg&
GetLinkRes::_Internal::error(const GetLinkRes* msg) {
  return *msg->_impl_.error_;
}
const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Link&
GetLinkRes::_Internal::link(const GetLinkRes* msg) {
  return *msg->_impl_.link_;
}
void GetLinkRes::clear_link() {
  if (GetArenaForAllocation() == nullptr && _impl_.link_ != nullptr) {
    delete _impl_.link_;
  }
  _impl_.link_ = nullptr;
}
GetLinkRes::GetLinkRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLinkRes)
}
GetLinkRes::GetLinkRes(const GetLinkRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetLinkRes* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){nullptr}
    , decltype(_impl_.link_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_error()) {
    _this->_impl_.error_ = new ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg(*from._impl_.error_);
  }
  if (from._internal_has_link()) {
    _this->_impl_.link_ = new ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Link(*from._impl_.link_);
  }
  // @@protoc_insertion_point(copy_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLinkRes)
}

inline void GetLinkRes::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){nullptr}
    , decltype(_impl_.link_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetLinkRes::~GetLinkRes() {
  // @@protoc_insertion_point(destructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLinkRes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetLinkRes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.error_;
  if (this != internal_default_instance()) delete _impl_.link_;
}

void GetLinkRes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetLinkRes::Clear() {
// @@protoc_insertion_point(message_clear_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLinkRes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.error_ != nullptr) {
    delete _impl_.error_;
  }
  _impl_.error_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.link_ != nullptr) {
    delete _impl_.link_;
  }
  _impl_.link_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLinkRes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Link link = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_link(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetLinkRes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLinkRes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg error = 1;
  if (this->_internal_has_error()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::error(this),
        _Internal::error(this).GetCachedSize(), target, stream);
  }

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Link link = 2;
  if (this->_internal_has_link()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::link(this),
        _Internal::link(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLinkRes)
  return target;
}

size_t GetLinkRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLinkRes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg error = 1;
  if (this->_internal_has_error()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.error_);
  }

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Link link = 2;
  if (this->_internal_has_link()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.link_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetLinkRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetLinkRes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetLinkRes::GetClassData() const { return &_class_data_; }


void GetLinkRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetLinkRes*>(&to_msg);
  auto& from = static_cast<const GetLinkRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLinkRes)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_error()) {
    _this->_internal_mutable_error()->::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg::MergeFrom(
        from._internal_error());
  }
  if (from._internal_has_link()) {
    _this->_internal_mutable_link()->::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Link::MergeFrom(
        from._internal_link());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetLinkRes::CopyFrom(const GetLinkRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLinkRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLinkRes::IsInitialized() const {
  return true;
}

void GetLinkRes::InternalSwap(GetLinkRes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetLinkRes, _impl_.link_)
      + sizeof(GetLinkRes::_impl_.link_)
      - PROTOBUF_FIELD_OFFSET(GetLinkRes, _impl_.error_)>(
          reinterpret_cast<char*>(&_impl_.error_),
          reinterpret_cast<char*>(&other->_impl_.error_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLinkRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[37]);
}

// ===================================================================

class GetLaneReq::_Internal {
 public:
};

GetLaneReq::GetLaneReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLaneReq)
}
GetLaneReq::GetLaneReq(const GetLaneReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetLaneReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.simulation_id_){}
    , decltype(_impl_.lane_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.simulation_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.simulation_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_simulation_id().empty()) {
    _this->_impl_.simulation_id_.Set(from._internal_simulation_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.lane_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.lane_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_lane_id().empty()) {
    _this->_impl_.lane_id_.Set(from._internal_lane_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLaneReq)
}

inline void GetLaneReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.simulation_id_){}
    , decltype(_impl_.lane_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.simulation_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.simulation_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.lane_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.lane_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetLaneReq::~GetLaneReq() {
  // @@protoc_insertion_point(destructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLaneReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetLaneReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.simulation_id_.Destroy();
  _impl_.lane_id_.Destroy();
}

void GetLaneReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetLaneReq::Clear() {
// @@protoc_insertion_point(message_clear_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLaneReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.simulation_id_.ClearToEmpty();
  _impl_.lane_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLaneReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string simulation_id = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_simulation_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLaneReq.simulation_id"));
        } else
          goto handle_unusual;
        continue;
      // string lane_id = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_lane_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLaneReq.lane_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetLaneReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLaneReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string simulation_id = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_simulation_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_simulation_id().data(), static_cast<int>(this->_internal_simulation_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLaneReq.simulation_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_simulation_id(), target);
  }

  // string lane_id = 2 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_lane_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_lane_id().data(), static_cast<int>(this->_internal_lane_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLaneReq.lane_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_lane_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLaneReq)
  return target;
}

size_t GetLaneReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLaneReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string simulation_id = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_simulation_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_simulation_id());
  }

  // string lane_id = 2 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_lane_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_lane_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetLaneReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetLaneReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetLaneReq::GetClassData() const { return &_class_data_; }


void GetLaneReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetLaneReq*>(&to_msg);
  auto& from = static_cast<const GetLaneReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLaneReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_simulation_id().empty()) {
    _this->_internal_set_simulation_id(from._internal_simulation_id());
  }
  if (!from._internal_lane_id().empty()) {
    _this->_internal_set_lane_id(from._internal_lane_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetLaneReq::CopyFrom(const GetLaneReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLaneReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLaneReq::IsInitialized() const {
  return true;
}

void GetLaneReq::InternalSwap(GetLaneReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.simulation_id_, lhs_arena,
      &other->_impl_.simulation_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.lane_id_, lhs_arena,
      &other->_impl_.lane_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLaneReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[38]);
}

// ===================================================================

class GetLaneRes::_Internal {
 public:
  static const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg& error(const GetLaneRes* msg);
  static const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Lane& lane(const GetLaneRes* msg);
};

const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg&
GetLaneRes::_Internal::error(const GetLaneRes* msg) {
  return *msg->_impl_.error_;
}
const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Lane&
GetLaneRes::_Internal::lane(const GetLaneRes* msg) {
  return *msg->_impl_.lane_;
}
void GetLaneRes::clear_lane() {
  if (GetArenaForAllocation() == nullptr && _impl_.lane_ != nullptr) {
    delete _impl_.lane_;
  }
  _impl_.lane_ = nullptr;
}
GetLaneRes::GetLaneRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLaneRes)
}
GetLaneRes::GetLaneRes(const GetLaneRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetLaneRes* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){nullptr}
    , decltype(_impl_.lane_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_error()) {
    _this->_impl_.error_ = new ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg(*from._impl_.error_);
  }
  if (from._internal_has_lane()) {
    _this->_impl_.lane_ = new ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Lane(*from._impl_.lane_);
  }
  // @@protoc_insertion_point(copy_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLaneRes)
}

inline void GetLaneRes::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){nullptr}
    , decltype(_impl_.lane_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetLaneRes::~GetLaneRes() {
  // @@protoc_insertion_point(destructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLaneRes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetLaneRes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.error_;
  if (this != internal_default_instance()) delete _impl_.lane_;
}

void GetLaneRes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetLaneRes::Clear() {
// @@protoc_insertion_point(message_clear_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLaneRes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.error_ != nullptr) {
    delete _impl_.error_;
  }
  _impl_.error_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.lane_ != nullptr) {
    delete _impl_.lane_;
  }
  _impl_.lane_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLaneRes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Lane lane = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_lane(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetLaneRes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLaneRes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg error = 1;
  if (this->_internal_has_error()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::error(this),
        _Internal::error(this).GetCachedSize(), target, stream);
  }

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Lane lane = 2;
  if (this->_internal_has_lane()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::lane(this),
        _Internal::lane(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLaneRes)
  return target;
}

size_t GetLaneRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLaneRes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg error = 1;
  if (this->_internal_has_error()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.error_);
  }

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Lane lane = 2;
  if (this->_internal_has_lane()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.lane_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetLaneRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetLaneRes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetLaneRes::GetClassData() const { return &_class_data_; }


void GetLaneRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetLaneRes*>(&to_msg);
  auto& from = static_cast<const GetLaneRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLaneRes)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_error()) {
    _this->_internal_mutable_error()->::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg::MergeFrom(
        from._internal_error());
  }
  if (from._internal_has_lane()) {
    _this->_internal_mutable_lane()->::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Lane::MergeFrom(
        from._internal_lane());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetLaneRes::CopyFrom(const GetLaneRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetLaneRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLaneRes::IsInitialized() const {
  return true;
}

void GetLaneRes::InternalSwap(GetLaneRes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetLaneRes, _impl_.lane_)
      + sizeof(GetLaneRes::_impl_.lane_)
      - PROTOBUF_FIELD_OFFSET(GetLaneRes, _impl_.error_)>(
          reinterpret_cast<char*>(&_impl_.error_),
          reinterpret_cast<char*>(&other->_impl_.error_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLaneRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[39]);
}

// ===================================================================

class GetJunctionReq::_Internal {
 public:
};

GetJunctionReq::GetJunctionReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetJunctionReq)
}
GetJunctionReq::GetJunctionReq(const GetJunctionReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetJunctionReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.simulation_id_){}
    , decltype(_impl_.junction_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.simulation_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.simulation_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_simulation_id().empty()) {
    _this->_impl_.simulation_id_.Set(from._internal_simulation_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.junction_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.junction_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_junction_id().empty()) {
    _this->_impl_.junction_id_.Set(from._internal_junction_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetJunctionReq)
}

inline void GetJunctionReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.simulation_id_){}
    , decltype(_impl_.junction_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.simulation_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.simulation_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.junction_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.junction_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetJunctionReq::~GetJunctionReq() {
  // @@protoc_insertion_point(destructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetJunctionReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetJunctionReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.simulation_id_.Destroy();
  _impl_.junction_id_.Destroy();
}

void GetJunctionReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetJunctionReq::Clear() {
// @@protoc_insertion_point(message_clear_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetJunctionReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.simulation_id_.ClearToEmpty();
  _impl_.junction_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetJunctionReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string simulation_id = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_simulation_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetJunctionReq.simulation_id"));
        } else
          goto handle_unusual;
        continue;
      // string junction_id = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_junction_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetJunctionReq.junction_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetJunctionReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetJunctionReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string simulation_id = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_simulation_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_simulation_id().data(), static_cast<int>(this->_internal_simulation_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetJunctionReq.simulation_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_simulation_id(), target);
  }

  // string junction_id = 2 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_junction_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_junction_id().data(), static_cast<int>(this->_internal_junction_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetJunctionReq.junction_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_junction_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetJunctionReq)
  return target;
}

size_t GetJunctionReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetJunctionReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string simulation_id = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_simulation_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_simulation_id());
  }

  // string junction_id = 2 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_junction_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_junction_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetJunctionReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetJunctionReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetJunctionReq::GetClassData() const { return &_class_data_; }


void GetJunctionReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetJunctionReq*>(&to_msg);
  auto& from = static_cast<const GetJunctionReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetJunctionReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_simulation_id().empty()) {
    _this->_internal_set_simulation_id(from._internal_simulation_id());
  }
  if (!from._internal_junction_id().empty()) {
    _this->_internal_set_junction_id(from._internal_junction_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetJunctionReq::CopyFrom(const GetJunctionReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetJunctionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetJunctionReq::IsInitialized() const {
  return true;
}

void GetJunctionReq::InternalSwap(GetJunctionReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.simulation_id_, lhs_arena,
      &other->_impl_.simulation_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.junction_id_, lhs_arena,
      &other->_impl_.junction_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetJunctionReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[40]);
}

// ===================================================================

class GetJunctionRes::_Internal {
 public:
  static const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg& error(const GetJunctionRes* msg);
  static const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Junction& junction(const GetJunctionRes* msg);
};

const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg&
GetJunctionRes::_Internal::error(const GetJunctionRes* msg) {
  return *msg->_impl_.error_;
}
const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Junction&
GetJunctionRes::_Internal::junction(const GetJunctionRes* msg) {
  return *msg->_impl_.junction_;
}
void GetJunctionRes::clear_junction() {
  if (GetArenaForAllocation() == nullptr && _impl_.junction_ != nullptr) {
    delete _impl_.junction_;
  }
  _impl_.junction_ = nullptr;
}
GetJunctionRes::GetJunctionRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetJunctionRes)
}
GetJunctionRes::GetJunctionRes(const GetJunctionRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetJunctionRes* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){nullptr}
    , decltype(_impl_.junction_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_error()) {
    _this->_impl_.error_ = new ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg(*from._impl_.error_);
  }
  if (from._internal_has_junction()) {
    _this->_impl_.junction_ = new ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Junction(*from._impl_.junction_);
  }
  // @@protoc_insertion_point(copy_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetJunctionRes)
}

inline void GetJunctionRes::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){nullptr}
    , decltype(_impl_.junction_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetJunctionRes::~GetJunctionRes() {
  // @@protoc_insertion_point(destructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetJunctionRes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetJunctionRes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.error_;
  if (this != internal_default_instance()) delete _impl_.junction_;
}

void GetJunctionRes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetJunctionRes::Clear() {
// @@protoc_insertion_point(message_clear_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetJunctionRes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.error_ != nullptr) {
    delete _impl_.error_;
  }
  _impl_.error_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.junction_ != nullptr) {
    delete _impl_.junction_;
  }
  _impl_.junction_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetJunctionRes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Junction junction = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_junction(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetJunctionRes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetJunctionRes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg error = 1;
  if (this->_internal_has_error()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::error(this),
        _Internal::error(this).GetCachedSize(), target, stream);
  }

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Junction junction = 2;
  if (this->_internal_has_junction()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::junction(this),
        _Internal::junction(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetJunctionRes)
  return target;
}

size_t GetJunctionRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetJunctionRes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg error = 1;
  if (this->_internal_has_error()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.error_);
  }

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Junction junction = 2;
  if (this->_internal_has_junction()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.junction_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetJunctionRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetJunctionRes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetJunctionRes::GetClassData() const { return &_class_data_; }


void GetJunctionRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetJunctionRes*>(&to_msg);
  auto& from = static_cast<const GetJunctionRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetJunctionRes)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_error()) {
    _this->_internal_mutable_error()->::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg::MergeFrom(
        from._internal_error());
  }
  if (from._internal_has_junction()) {
    _this->_internal_mutable_junction()->::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Junction::MergeFrom(
        from._internal_junction());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetJunctionRes::CopyFrom(const GetJunctionRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetJunctionRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetJunctionRes::IsInitialized() const {
  return true;
}

void GetJunctionRes::InternalSwap(GetJunctionRes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetJunctionRes, _impl_.junction_)
      + sizeof(GetJunctionRes::_impl_.junction_)
      - PROTOBUF_FIELD_OFFSET(GetJunctionRes, _impl_.error_)>(
          reinterpret_cast<char*>(&_impl_.error_),
          reinterpret_cast<char*>(&other->_impl_.error_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetJunctionRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[41]);
}

// ===================================================================

class GetSegmentReq::_Internal {
 public:
};

GetSegmentReq::GetSegmentReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetSegmentReq)
}
GetSegmentReq::GetSegmentReq(const GetSegmentReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetSegmentReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.simulation_id_){}
    , decltype(_impl_.segment_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.simulation_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.simulation_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_simulation_id().empty()) {
    _this->_impl_.simulation_id_.Set(from._internal_simulation_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.segment_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.segment_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_segment_id().empty()) {
    _this->_impl_.segment_id_.Set(from._internal_segment_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetSegmentReq)
}

inline void GetSegmentReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.simulation_id_){}
    , decltype(_impl_.segment_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.simulation_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.simulation_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.segment_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.segment_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetSegmentReq::~GetSegmentReq() {
  // @@protoc_insertion_point(destructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetSegmentReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetSegmentReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.simulation_id_.Destroy();
  _impl_.segment_id_.Destroy();
}

void GetSegmentReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetSegmentReq::Clear() {
// @@protoc_insertion_point(message_clear_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetSegmentReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.simulation_id_.ClearToEmpty();
  _impl_.segment_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSegmentReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string simulation_id = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_simulation_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetSegmentReq.simulation_id"));
        } else
          goto handle_unusual;
        continue;
      // string segment_id = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_segment_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetSegmentReq.segment_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetSegmentReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetSegmentReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string simulation_id = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_simulation_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_simulation_id().data(), static_cast<int>(this->_internal_simulation_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetSegmentReq.simulation_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_simulation_id(), target);
  }

  // string segment_id = 2 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_segment_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_segment_id().data(), static_cast<int>(this->_internal_segment_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetSegmentReq.segment_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_segment_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetSegmentReq)
  return target;
}

size_t GetSegmentReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetSegmentReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string simulation_id = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_simulation_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_simulation_id());
  }

  // string segment_id = 2 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_segment_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_segment_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSegmentReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetSegmentReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSegmentReq::GetClassData() const { return &_class_data_; }


void GetSegmentReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetSegmentReq*>(&to_msg);
  auto& from = static_cast<const GetSegmentReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetSegmentReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_simulation_id().empty()) {
    _this->_internal_set_simulation_id(from._internal_simulation_id());
  }
  if (!from._internal_segment_id().empty()) {
    _this->_internal_set_segment_id(from._internal_segment_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetSegmentReq::CopyFrom(const GetSegmentReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetSegmentReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSegmentReq::IsInitialized() const {
  return true;
}

void GetSegmentReq::InternalSwap(GetSegmentReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.simulation_id_, lhs_arena,
      &other->_impl_.simulation_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.segment_id_, lhs_arena,
      &other->_impl_.segment_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSegmentReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[42]);
}

// ===================================================================

class GetSegmentRes::_Internal {
 public:
  static const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg& error(const GetSegmentRes* msg);
  static const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Segment& segment(const GetSegmentRes* msg);
};

const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg&
GetSegmentRes::_Internal::error(const GetSegmentRes* msg) {
  return *msg->_impl_.error_;
}
const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Segment&
GetSegmentRes::_Internal::segment(const GetSegmentRes* msg) {
  return *msg->_impl_.segment_;
}
void GetSegmentRes::clear_segment() {
  if (GetArenaForAllocation() == nullptr && _impl_.segment_ != nullptr) {
    delete _impl_.segment_;
  }
  _impl_.segment_ = nullptr;
}
GetSegmentRes::GetSegmentRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetSegmentRes)
}
GetSegmentRes::GetSegmentRes(const GetSegmentRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetSegmentRes* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){nullptr}
    , decltype(_impl_.segment_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_error()) {
    _this->_impl_.error_ = new ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg(*from._impl_.error_);
  }
  if (from._internal_has_segment()) {
    _this->_impl_.segment_ = new ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Segment(*from._impl_.segment_);
  }
  // @@protoc_insertion_point(copy_constructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetSegmentRes)
}

inline void GetSegmentRes::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){nullptr}
    , decltype(_impl_.segment_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetSegmentRes::~GetSegmentRes() {
  // @@protoc_insertion_point(destructor:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetSegmentRes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetSegmentRes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.error_;
  if (this != internal_default_instance()) delete _impl_.segment_;
}

void GetSegmentRes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetSegmentRes::Clear() {
// @@protoc_insertion_point(message_clear_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetSegmentRes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.error_ != nullptr) {
    delete _impl_.error_;
  }
  _impl_.error_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.segment_ != nullptr) {
    delete _impl_.segment_;
  }
  _impl_.segment_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSegmentRes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Segment segment = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_segment(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetSegmentRes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetSegmentRes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg error = 1;
  if (this->_internal_has_error()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::error(this),
        _Internal::error(this).GetCachedSize(), target, stream);
  }

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Segment segment = 2;
  if (this->_internal_has_segment()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::segment(this),
        _Internal::segment(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetSegmentRes)
  return target;
}

size_t GetSegmentRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetSegmentRes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.ErrorMsg error = 1;
  if (this->_internal_has_error()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.error_);
  }

  // .risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.Segment segment = 2;
  if (this->_internal_has_segment()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.segment_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSegmentRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetSegmentRes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSegmentRes::GetClassData() const { return &_class_data_; }


void GetSegmentRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetSegmentRes*>(&to_msg);
  auto& from = static_cast<const GetSegmentRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetSegmentRes)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_error()) {
    _this->_internal_mutable_error()->::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg::MergeFrom(
        from._internal_error());
  }
  if (from._internal_has_segment()) {
    _this->_internal_mutable_segment()->::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Segment::MergeFrom(
        from._internal_segment());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetSegmentRes::CopyFrom(const GetSegmentRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.GetSegmentRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSegmentRes::IsInitialized() const {
  return true;
}

void GetSegmentRes::InternalSwap(GetSegmentRes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetSegmentRes, _impl_.segment_)
      + sizeof(GetSegmentRes::_impl_.segment_)
      - PROTOBUF_FIELD_OFFSET(GetSegmentRes, _impl_.error_)>(
          reinterpret_cast<char*>(&_impl_.error_),
          reinterpret_cast<char*>(&other->_impl_.error_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSegmentRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_getter, &descriptor_table_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto_once,
      file_level_metadata_risenlighten_2flasvsim_2fsimulation_5ftask_5fkratos_2fapi_2fsimulation_2fv2_2fsimulation_2eproto[43]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace simulation
}  // namespace api
}  // namespace simulation_task_kratos
}  // namespace lasvsim
}  // namespace risenlighten
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ErrorMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::BaseInfo*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::BaseInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::BaseInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Position*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Position >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Position >(arena);
}
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::MovingInfo*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::MovingInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::MovingInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::MovingObj*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::MovingObj >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::MovingObj >(arena);
}
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Vehicle*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Vehicle >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Vehicle >(arena);
}
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::VehicleControl*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::VehicleControl >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::VehicleControl >(arena);
}
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_JunctionMapEntry_DoNotUse*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_JunctionMapEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_JunctionMapEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_SegmentMapEntry_DoNotUse*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_SegmentMapEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_SegmentMapEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_LinkMapEntry_DoNotUse*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_LinkMapEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_LinkMapEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_LaneMapEntry_DoNotUse*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_LaneMapEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_LaneMapEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_CrosswalkMapEntry_DoNotUse*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_CrosswalkMapEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_CrosswalkMapEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_StopLineMapEntry_DoNotUse*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_StopLineMapEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map_StopLineMapEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::Map >(arena);
}
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StartSimulationReq*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StartSimulationReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StartSimulationReq >(arena);
}
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StartSimulationRes*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StartSimulationRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StartSimulationRes >(arena);
}
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::NextStepReq*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::NextStepReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::NextStepReq >(arena);
}
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SimulationState*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SimulationState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SimulationState >(arena);
}
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::NextStepRes*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::NextStepRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::NextStepRes >(arena);
}
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ResetSimulationReq*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ResetSimulationReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ResetSimulationReq >(arena);
}
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ResetSimulationRes*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ResetSimulationRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ResetSimulationRes >(arena);
}
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StopSimulationReq*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StopSimulationReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StopSimulationReq >(arena);
}
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StopSimulationRes*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StopSimulationRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StopSimulationRes >(arena);
}
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetMapReq*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetMapReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetMapReq >(arena);
}
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetMapRes*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetMapRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetMapRes >(arena);
}
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetAllTrafficPartReq*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetAllTrafficPartReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetAllTrafficPartReq >(arena);
}
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetAllTrafficPartRes*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetAllTrafficPartRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetAllTrafficPartRes >(arena);
}
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SetVehicleControlReq*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SetVehicleControlReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SetVehicleControlReq >(arena);
}
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SetVehicleControlRes*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SetVehicleControlRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SetVehicleControlRes >(arena);
}
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetVehicleEgoReq*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetVehicleEgoReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetVehicleEgoReq >(arena);
}
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetVehicleEgoRes*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetVehicleEgoRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetVehicleEgoRes >(arena);
}
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsReq*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsReq >(arena);
}
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsRes_ResultsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsRes_ResultsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsRes_ResultsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsRes_item*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsRes_item >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsRes_item >(arena);
}
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsRes_arrays*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsRes_arrays >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsRes_arrays >(arena);
}
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsRes*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsRes >(arena);
}
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLinkReq*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLinkReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLinkReq >(arena);
}
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLinkRes*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLinkRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLinkRes >(arena);
}
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLaneReq*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLaneReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLaneReq >(arena);
}
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLaneRes*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLaneRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLaneRes >(arena);
}
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetJunctionReq*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetJunctionReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetJunctionReq >(arena);
}
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetJunctionRes*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetJunctionRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetJunctionRes >(arena);
}
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetSegmentReq*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetSegmentReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetSegmentReq >(arena);
}
template<> PROTOBUF_NOINLINE ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetSegmentRes*
Arena::CreateMaybeMessage< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetSegmentRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetSegmentRes >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

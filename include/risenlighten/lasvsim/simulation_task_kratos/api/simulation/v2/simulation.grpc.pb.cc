// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: risenlighten/lasvsim/simulation_task_kratos/api/simulation/v2/simulation.proto

#include "risenlighten/lasvsim/simulation_task_kratos/api/simulation/v2/simulation.pb.h"
#include "risenlighten/lasvsim/simulation_task_kratos/api/simulation/v2/simulation.grpc.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace risenlighten {
namespace lasvsim {
namespace simulation_task_kratos {
namespace api {
namespace simulation {
namespace v2 {

static const char* SimulationV2_method_names[] = {
  "/risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SimulationV2/Start",
  "/risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SimulationV2/NextStep",
  "/risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SimulationV2/ResetSimulation",
  "/risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SimulationV2/Stop",
  "/risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SimulationV2/GetMap",
  "/risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SimulationV2/GetAllTrafficPart",
  "/risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SimulationV2/SetVehicleControl",
  "/risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SimulationV2/GetVehicleEgo",
  "/risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SimulationV2/GetResults",
  "/risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SimulationV2/GetLink",
  "/risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SimulationV2/GetLane",
  "/risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SimulationV2/GetJunction",
  "/risenlighten.lasvsim.simulation_task_kratos.api.simulation.v2.SimulationV2/GetSegment",
};

std::unique_ptr< SimulationV2::Stub> SimulationV2::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< SimulationV2::Stub> stub(new SimulationV2::Stub(channel, options));
  return stub;
}

SimulationV2::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_Start_(SimulationV2_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_NextStep_(SimulationV2_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ResetSimulation_(SimulationV2_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_Stop_(SimulationV2_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetMap_(SimulationV2_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetAllTrafficPart_(SimulationV2_method_names[5], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_SetVehicleControl_(SimulationV2_method_names[6], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetVehicleEgo_(SimulationV2_method_names[7], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetResults_(SimulationV2_method_names[8], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetLink_(SimulationV2_method_names[9], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetLane_(SimulationV2_method_names[10], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetJunction_(SimulationV2_method_names[11], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetSegment_(SimulationV2_method_names[12], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status SimulationV2::Stub::Start(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StartSimulationReq& request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StartSimulationRes* response) {
  return ::grpc::internal::BlockingUnaryCall< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StartSimulationReq, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StartSimulationRes, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_Start_, context, request, response);
}

void SimulationV2::Stub::async::Start(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StartSimulationReq* request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StartSimulationRes* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StartSimulationReq, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StartSimulationRes, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_Start_, context, request, response, std::move(f));
}

void SimulationV2::Stub::async::Start(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StartSimulationReq* request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StartSimulationRes* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_Start_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StartSimulationRes>* SimulationV2::Stub::PrepareAsyncStartRaw(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StartSimulationReq& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StartSimulationRes, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StartSimulationReq, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_Start_, context, request);
}

::grpc::ClientAsyncResponseReader< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StartSimulationRes>* SimulationV2::Stub::AsyncStartRaw(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StartSimulationReq& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncStartRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status SimulationV2::Stub::NextStep(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::NextStepReq& request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::NextStepRes* response) {
  return ::grpc::internal::BlockingUnaryCall< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::NextStepReq, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::NextStepRes, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_NextStep_, context, request, response);
}

void SimulationV2::Stub::async::NextStep(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::NextStepReq* request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::NextStepRes* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::NextStepReq, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::NextStepRes, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_NextStep_, context, request, response, std::move(f));
}

void SimulationV2::Stub::async::NextStep(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::NextStepReq* request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::NextStepRes* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_NextStep_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::NextStepRes>* SimulationV2::Stub::PrepareAsyncNextStepRaw(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::NextStepReq& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::NextStepRes, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::NextStepReq, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_NextStep_, context, request);
}

::grpc::ClientAsyncResponseReader< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::NextStepRes>* SimulationV2::Stub::AsyncNextStepRaw(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::NextStepReq& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncNextStepRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status SimulationV2::Stub::ResetSimulation(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ResetSimulationReq& request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ResetSimulationRes* response) {
  return ::grpc::internal::BlockingUnaryCall< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ResetSimulationReq, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ResetSimulationRes, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ResetSimulation_, context, request, response);
}

void SimulationV2::Stub::async::ResetSimulation(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ResetSimulationReq* request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ResetSimulationRes* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ResetSimulationReq, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ResetSimulationRes, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ResetSimulation_, context, request, response, std::move(f));
}

void SimulationV2::Stub::async::ResetSimulation(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ResetSimulationReq* request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ResetSimulationRes* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ResetSimulation_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ResetSimulationRes>* SimulationV2::Stub::PrepareAsyncResetSimulationRaw(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ResetSimulationReq& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ResetSimulationRes, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ResetSimulationReq, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ResetSimulation_, context, request);
}

::grpc::ClientAsyncResponseReader< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ResetSimulationRes>* SimulationV2::Stub::AsyncResetSimulationRaw(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ResetSimulationReq& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncResetSimulationRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status SimulationV2::Stub::Stop(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StopSimulationReq& request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StopSimulationRes* response) {
  return ::grpc::internal::BlockingUnaryCall< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StopSimulationReq, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StopSimulationRes, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_Stop_, context, request, response);
}

void SimulationV2::Stub::async::Stop(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StopSimulationReq* request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StopSimulationRes* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StopSimulationReq, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StopSimulationRes, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_Stop_, context, request, response, std::move(f));
}

void SimulationV2::Stub::async::Stop(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StopSimulationReq* request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StopSimulationRes* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_Stop_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StopSimulationRes>* SimulationV2::Stub::PrepareAsyncStopRaw(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StopSimulationReq& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StopSimulationRes, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StopSimulationReq, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_Stop_, context, request);
}

::grpc::ClientAsyncResponseReader< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StopSimulationRes>* SimulationV2::Stub::AsyncStopRaw(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StopSimulationReq& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncStopRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status SimulationV2::Stub::GetMap(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetMapReq& request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetMapRes* response) {
  return ::grpc::internal::BlockingUnaryCall< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetMapReq, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetMapRes, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetMap_, context, request, response);
}

void SimulationV2::Stub::async::GetMap(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetMapReq* request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetMapRes* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetMapReq, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetMapRes, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetMap_, context, request, response, std::move(f));
}

void SimulationV2::Stub::async::GetMap(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetMapReq* request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetMapRes* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetMap_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetMapRes>* SimulationV2::Stub::PrepareAsyncGetMapRaw(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetMapReq& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetMapRes, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetMapReq, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetMap_, context, request);
}

::grpc::ClientAsyncResponseReader< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetMapRes>* SimulationV2::Stub::AsyncGetMapRaw(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetMapReq& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetMapRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status SimulationV2::Stub::GetAllTrafficPart(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetAllTrafficPartReq& request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetAllTrafficPartRes* response) {
  return ::grpc::internal::BlockingUnaryCall< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetAllTrafficPartReq, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetAllTrafficPartRes, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetAllTrafficPart_, context, request, response);
}

void SimulationV2::Stub::async::GetAllTrafficPart(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetAllTrafficPartReq* request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetAllTrafficPartRes* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetAllTrafficPartReq, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetAllTrafficPartRes, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetAllTrafficPart_, context, request, response, std::move(f));
}

void SimulationV2::Stub::async::GetAllTrafficPart(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetAllTrafficPartReq* request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetAllTrafficPartRes* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetAllTrafficPart_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetAllTrafficPartRes>* SimulationV2::Stub::PrepareAsyncGetAllTrafficPartRaw(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetAllTrafficPartReq& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetAllTrafficPartRes, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetAllTrafficPartReq, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetAllTrafficPart_, context, request);
}

::grpc::ClientAsyncResponseReader< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetAllTrafficPartRes>* SimulationV2::Stub::AsyncGetAllTrafficPartRaw(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetAllTrafficPartReq& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetAllTrafficPartRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status SimulationV2::Stub::SetVehicleControl(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SetVehicleControlReq& request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SetVehicleControlRes* response) {
  return ::grpc::internal::BlockingUnaryCall< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SetVehicleControlReq, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SetVehicleControlRes, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_SetVehicleControl_, context, request, response);
}

void SimulationV2::Stub::async::SetVehicleControl(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SetVehicleControlReq* request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SetVehicleControlRes* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SetVehicleControlReq, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SetVehicleControlRes, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_SetVehicleControl_, context, request, response, std::move(f));
}

void SimulationV2::Stub::async::SetVehicleControl(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SetVehicleControlReq* request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SetVehicleControlRes* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_SetVehicleControl_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SetVehicleControlRes>* SimulationV2::Stub::PrepareAsyncSetVehicleControlRaw(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SetVehicleControlReq& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SetVehicleControlRes, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SetVehicleControlReq, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_SetVehicleControl_, context, request);
}

::grpc::ClientAsyncResponseReader< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SetVehicleControlRes>* SimulationV2::Stub::AsyncSetVehicleControlRaw(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SetVehicleControlReq& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncSetVehicleControlRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status SimulationV2::Stub::GetVehicleEgo(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetVehicleEgoReq& request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetVehicleEgoRes* response) {
  return ::grpc::internal::BlockingUnaryCall< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetVehicleEgoReq, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetVehicleEgoRes, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetVehicleEgo_, context, request, response);
}

void SimulationV2::Stub::async::GetVehicleEgo(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetVehicleEgoReq* request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetVehicleEgoRes* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetVehicleEgoReq, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetVehicleEgoRes, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetVehicleEgo_, context, request, response, std::move(f));
}

void SimulationV2::Stub::async::GetVehicleEgo(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetVehicleEgoReq* request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetVehicleEgoRes* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetVehicleEgo_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetVehicleEgoRes>* SimulationV2::Stub::PrepareAsyncGetVehicleEgoRaw(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetVehicleEgoReq& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetVehicleEgoRes, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetVehicleEgoReq, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetVehicleEgo_, context, request);
}

::grpc::ClientAsyncResponseReader< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetVehicleEgoRes>* SimulationV2::Stub::AsyncGetVehicleEgoRaw(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetVehicleEgoReq& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetVehicleEgoRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status SimulationV2::Stub::GetResults(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsReq& request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsRes* response) {
  return ::grpc::internal::BlockingUnaryCall< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsReq, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsRes, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetResults_, context, request, response);
}

void SimulationV2::Stub::async::GetResults(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsReq* request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsRes* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsReq, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsRes, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetResults_, context, request, response, std::move(f));
}

void SimulationV2::Stub::async::GetResults(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsReq* request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsRes* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetResults_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsRes>* SimulationV2::Stub::PrepareAsyncGetResultsRaw(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsReq& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsRes, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsReq, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetResults_, context, request);
}

::grpc::ClientAsyncResponseReader< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsRes>* SimulationV2::Stub::AsyncGetResultsRaw(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsReq& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetResultsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status SimulationV2::Stub::GetLink(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLinkReq& request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLinkRes* response) {
  return ::grpc::internal::BlockingUnaryCall< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLinkReq, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLinkRes, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetLink_, context, request, response);
}

void SimulationV2::Stub::async::GetLink(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLinkReq* request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLinkRes* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLinkReq, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLinkRes, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetLink_, context, request, response, std::move(f));
}

void SimulationV2::Stub::async::GetLink(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLinkReq* request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLinkRes* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetLink_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLinkRes>* SimulationV2::Stub::PrepareAsyncGetLinkRaw(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLinkReq& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLinkRes, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLinkReq, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetLink_, context, request);
}

::grpc::ClientAsyncResponseReader< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLinkRes>* SimulationV2::Stub::AsyncGetLinkRaw(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLinkReq& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetLinkRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status SimulationV2::Stub::GetLane(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLaneReq& request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLaneRes* response) {
  return ::grpc::internal::BlockingUnaryCall< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLaneReq, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLaneRes, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetLane_, context, request, response);
}

void SimulationV2::Stub::async::GetLane(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLaneReq* request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLaneRes* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLaneReq, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLaneRes, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetLane_, context, request, response, std::move(f));
}

void SimulationV2::Stub::async::GetLane(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLaneReq* request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLaneRes* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetLane_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLaneRes>* SimulationV2::Stub::PrepareAsyncGetLaneRaw(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLaneReq& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLaneRes, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLaneReq, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetLane_, context, request);
}

::grpc::ClientAsyncResponseReader< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLaneRes>* SimulationV2::Stub::AsyncGetLaneRaw(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLaneReq& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetLaneRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status SimulationV2::Stub::GetJunction(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetJunctionReq& request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetJunctionRes* response) {
  return ::grpc::internal::BlockingUnaryCall< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetJunctionReq, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetJunctionRes, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetJunction_, context, request, response);
}

void SimulationV2::Stub::async::GetJunction(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetJunctionReq* request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetJunctionRes* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetJunctionReq, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetJunctionRes, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetJunction_, context, request, response, std::move(f));
}

void SimulationV2::Stub::async::GetJunction(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetJunctionReq* request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetJunctionRes* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetJunction_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetJunctionRes>* SimulationV2::Stub::PrepareAsyncGetJunctionRaw(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetJunctionReq& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetJunctionRes, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetJunctionReq, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetJunction_, context, request);
}

::grpc::ClientAsyncResponseReader< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetJunctionRes>* SimulationV2::Stub::AsyncGetJunctionRaw(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetJunctionReq& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetJunctionRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status SimulationV2::Stub::GetSegment(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetSegmentReq& request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetSegmentRes* response) {
  return ::grpc::internal::BlockingUnaryCall< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetSegmentReq, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetSegmentRes, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetSegment_, context, request, response);
}

void SimulationV2::Stub::async::GetSegment(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetSegmentReq* request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetSegmentRes* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetSegmentReq, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetSegmentRes, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetSegment_, context, request, response, std::move(f));
}

void SimulationV2::Stub::async::GetSegment(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetSegmentReq* request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetSegmentRes* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetSegment_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetSegmentRes>* SimulationV2::Stub::PrepareAsyncGetSegmentRaw(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetSegmentReq& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetSegmentRes, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetSegmentReq, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetSegment_, context, request);
}

::grpc::ClientAsyncResponseReader< ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetSegmentRes>* SimulationV2::Stub::AsyncGetSegmentRaw(::grpc::ClientContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetSegmentReq& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetSegmentRaw(context, request, cq);
  result->StartCall();
  return result;
}

SimulationV2::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      SimulationV2_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< SimulationV2::Service, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StartSimulationReq, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StartSimulationRes, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](SimulationV2::Service* service,
             ::grpc::ServerContext* ctx,
             const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StartSimulationReq* req,
             ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StartSimulationRes* resp) {
               return service->Start(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      SimulationV2_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< SimulationV2::Service, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::NextStepReq, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::NextStepRes, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](SimulationV2::Service* service,
             ::grpc::ServerContext* ctx,
             const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::NextStepReq* req,
             ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::NextStepRes* resp) {
               return service->NextStep(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      SimulationV2_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< SimulationV2::Service, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ResetSimulationReq, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ResetSimulationRes, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](SimulationV2::Service* service,
             ::grpc::ServerContext* ctx,
             const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ResetSimulationReq* req,
             ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ResetSimulationRes* resp) {
               return service->ResetSimulation(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      SimulationV2_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< SimulationV2::Service, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StopSimulationReq, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StopSimulationRes, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](SimulationV2::Service* service,
             ::grpc::ServerContext* ctx,
             const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StopSimulationReq* req,
             ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StopSimulationRes* resp) {
               return service->Stop(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      SimulationV2_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< SimulationV2::Service, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetMapReq, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetMapRes, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](SimulationV2::Service* service,
             ::grpc::ServerContext* ctx,
             const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetMapReq* req,
             ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetMapRes* resp) {
               return service->GetMap(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      SimulationV2_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< SimulationV2::Service, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetAllTrafficPartReq, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetAllTrafficPartRes, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](SimulationV2::Service* service,
             ::grpc::ServerContext* ctx,
             const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetAllTrafficPartReq* req,
             ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetAllTrafficPartRes* resp) {
               return service->GetAllTrafficPart(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      SimulationV2_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< SimulationV2::Service, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SetVehicleControlReq, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SetVehicleControlRes, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](SimulationV2::Service* service,
             ::grpc::ServerContext* ctx,
             const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SetVehicleControlReq* req,
             ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SetVehicleControlRes* resp) {
               return service->SetVehicleControl(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      SimulationV2_method_names[7],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< SimulationV2::Service, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetVehicleEgoReq, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetVehicleEgoRes, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](SimulationV2::Service* service,
             ::grpc::ServerContext* ctx,
             const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetVehicleEgoReq* req,
             ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetVehicleEgoRes* resp) {
               return service->GetVehicleEgo(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      SimulationV2_method_names[8],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< SimulationV2::Service, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsReq, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsRes, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](SimulationV2::Service* service,
             ::grpc::ServerContext* ctx,
             const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsReq* req,
             ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsRes* resp) {
               return service->GetResults(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      SimulationV2_method_names[9],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< SimulationV2::Service, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLinkReq, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLinkRes, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](SimulationV2::Service* service,
             ::grpc::ServerContext* ctx,
             const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLinkReq* req,
             ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLinkRes* resp) {
               return service->GetLink(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      SimulationV2_method_names[10],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< SimulationV2::Service, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLaneReq, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLaneRes, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](SimulationV2::Service* service,
             ::grpc::ServerContext* ctx,
             const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLaneReq* req,
             ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLaneRes* resp) {
               return service->GetLane(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      SimulationV2_method_names[11],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< SimulationV2::Service, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetJunctionReq, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetJunctionRes, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](SimulationV2::Service* service,
             ::grpc::ServerContext* ctx,
             const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetJunctionReq* req,
             ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetJunctionRes* resp) {
               return service->GetJunction(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      SimulationV2_method_names[12],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< SimulationV2::Service, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetSegmentReq, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetSegmentRes, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](SimulationV2::Service* service,
             ::grpc::ServerContext* ctx,
             const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetSegmentReq* req,
             ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetSegmentRes* resp) {
               return service->GetSegment(ctx, req, resp);
             }, this)));
}

SimulationV2::Service::~Service() {
}

::grpc::Status SimulationV2::Service::Start(::grpc::ServerContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StartSimulationReq* request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StartSimulationRes* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status SimulationV2::Service::NextStep(::grpc::ServerContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::NextStepReq* request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::NextStepRes* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status SimulationV2::Service::ResetSimulation(::grpc::ServerContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ResetSimulationReq* request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::ResetSimulationRes* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status SimulationV2::Service::Stop(::grpc::ServerContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StopSimulationReq* request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::StopSimulationRes* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status SimulationV2::Service::GetMap(::grpc::ServerContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetMapReq* request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetMapRes* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status SimulationV2::Service::GetAllTrafficPart(::grpc::ServerContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetAllTrafficPartReq* request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetAllTrafficPartRes* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status SimulationV2::Service::SetVehicleControl(::grpc::ServerContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SetVehicleControlReq* request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::SetVehicleControlRes* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status SimulationV2::Service::GetVehicleEgo(::grpc::ServerContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetVehicleEgoReq* request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetVehicleEgoRes* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status SimulationV2::Service::GetResults(::grpc::ServerContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsReq* request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetResultsRes* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status SimulationV2::Service::GetLink(::grpc::ServerContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLinkReq* request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLinkRes* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status SimulationV2::Service::GetLane(::grpc::ServerContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLaneReq* request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetLaneRes* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status SimulationV2::Service::GetJunction(::grpc::ServerContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetJunctionReq* request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetJunctionRes* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status SimulationV2::Service::GetSegment(::grpc::ServerContext* context, const ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetSegmentReq* request, ::risenlighten::lasvsim::simulation_task_kratos::api::simulation::v2::GetSegmentRes* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace risenlighten
}  // namespace lasvsim
}  // namespace simulation_task_kratos
}  // namespace api
}  // namespace simulation
}  // namespace v2

